{"version":3,"sources":["webpack://GroveReactMapComponents/webpack/universalModuleDefinition","webpack://GroveReactMapComponents/webpack/bootstrap","webpack://GroveReactMapComponents/external {\"root\":\"React\",\"commonjs2\":\"react\",\"commonjs\":\"react\",\"amd\":\"react\"}","webpack://GroveReactMapComponents/./node_modules/rbush/rbush.min.js","webpack://GroveReactMapComponents/./src/MapContext.js","webpack://GroveReactMapComponents/./node_modules/ol/MapEventType.js","webpack://GroveReactMapComponents/./node_modules/ol/util.js","webpack://GroveReactMapComponents/./node_modules/ol/ObjectEventType.js","webpack://GroveReactMapComponents/./node_modules/ol/obj.js","webpack://GroveReactMapComponents/./node_modules/ol/events.js","webpack://GroveReactMapComponents/./node_modules/ol/Disposable.js","webpack://GroveReactMapComponents/./node_modules/ol/array.js","webpack://GroveReactMapComponents/./node_modules/ol/functions.js","webpack://GroveReactMapComponents/./node_modules/ol/events/Event.js","webpack://GroveReactMapComponents/./node_modules/ol/events/Target.js","webpack://GroveReactMapComponents/./node_modules/ol/events/EventType.js","webpack://GroveReactMapComponents/./node_modules/ol/Observable.js","webpack://GroveReactMapComponents/./node_modules/ol/Object.js","webpack://GroveReactMapComponents/./node_modules/ol/OverlayPositioning.js","webpack://GroveReactMapComponents/./node_modules/ol/css.js","webpack://GroveReactMapComponents/./node_modules/ol/dom.js","webpack://GroveReactMapComponents/./node_modules/ol/AssertionError.js","webpack://GroveReactMapComponents/./node_modules/ol/asserts.js","webpack://GroveReactMapComponents/./node_modules/ol/extent/Corner.js","webpack://GroveReactMapComponents/./node_modules/ol/extent/Relationship.js","webpack://GroveReactMapComponents/./node_modules/ol/extent.js","webpack://GroveReactMapComponents/./node_modules/ol/Overlay.js","webpack://GroveReactMapComponents/./node_modules/ol/CollectionEventType.js","webpack://GroveReactMapComponents/./node_modules/ol/MapBrowserEventType.js","webpack://GroveReactMapComponents/./node_modules/ol/has.js","webpack://GroveReactMapComponents/./node_modules/ol/events/condition.js","webpack://GroveReactMapComponents/./node_modules/ol/geom/GeometryType.js","webpack://GroveReactMapComponents/./node_modules/ol/easing.js","webpack://GroveReactMapComponents/./node_modules/ol/interaction/Property.js","webpack://GroveReactMapComponents/./node_modules/ol/interaction/Interaction.js","webpack://GroveReactMapComponents/./node_modules/ol/math.js","webpack://GroveReactMapComponents/./node_modules/ol/color.js","webpack://GroveReactMapComponents/./node_modules/ol/colorlike.js","webpack://GroveReactMapComponents/./node_modules/ol/ImageState.js","webpack://GroveReactMapComponents/./node_modules/ol/transform.js","webpack://GroveReactMapComponents/./node_modules/ol/structs/LRUCache.js","webpack://GroveReactMapComponents/./node_modules/ol/render/canvas.js","webpack://GroveReactMapComponents/./node_modules/ol/render/canvas/LabelCache.js","webpack://GroveReactMapComponents/./node_modules/ol/style/Image.js","webpack://GroveReactMapComponents/./node_modules/ol/style/RegularShape.js","webpack://GroveReactMapComponents/./node_modules/ol/style/Circle.js","webpack://GroveReactMapComponents/./node_modules/ol/style/Fill.js","webpack://GroveReactMapComponents/./node_modules/ol/style/Stroke.js","webpack://GroveReactMapComponents/./node_modules/ol/style/Style.js","webpack://GroveReactMapComponents/./node_modules/ol/Collection.js","webpack://GroveReactMapComponents/./node_modules/ol/interaction/Select.js","webpack://GroveReactMapComponents/./node_modules/ol/sphere.js","webpack://GroveReactMapComponents/./node_modules/ol/proj/Units.js","webpack://GroveReactMapComponents/./node_modules/ol/proj/Projection.js","webpack://GroveReactMapComponents/./node_modules/ol/proj/epsg3857.js","webpack://GroveReactMapComponents/./node_modules/ol/proj/epsg4326.js","webpack://GroveReactMapComponents/./node_modules/ol/proj/transforms.js","webpack://GroveReactMapComponents/./node_modules/ol/proj/projections.js","webpack://GroveReactMapComponents/./node_modules/ol/proj.js","webpack://GroveReactMapComponents/./src/InfoWindow.js","webpack://GroveReactMapComponents/./node_modules/ol/Feature.js","webpack://GroveReactMapComponents/./node_modules/ol/geom/flat/transform.js","webpack://GroveReactMapComponents/./node_modules/ol/geom/Geometry.js","webpack://GroveReactMapComponents/./node_modules/ol/geom/GeometryLayout.js","webpack://GroveReactMapComponents/./node_modules/ol/geom/SimpleGeometry.js","webpack://GroveReactMapComponents/./node_modules/ol/geom/flat/deflate.js","webpack://GroveReactMapComponents/./node_modules/ol/geom/Point.js","webpack://GroveReactMapComponents/./node_modules/ol/style/TextPlacement.js","webpack://GroveReactMapComponents/./node_modules/ol/style/Text.js","webpack://GroveReactMapComponents/./node_modules/ol/layer/Property.js","webpack://GroveReactMapComponents/./node_modules/ol/layer/Base.js","webpack://GroveReactMapComponents/./node_modules/ol/render/EventType.js","webpack://GroveReactMapComponents/./node_modules/ol/source/State.js","webpack://GroveReactMapComponents/./node_modules/ol/layer/Layer.js","webpack://GroveReactMapComponents/./node_modules/ol/layer/BaseVector.js","webpack://GroveReactMapComponents/./node_modules/ol/ViewHint.js","webpack://GroveReactMapComponents/./node_modules/ol/geom/flat/inflate.js","webpack://GroveReactMapComponents/./node_modules/ol/render/VectorContext.js","webpack://GroveReactMapComponents/./node_modules/ol/render/canvas/Instruction.js","webpack://GroveReactMapComponents/./node_modules/ol/render/canvas/Builder.js","webpack://GroveReactMapComponents/./node_modules/ol/render/canvas/ImageBuilder.js","webpack://GroveReactMapComponents/./node_modules/ol/render/canvas/LineStringBuilder.js","webpack://GroveReactMapComponents/./node_modules/ol/geom/flat/simplify.js","webpack://GroveReactMapComponents/./node_modules/ol/render/canvas/PolygonBuilder.js","webpack://GroveReactMapComponents/./node_modules/ol/geom/flat/straightchunk.js","webpack://GroveReactMapComponents/./node_modules/ol/render/canvas/TextBuilder.js","webpack://GroveReactMapComponents/./node_modules/ol/render/canvas/BuilderGroup.js","webpack://GroveReactMapComponents/./node_modules/ol/render/canvas/BuilderType.js","webpack://GroveReactMapComponents/./node_modules/ol/geom/flat/length.js","webpack://GroveReactMapComponents/./node_modules/ol/geom/flat/textpath.js","webpack://GroveReactMapComponents/./node_modules/ol/render/canvas/Executor.js","webpack://GroveReactMapComponents/./node_modules/ol/render/canvas/ExecutorGroup.js","webpack://GroveReactMapComponents/./node_modules/ol/render/Event.js","webpack://GroveReactMapComponents/./node_modules/ol/renderer/Layer.js","webpack://GroveReactMapComponents/./node_modules/ol/renderer/canvas/Layer.js","webpack://GroveReactMapComponents/./node_modules/ol/renderer/vector.js","webpack://GroveReactMapComponents/./node_modules/ol/renderer/canvas/VectorLayer.js","webpack://GroveReactMapComponents/./node_modules/ol/layer/Vector.js","webpack://GroveReactMapComponents/./node_modules/ol/format/FormatType.js","webpack://GroveReactMapComponents/./node_modules/ol/featureloader.js","webpack://GroveReactMapComponents/./node_modules/ol/loadingstrategy.js","webpack://GroveReactMapComponents/./node_modules/ol/source/Source.js","webpack://GroveReactMapComponents/./node_modules/ol/source/VectorEventType.js","webpack://GroveReactMapComponents/./node_modules/ol/structs/RBush.js","webpack://GroveReactMapComponents/./node_modules/ol/source/Vector.js","webpack://GroveReactMapComponents/./node_modules/ol/coordinate.js","webpack://GroveReactMapComponents/./node_modules/ol/source/Cluster.js","webpack://GroveReactMapComponents/./src/FeatureLayer.js","webpack://GroveReactMapComponents/./node_modules/ol/geom/flat/closest.js","webpack://GroveReactMapComponents/./node_modules/ol/geom/flat/interpolate.js","webpack://GroveReactMapComponents/./node_modules/ol/geom/flat/contains.js","webpack://GroveReactMapComponents/./node_modules/ol/geom/flat/segments.js","webpack://GroveReactMapComponents/./node_modules/ol/geom/flat/intersectsextent.js","webpack://GroveReactMapComponents/./node_modules/ol/geom/LineString.js","webpack://GroveReactMapComponents/./node_modules/ol/style/IconAnchorUnits.js","webpack://GroveReactMapComponents/./node_modules/ol/style/IconImageCache.js","webpack://GroveReactMapComponents/./node_modules/ol/ImageBase.js","webpack://GroveReactMapComponents/./node_modules/ol/Image.js","webpack://GroveReactMapComponents/./node_modules/ol/style/IconImage.js","webpack://GroveReactMapComponents/./node_modules/ol/style/IconOrigin.js","webpack://GroveReactMapComponents/./node_modules/ol/style/Icon.js","webpack://GroveReactMapComponents/./src/LineStringLayer.js","webpack://GroveReactMapComponents/./src/MapProvider.js","webpack://GroveReactMapComponents/./node_modules/ol/MapEvent.js","webpack://GroveReactMapComponents/./node_modules/ol/MapBrowserEvent.js","webpack://GroveReactMapComponents/./node_modules/ol/MapBrowserPointerEvent.js","webpack://GroveReactMapComponents/./node_modules/ol/pointer/EventType.js","webpack://GroveReactMapComponents/./node_modules/ol/MapBrowserEventHandler.js","webpack://GroveReactMapComponents/./node_modules/ol/MapProperty.js","webpack://GroveReactMapComponents/./node_modules/ol/TileState.js","webpack://GroveReactMapComponents/./node_modules/ol/structs/PriorityQueue.js","webpack://GroveReactMapComponents/./node_modules/ol/TileQueue.js","webpack://GroveReactMapComponents/./node_modules/ol/tilegrid/common.js","webpack://GroveReactMapComponents/./node_modules/ol/centerconstraint.js","webpack://GroveReactMapComponents/./node_modules/ol/resolutionconstraint.js","webpack://GroveReactMapComponents/./node_modules/ol/rotationconstraint.js","webpack://GroveReactMapComponents/./node_modules/ol/ViewProperty.js","webpack://GroveReactMapComponents/./node_modules/ol/geom/flat/area.js","webpack://GroveReactMapComponents/./node_modules/ol/geom/LinearRing.js","webpack://GroveReactMapComponents/./node_modules/ol/geom/flat/interiorpoint.js","webpack://GroveReactMapComponents/./node_modules/ol/geom/flat/reverse.js","webpack://GroveReactMapComponents/./node_modules/ol/geom/flat/orient.js","webpack://GroveReactMapComponents/./node_modules/ol/geom/Polygon.js","webpack://GroveReactMapComponents/./node_modules/ol/View.js","webpack://GroveReactMapComponents/./node_modules/ol/layer/Group.js","webpack://GroveReactMapComponents/./node_modules/ol/size.js","webpack://GroveReactMapComponents/./node_modules/ol/PluggableMap.js","webpack://GroveReactMapComponents/./node_modules/ol/control/Control.js","webpack://GroveReactMapComponents/./node_modules/ol/control/Attribution.js","webpack://GroveReactMapComponents/./node_modules/ol/control/Rotate.js","webpack://GroveReactMapComponents/./node_modules/ol/control/Zoom.js","webpack://GroveReactMapComponents/./node_modules/ol/control.js","webpack://GroveReactMapComponents/./node_modules/ol/Kinetic.js","webpack://GroveReactMapComponents/./node_modules/ol/interaction/DoubleClickZoom.js","webpack://GroveReactMapComponents/./node_modules/ol/interaction/Pointer.js","webpack://GroveReactMapComponents/./node_modules/ol/interaction/DragPan.js","webpack://GroveReactMapComponents/./node_modules/ol/interaction/DragRotate.js","webpack://GroveReactMapComponents/./node_modules/ol/render/Box.js","webpack://GroveReactMapComponents/./node_modules/ol/interaction/DragBox.js","webpack://GroveReactMapComponents/./node_modules/ol/interaction/DragZoom.js","webpack://GroveReactMapComponents/./node_modules/ol/events/KeyCode.js","webpack://GroveReactMapComponents/./node_modules/ol/interaction/KeyboardPan.js","webpack://GroveReactMapComponents/./node_modules/ol/interaction/KeyboardZoom.js","webpack://GroveReactMapComponents/./node_modules/ol/interaction/MouseWheelZoom.js","webpack://GroveReactMapComponents/./node_modules/ol/interaction/PinchRotate.js","webpack://GroveReactMapComponents/./node_modules/ol/interaction/PinchZoom.js","webpack://GroveReactMapComponents/./node_modules/ol/render/canvas/Immediate.js","webpack://GroveReactMapComponents/./node_modules/ol/renderer/Map.js","webpack://GroveReactMapComponents/./node_modules/ol/render.js","webpack://GroveReactMapComponents/./node_modules/ol/renderer/Composite.js","webpack://GroveReactMapComponents/./node_modules/ol/Map.js","webpack://GroveReactMapComponents/./node_modules/ol/interaction.js","webpack://GroveReactMapComponents/./node_modules/ol/layer/TileProperty.js","webpack://GroveReactMapComponents/./node_modules/ol/layer/BaseTile.js","webpack://GroveReactMapComponents/./node_modules/ol/TileRange.js","webpack://GroveReactMapComponents/./node_modules/ol/renderer/canvas/TileLayer.js","webpack://GroveReactMapComponents/./node_modules/ol/layer/Tile.js","webpack://GroveReactMapComponents/./node_modules/ol/tilecoord.js","webpack://GroveReactMapComponents/./node_modules/ol/tileurlfunction.js","webpack://GroveReactMapComponents/./node_modules/ol/reproj/common.js","webpack://GroveReactMapComponents/./node_modules/ol/Tile.js","webpack://GroveReactMapComponents/./node_modules/ol/ImageTile.js","webpack://GroveReactMapComponents/./node_modules/ol/TileCache.js","webpack://GroveReactMapComponents/./node_modules/ol/reproj.js","webpack://GroveReactMapComponents/./node_modules/ol/reproj/Triangulation.js","webpack://GroveReactMapComponents/./node_modules/ol/reproj/Tile.js","webpack://GroveReactMapComponents/./node_modules/ol/tilegrid/TileGrid.js","webpack://GroveReactMapComponents/./node_modules/ol/tilegrid.js","webpack://GroveReactMapComponents/./node_modules/ol/source/Tile.js","webpack://GroveReactMapComponents/./node_modules/ol/source/TileEventType.js","webpack://GroveReactMapComponents/./node_modules/ol/source/UrlTile.js","webpack://GroveReactMapComponents/./node_modules/ol/source/TileImage.js","webpack://GroveReactMapComponents/./node_modules/ol/source/BingMaps.js","webpack://GroveReactMapComponents/./node_modules/ol/net.js","webpack://GroveReactMapComponents/./node_modules/ol/source/XYZ.js","webpack://GroveReactMapComponents/./node_modules/ol/source/OSM.js","webpack://GroveReactMapComponents/./node_modules/ol/control/FullScreen.js","webpack://GroveReactMapComponents/./node_modules/ol/control/MousePosition.js","webpack://GroveReactMapComponents/./src/OpenLayersMap.js","webpack://GroveReactMapComponents/./node_modules/ol/format/Feature.js","webpack://GroveReactMapComponents/./node_modules/ol/format/JSONFeature.js","webpack://GroveReactMapComponents/./node_modules/ol/geom/GeometryCollection.js","webpack://GroveReactMapComponents/./node_modules/ol/geom/MultiLineString.js","webpack://GroveReactMapComponents/./node_modules/ol/geom/MultiPoint.js","webpack://GroveReactMapComponents/./node_modules/ol/geom/MultiPolygon.js","webpack://GroveReactMapComponents/./node_modules/ol/geom/flat/center.js","webpack://GroveReactMapComponents/./node_modules/ol/format/GeoJSON.js","webpack://GroveReactMapComponents/./node_modules/ol/geom/Circle.js","webpack://GroveReactMapComponents/./node_modules/ol/interaction/Draw.js","webpack://GroveReactMapComponents/./src/mapUtils.js","webpack://GroveReactMapComponents/./src/OpenLayersSearchMap.js","webpack://GroveReactMapComponents/./src/index.js","webpack://GroveReactMapComponents/./node_modules/@openlayers/pepjs/dist/pep.js"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__0__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","e","a","h","Math","log","f","exp","u","sqrt","max","floor","min","x","length","this","_maxEntries","_minEntries","ceil","clear","indexOf","children","minX","minY","maxX","maxY","leaf","height","pop","push","all","_all","data","search","toBBox","collides","load","insert","_build","slice","_splitRoot","_insert","remove","splice","_condense","compareMinX","compareMinY","toJSON","fromJSON","apply","pow","_chooseSubtree","_split","_adjustParentBBoxes","_chooseSplitAxis","_chooseSplitIndex","v","M","_allDistMargin","sort","MapContext","React","createContext","MapEventType","util_abstract","Error","uidCounter_","getUid","obj","ol_uid","String","VERSION","ObjectEventType","obj_assign","assign","target","var_sources","undefined","TypeError","output","ii","arguments","source","getValues","values","isEmpty","listen","type","listener","opt_this","opt_once","originalListener_1","removeEventListener","eventsKey","addEventListener","listenOnce","unlistenByKey","ol_Disposable","Disposable","disposed_","dispose","disposeInternal","numberSafeCompareFunction","b","includes","arr","linearFindNearest","direction","reverseSubArray","begin","end","tmp","array_extend","extension","Array","isArray","equals","arr1","arr2","len1","TRUE","FALSE","VOID","Event","BaseEvent","propagationStopped","preventDefault","stopPropagation","__extends","extendStatics","setPrototypeOf","__proto__","__","constructor","events_Target","_super","Target","opt_target","_this","target_","pendingRemovals_","dispatching_","listeners_","listeners","dispatchEvent","event","evt","propagate","pendingRemovals","getListeners","hasListener","opt_type","keys","index","EventType","CHANGE","ERROR","CLEAR","CONTEXTMENU","CLICK","DBLCLICK","DRAGENTER","DRAGOVER","DROP","KEYDOWN","KEYPRESS","LOAD","RESIZE","WHEEL","Observable_extends","ol_Observable","Observable","revision_","changed","getRevision","on","len","once","un","Object_extends","ObjectEvent","oldValue","changeEventTypeCache","getChangeEventType","ol_Object","BaseObject","opt_values","values_","setProperties","getKeys","getProperties","notify","eventType","set","opt_silent","unset","OverlayPositioning","BOTTOM_LEFT","BOTTOM_CENTER","BOTTOM_RIGHT","CENTER_LEFT","CENTER_CENTER","CENTER_RIGHT","TOP_LEFT","TOP_CENTER","TOP_RIGHT","CLASS_HIDDEN","CLASS_SELECTABLE","CLASS_UNSELECTABLE","CLASS_UNSUPPORTED","CLASS_CONTROL","CLASS_COLLAPSED","getFontParameters","style","cache","font","document","createElement","family","fontFamily","fontWeight","fontStyle","families","split","weight","createCanvasContext2D","opt_width","opt_height","canvas","width","getContext","replaceNode","newNode","oldNode","parent","parentNode","replaceChild","removeNode","node","removeChild","removeChildren","lastChild","AssertionError_extends","ol_AssertionError","AssertionError","code","message","assert","assertion","errorCode","Corner","Relationship","UNKNOWN","INTERSECTING","ABOVE","RIGHT","BELOW","LEFT","boundingExtent","coordinates","extent","createEmpty","extendCoordinate","buffer","opt_extent","clone","closestSquaredDistanceXY","y","dx","dy","containsCoordinate","coordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","relationship","Infinity","createOrUpdate","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromFlatCoordinates","flatCoordinates","offset","stride","extendFlatCoordinates","extent_equals","extent_extend","extendCoordinates","extendXY","forEachCorner","callback","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","extent_isEmpty","getWidth","getHeight","getCenter","getForViewAndSize","center","resolution","rotation","size","cosRotation","cos","sinRotation","sin","xCos","xSin","yCos","ySin","x0","x1","x2","x3","y0","y1","y2","y3","getIntersection","intersection","extent_intersects","applyTransform","transformFn","xs","ys","_boundingExtentXYs","Overlay_extends","Property","ELEMENT","MAP","OFFSET","POSITION","POSITIONING","ol_Overlay","Overlay","options","id","insertFirst","stopEvent","element","className","position","autoPan","autoPanAnimation","autoPanMargin","rendered","bottom_","left_","right_","top_","visible","mapPostrenderListenerKey","handleElementChanged","handleMapChanged","handleOffsetChanged","handlePositionChanged","handlePositioningChanged","setElement","setOffset","setPositioning","positioning","setPosition","getElement","getId","getMap","getOffset","getPosition","getPositioning","appendChild","map","render","updatePixelPosition","container","getOverlayContainerStopEvent","getOverlayContainer","insertBefore","childNodes","panIntoView","setMap","getTargetElement","mapRect","getRect","getSize","overlayRect","offsetWidth","getComputedStyle","parseInt","marginLeft","marginRight","dom_outerWidth","offsetHeight","marginTop","marginBottom","dom_outerHeight","margin","offsetLeft","offsetRight","offsetTop","offsetBottom","delta","abs","getView","getCenterInternal","centerPx","getPixelFromCoordinateInternal","newCenterPx","animateInternal","getCoordinateFromPixelInternal","duration","easing","box","getBoundingClientRect","offsetX","left","pageXOffset","offsetY","top","pageYOffset","setVisible","display","isRendered","pixel","getPixelFromCoordinate","mapSize","updateRenderedPosition","right","round","bottom","top_1","getOptions","CollectionEventType","ADD","REMOVE","MapBrowserEventType","SINGLECLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","ua","navigator","userAgent","toLowerCase","FIREFOX","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","IMAGE_DECODE","Image","decode","altShiftKeysOnly","mapBrowserEvent","originalEvent","altKey","metaKey","ctrlKey","shiftKey","condition_focus","activeElement","always","click","mouseActionButton","button","never","pointerMove","singleClick","noModifierKeys","shiftKeyOnly","targetNotEditable","tagName","mouseOnly","pointerEvent","pointerType","primaryAction","isPrimary","GeometryType","POINT","LINE_STRING","LINEAR_RING","POLYGON","MULTI_POINT","MULTI_LINE_STRING","MULTI_POLYGON","GEOMETRY_COLLECTION","CIRCLE","easeIn","easeOut","inAndOut","linear","interaction_Property","ACTIVE","Interaction_extends","zoomByDelta","view","opt_anchor","opt_duration","currentZoom","getZoom","newZoom","getConstrainedZoom","newResolution","getResolutionForZoom","getAnimating","cancelAnimations","animate","anchor","interaction_Interaction","Interaction","handleEvent","map_","setActive","getActive","active","clamp","cosh","squaredSegmentDistance","math_squaredDistance","toRadians","angleInDegrees","PI","modulo","lerp","HEX_COLOR_RE_","NAMED_COLOR_RE_","fromString","cacheSize","color","g","exec","el","body","rgb","fromNamed","hasAlpha","substr","normalize","Number","fromStringInternal_","asArray","color_toString","asColorLike","ImageState","IDLE","LOADING","LOADED","EMPTY","transform_set","transform","compose","dx1","dy1","sx","sy","angle","dx2","dy2","makeInverse","det","mat","determinant","transform_toString","join","measureFont","LRUCache_extends","structs_LRUCache","LRUCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","canExpireCache","getCount","containsKey","forEach","entry","value_","key_","newer","opt_options","older","peekLast","peekLastKey","peekFirstKey","replace","setSize","LabelCache_extends","defaultLineDash","defaultPadding","labelCache","LabelCache","consumers","consumer","consumerId","prune","outer","release","checkedFonts","measureContext","textHeights","checkFont","interval","referenceWidth","retries","checked","referenceFonts","text","isAvailable","context","getMeasureContext","available","referenceFont","measureText","check","done","clearInterval","fontSpec","setInterval","measureTextHeight","div","heights","innerHTML","padding","measureTextWidth","canvas_measureAndCacheTextWidth","rotateAtOffset","translate","rotate","resetTransform","drawImage","opacity","image","originX","originY","w","scale","alpha","globalAlpha","setTransform","style_Image","ImageStyle","opacity_","rotateWithView_","rotateWithView","rotation_","scale_","getOpacity","getScale","getRotation","getRotateWithView","getAnchor","getImage","pixelRatio","getHitDetectionImage","getImageState","getImageSize","getHitDetectionImageSize","getOrigin","setOpacity","setRotateWithView","setRotation","setScale","listenImageChange","unlistenImageChange","RegularShape_extends","style_RegularShape","RegularShape","canvas_","hitDetectionCanvas_","fill_","fill","origin_","points_","points","radius_","radius","radius1","radius2_","radius2","angle_","stroke_","stroke","anchor_","size_","imageSize_","hitDetectionImageSize_","getFill","getPoints","getRadius","getRadius2","getAngle","getStroke","strokeStyle","lineCap","lineJoin","miterLimit","lineDash","lineDashOffset","strokeWidth","getColor","getLineDash","getLineDashOffset","getLineJoin","getLineCap","getMiterLimit","renderOptions","imageSize","draw_","createHitDetectionCanvas_","angle0","radiusC","beginPath","arc","lineTo","fillStyle","lineWidth","setLineDash","closePath","drawHitDetectionCanvas_","Circle_extends","style_Circle","CircleStyle","setRadius","style_Fill","Fill","color_","setColor","style_Stroke","Stroke","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","Style","geometry_","geometryFunction_","defaultGeometryFunction","geometry","setGeometry","image_","renderer_","renderer","text_","zIndex_","zIndex","getGeometry","getText","getZIndex","getRenderer","setRenderer","getGeometryFunction","setFill","setImage","setStroke","setText","feature","setZIndex","defaultStyles","createDefaultStyle","createEditingStyle","styles","white","blue","concat","style_Style","Collection_extends","Collection_Property","CollectionEvent","opt_element","opt_index","ol_Collection","Collection","opt_array","unique_","unique","array_","assertUnique_","updateLength_","getLength","extend","array","getArray","item","insertAt","elem","removeAt","prev","setAt","j","opt_except","Select_extends","SelectEventType","SELECT","SelectEvent","selected","deselected","condition_","add","addCondition_","removeCondition_","toggle","toggleCondition_","features","getFeatures","featureLayerAssociation_","forEachFeatureAtPixel","layer","filter_","addFeatureLayerAssociation_","multi_","layerFilter","layerFilter_","hitTolerance","hitTolerance_","removeFeatureLayerAssociation_","interaction_Select","Select","condition","addCondition","removeCondition","toggleCondition","multi","filter","style_","getType","getDefaultStyleFunction","featureStyleAssociation_","features_","layers","layers_1","addFeature_","removeFeature_","getHitTolerance","getLayer","setHitTolerance","removeSelectedStyle_","giveSelectedStyle_","getStyle","setStyle","DEFAULT_RADIUS","getDistance","c1","c2","opt_radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","Units","DEGREES","FEET","METERS","PIXELS","TILE_PIXELS","USFEET","METERS_PER_UNIT","proj_Units","proj_Projection","Projection","code_","units_","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","canWrapX","getCode","getExtent","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","epsg3857_extends","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","epsg3857_EPSG3857Projection","EPSG3857Projection","units","point","PROJECTIONS","fromEPSG4326","input","opt_output","opt_dimension","dimension","halfSize","tan","toEPSG4326","atan","epsg4326_extends","epsg4326_EXTENT","epsg4326_METERS_PER_UNIT","epsg4326_EPSG4326Projection","EPSG4326Projection","opt_axisOrientation","epsg4326_PROJECTIONS","transforms","transforms_add","destination","sourceCode","destinationCode","projections_cache","cloneTransform","identityTransform","addProjection","projection","projections_add","proj_get","projectionLike","projections_get","opt_units","pointResolution","toEPSG4326_1","getTransformFromProjections","vertices","addEquivalentProjections","projections","addProjections","createProjection","defaultCode","fromLonLat","opt_projection","proj_transform","equivalent","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","getTransform","transformExtent","proj_userProjection","getUserProjection","toUserCoordinate","fromUserCoordinate","destProjection","toUserExtent","fromUserExtent","InfoWindow","_ref","_ref$interaction","interaction","_ref$autoPan","_ref$ignoreTypes","ignoreTypes","_ref$renderer","useContext","overlayRef","useRef","_useState","useState","setFeatures","_useState2","selectedFeature","selectFeature","select","showInfoWindow","current","getCoordinates","useEffect","config","getConditions","featuretype","featureType","addInteraction","console","removeInteraction","querySelector","addOverlay","getOverlays","external_root_React_commonjs2_react_commonjs_react_amd_react_default","ref","projections1","projections2","forwardTransform","inverseTransform","addEquivalentTransforms","Feature_extends","ol_Feature","Feature","opt_geometryOrProperties","id_","geometryName_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","getSimplifiedGeometry","properties","setGeometryName","getGeometryName","getStyleFunction","handleGeometryChange_","styles_1","createStyleFunction","setId","transform2D","opt_dest","dest","transform_rotate","anchorX","anchorY","deltaX","deltaY","k","transform_translate","Geometry_extends","tmpTransform","geom_Geometry","Geometry","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","fn","lastResult","lastArgs","lastThis","called","nextArgs","memoizeOne","revision","squaredTolerance","opt_transform","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","coord","getClosestPoint","opt_closestPoint","NaN","intersectsCoordinate","computeExtent","returnOrUpdate","opt_sy","simplify","tolerance","intersectsExtent","sourceProj","inCoordinates","outCoordinates","pixelExtent","projectedExtent","GeometryLayout","XY","XYZ","XYM","XYZM","SimpleGeometry_extends","getStrideForLayout","layout","geom_SimpleGeometry","SimpleGeometry","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","getStride","setFlatCoordinates","setCoordinates","opt_layout","setLayout","nesting","getLayoutForStride","flat_transform_scale","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","opt_ends","ends","jj","Point_extends","geom_Point","Point","squaredDistance","TextPlacement","LINE","DEFAULT_FILL_COLOR","style_Text","Text","font_","textAlign_","textAlign","textBaseline_","textBaseline","maxAngle_","maxAngle","placement_","placement","overflow_","overflow","offsetX_","offsetY_","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","padding_","getFont","getPlacement","getMaxAngle","getOverflow","getTextAlign","getTextBaseline","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setTextAlign","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","layer_Property","OPACITY","VISIBLE","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","MAX_ZOOM","MIN_ZOOM","SOURCE","Base_extends","Base","BaseLayer","maxResolution","minResolution","minZoom","maxZoom","className_","state_","getClassName","getLayerState","opt_managed","state","managed","hasOverlay","sourceState","getSourceState","getVisible","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","getLayersArray","getLayerStatesArray","opt_states","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","zindex","render_EventType","State","UNDEFINED","READY","Layer_extends","inView","layerState","viewState","zoom","layer_Layer","Layer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","handleSourcePropertyChange_","setSource","states","getSource","getState","handleSourceChange_","frameState","layerRenderer","prepareFrame","renderFrame","layerStatesArray","createRenderer","hasRenderer","BaseVector_extends","BaseVector_Property","BaseVector","BaseVectorLayer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","getDeclutter","getRenderBuffer","getRenderOrder","getUpdateWhileAnimating","getUpdateWhileInteracting","setRenderOrder","renderOrder","styleFunction","toFunction","ViewHint","inflateCoordinates","opt_coordinates","inflateCoordinatesArray","opt_coordinatess","inflateMultiCoordinatesArray","endss","opt_coordinatesss","coordinatesss","render_VectorContext","VectorContext","drawCustom","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","imageStyle","opt_declutterGroup","setTextStyle","textStyle","opt_declutterGroups","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","Instruction_fillInstruction","Instruction_strokeInstruction","beginPathInstruction","closePathInstruction","canvas_Instruction","Builder_extends","Builder","CanvasBuilder","maxExtent","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","applyPixelRatio","dashArray","dash","appendFlatCoordinates","closed","skipFirst","myEnd","getBufferedMaxExtent","lastRel","nextRel","lastXCoord","lastYCoord","nextCoord","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderEndss","builderBegin","getOrientedFlatCoordinates","getEndss","myEnds","getEnds","endGeometry","finish","reverseHitDetectionInstructions","reverse","instruction","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createFill","fillInstruction","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","ImageBuilder_extends","ImageBuilder","CanvasImageBuilder","declutterGroups_","hitDetectionImage_","anchorX_","anchorY_","height_","originX_","originY_","drawCoordinates_","myBegin","declutterGroups","hitDetectionImage","origin","LineStringBuilder_extends","LineStringBuilder","CanvasLineStringBuilder","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","douglasPeucker","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","squaredDistance_1","douglasPeuckerArray","simplifiedEnds","snap","quantize","quantizeArray","PolygonBuilder_extends","PolygonBuilder","CanvasPolygonBuilder","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","matchingChunk","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","start","acos","TextBuilder_extends","TEXT_ALIGN","middle","hanging","alphabetic","ideographic","BATCH_CONSTRUCTORS","Circle","Default","LineString","Polygon","CanvasTextBuilder","labels_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","fillState","strokeState","textState","geometryType","flatOffset","flatEnd","oo","range","declutterGroup","drawChars_","geometryWidths","getFlatMidpoint","getFlatMidpoints","getFlatInteriorPoint","interiorPoints","getFlatInteriorPoints","saveTextStates_","pixelRatio_1","strokeKey","textKey","fillKey","baseline","textScale","textFillStyle","textStrokeStyle","textOffsetX","textOffsetY","textRotateWithView","textRotation","canvas_BuilderGroup","BuilderGroup","tolerance_","maxExtent_","pixelRatio_","resolution_","buildersByZIndex_","addDeclutter","group","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","toString","replays","replay","Constructor","BuilderType","DEFAULT","IMAGE","TEXT","lineStringLength","drawTextOnPath","startM","measureAndCacheTextWidth","previousAngle","result","numChars","segmentM","segmentLength","angleChanged","char","charLength","charM","segmentPos","interpolate","Executor_extends","Executor_tmpExtent","Executor_tmpTransform","Executor_p1","Executor_p2","p3","p4","canvas_Executor","Executor","overlaps","alignFill_","declutterItems","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","getTextImage","label","align","lines","numLines","widths","currentWidth","measureTextWidths","lineHeight","renderWidth","leftRight","strokeText","fillText","replayTextBackground_","p1","p2","strokeInstruction","moveTo","setStrokeStyle_","replayImage_","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","centerX","centerY","strokePadding","intersects","declutterArgs","origin_1","repeatSize","save","restore","renderDeclutter","declutterTree","groupCount","rbush_min_default","declutterData","currentAlpha","drawTextImageWithPointPlacement_","execute_","featureCallback","opt_hitExtent","pixelCoordinates","transform1","transform2","setFromArray","dd","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","batchSize","coords","labelWithAnchor","widthIndex","declutterGroupIndex","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","cc","chars","part","execute","executeHitDetection","opt_featureCallback","ExecutorGroup_extends","ORDER","ExecutorGroup_ExecutorGroup","ExecutorGroup","allInstructions","opt_renderBuffer","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","clip","flatClipCoords","getClipCoords","executors","instructionByZindex","z","hasExecutors","candidates","forEachFeatureAtCoordinate","declutteredFeatures","contextSize","hitExtent","clearRect","mask","circleArrayCache","arraySize","error","fillCircleArrayRowToMiddle","getCircleArray","imageData","getImageData","i_1","j_1","result_1","executor","zs","opt_builderTypes","opt_declutterReplays","builderTypes","0","canvas_ExecutorGroup","Event_extends","render_Event","RenderEvent","opt_inversePixelTransform","opt_frameState","opt_context","inversePixelTransform","renderer_Layer_extends","renderer_Layer","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","loadedTileCallback","tiles","tile","tileCoord","createLoadedTileFinder","tileRange","forEachLoadedTile","getDataAtPixel","handleFontsChanged","renderIfReadyAndVisible","loadImage","imageState","canvas_Layer_extends","canvas_Layer","CanvasLayerRenderer","renderedResolution","tempTransform_","pixelTransform","containerReused","useContainer","layerClassName","firstElementChild","HTMLCanvasElement","transformOrigin","halfWidth","halfHeight","topLeft","topRight","bottomRight","bottomLeft","coordinateToPixelTransform","clipUnrotated","inverted","dispatchRenderEvent_","event_1","preRender","postRender","getRenderTransform","renderPixel","err","Uint8Array","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","builderGroup","imageReplay","textReplay","lineStringReplay","polygonReplay","MultiPoint","MultiLineString","MultiPolygon","GeometryCollection","replayGroup","geometries","getGeometriesArray","geometryRenderer","circleReplay","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","renderFeature","loading","renderGeometry","getGeometries","renderFeatureInternal","VectorLayer_extends","canvas_VectorLayer","CanvasVectorLayerRenderer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","dirty_","renderedRevision_","renderedResolution_","renderedExtent_","renderedRenderOrder_","replayGroup_","replayGroupChanged","layerIndex","makeScale","canvasTransform","projectionExtent","vectorSource","clipped","layerExtent","viewHints","declutterReplays","getWrapX","startX","worldWidth","world","transform_1","transform_2","viewHints_1","zz","executorData","currentExecutor","items","replayDeclutter","parseFloat","layer_1","features_1","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","gutter","userTransform","userProjection","loadFeatures","dirty","userExtent","features_2","forEachFeatureInExtent","replayGroupInstructions","executorGroup","getOverlaps","Vector_extends","Vector","VectorLayer","FormatType","ARRAY_BUFFER","JSON","XML","withCredentials","featureloader_xhr","url","format","success","failure","xhr","XMLHttpRequest","open","responseType","onload","status","responseText","responseXML","DOMParser","parseFromString","readFeatures","featureProjection","readProjection","onerror","send","loadFeaturesXhr","dataProjection","addFeatures","loadingstrategy_all","Source_extends","adaptAttributions","attributionLike","source_Source","Source","projection_","attributions_","attributions","attributionsCollapsible_","attributionsCollapsible","wrapX_","wrapX","getAttributions","getAttributionsCollapsible","getProjection","getResolutions","refresh","setAttributions","setState","VectorEventType","structs_RBush","RBush","opt_maxEntries","rbush_","items_","extents","uid","update","getAll","getInExtent","bbox","forEach_","forEachInExtent","rbush","source_Vector_extends","VectorSourceEvent","opt_feature","source_Vector","VectorSource","loader_","format_","url_","loader","strategy_","strategy","collection","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","handleFeatureChange_","valid","newFeatures","geometryFeatures","length_1","length_2","length_3","modifyingCollection","removeFeature","opt_fast","featureId","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","getFeaturesInExtent","getClosestFeatureToCoordinate","opt_filter","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","getFormat","getUrl","sid","removeFromIdIndex_","hasFeature","loadedExtentsRtree","extentsToLoad","_loop_1","extentToLoad","this_1","removeLoadedExtent","removed","setLoader","setUrl","coordinate_add","createStringXY","opt_fractionDigits","template","toFixed","coordinate_format","toStringXY","coordinate_equals","coordinate1","coordinate2","coordinate_rotate","cosAngle","sinAngle","coordinate_scale","coordinate_squaredDistance","coord1","coord2","Cluster_extends","source_Cluster","Cluster","distance","geometryFunction","cluster","setDistance","mapDistance","clustered","neighbors","neighbor","createCluster","centroid","FeatureLayer","props","buildFeatures","layerName","geo","location","long","longitude","lat","latitude","getPointLongLat","fit","styleMap","opts","circle","_opts$circle","_objectWithoutProperties","_opts$text","clusterSource","ClusterSource","_extends","myfeature","addLayer","removeLayer","hidden","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","arrayMaxSquaredDelta","assignClosestPoint","maxDelta","isRing","opt_tmpPoint","tmpPoint","assignClosestArrayPoint","interpolatePoint","fraction","pointX","pointY","cumulativeLengths","haystack","needle","opt_comparator","mid","cmp","comparator","low","high","found","binarySearch","lineStringCoordinateAtM","extrapolate","lo","hi","m0","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","ret","point1","point2","intersectsLineString","coordinatesExtent","startRel","endRel","startY","endX","endY","slope","intersectsSegment","intersectsLinearRingArray","intersectsLinearRing","LineString_extends","geom_LineString","flatMidpoint_","flatMidpointRevision_","maxDelta_","maxDeltaRevision_","appendCoordinate","forEachSegment","getCoordinateAtM","opt_extrapolate","getCoordinateAt","IconAnchorUnits","FRACTION","IconImageCache","cache_","cacheSize_","maxCacheSize_","expire","iconImage","src","crossOrigin","getKey","maxCacheSize","asString","shared","ImageBase_extends","ol_ImageBase","ImageBase","getPixelRatio","getResolution","Image_extends","listenImage","loadHandler","errorHandler","img","listening_1","then","catch","listenerKeys","ImageWrapper","imageLoadFunction","src_","unlisten_","imageLoadFunction_","handleImageError_","unlistenImage_","handleImageLoad_","IconImage_extends","IconImage_IconImage","IconImage","imageState_","tainted_","isTainted_","dispatchChangeEvent_","replaceColor_","fillRect","getSrc","ctx","imgData","putImageData","IconOrigin","Icon_extends","style_Icon","Icon","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","crossOrigin_","imgSize","iconImage_","IconImage_get","offset_","offsetOrigin_","offsetOrigin","setAnchor","iconImageSize","arrowhead","strings","LineStringLayer","arrow","line_feature","arrow_svg","_templateObject","arrowColor","lineColor","arrows","MapProvider","Provider","MapEvent_extends","ol_MapEvent","MapEvent","MapBrowserEvent_extends","ol_MapBrowserEvent","MapBrowserEvent","browserEvent","opt_dragging","pixel_","coordinate_","dragging","getEventPixel","configurable","getCoordinateFromPixel","MapBrowserPointerEvent_extends","ol_MapBrowserPointerEvent","MapBrowserPointerEvent","pointer_EventType","MapBrowserEventHandler_extends","ol_MapBrowserEventHandler","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","dragging_","dragListenerKeys_","moveTolerance_","down_","getViewport","setAttribute","activePointers_","trackedTouches_","element_","pointerdownListenerKey_","handlePointerDown_","relayedListenerKey_","relayEvent_","emulateClick_","newEvent","clearTimeout","setTimeout","updateActivePointers_","pointerId","handlePointerUp_","isMouseActionButton_","handlePointerMove_","isMoving_","clientX","clientY","MapProperty","LAYERGROUP","SIZE","TARGET","VIEW","TileState","ABORT","structs_PriorityQueue","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","TileQueue_extends","ol_TileQueue","TileQueue","tilePriorityFunction","tileChangeCallback","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","getTilesLoading","hifi","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","abortedTiles","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","createExtent","onlyCenter","smooth","opt_isMoving","viewWidth","viewHeight","ratio","none","getViewportClampedResolution","viewportSize","xResolution","yResolution","getSmoothClampedResolution","createMinMaxResolution","opt_smooth","opt_maxExtent","cappedMaxRes","disable","rotationconstraint_none","ViewProperty","area_linearRing","twiceArea","area_linearRings","LinearRing_extends","geom_LinearRing","LinearRing","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","maxSegmentLength","isNaN","reverse_coordinates","linearRingIsClockwise","edge","linearRingsAreOriented","opt_right","isClockwise","orientLinearRings","orientLinearRingsArray","Polygon_extends","Polygon_Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","linearRing","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","linearRings","geom_Polygon","fromExtent","View_extends","DEFAULT_MIN_ZOOM","animationCallback","returnValue","isNoopAnimation","animation","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","targetRotation","ol_View","View","hints_","animations_","updateAnimationKey_","targetCenter_","targetResolution_","targetRotation_","applyOptions_","resolutionConstraintInfo","resolutionConstraint","zoomFactor","multiWorld","smoothResolutionConstraint","projExtent","constrainOnlyCenter","resolutions","constrainResolution","capped","createSnapToResolutions","defaultMaxResolution","defaultMinResolution","power","opt_minResolution","minZoomLevel","cappedZoomLevel","zoomLevel","createSnapToPower","constraint","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","resolutions_","minZoom_","centerConstraint","smoothExtentConstraint","createCenterConstraint","rotationConstraint","enableRotation","constrainRotation","opt_tolerance","createSnapToZero","theta","createSnapToN","createRotationConstraint","constraints_","setCenterInternal","setResolution","setZoom","resolveConstraints","options_","getUpdatedOptions_","newOptions","var_args","isDef","args","animationCount","Date","now","series","complete","setHint","updateAnimations_","getInteracting","cancelAnimationFrame","more","seriesComplete","elapsed","progress","getSizeFromViewport_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","Boolean","requestAnimationFrame","currentCenter","currentResolution","opt_rotation","selector","metrics","getConstraints","getHints","opt_hints","calculateExtent","opt_size","calculateExtentInternal","getZoomForResolution","setConstrainResolution","enabled","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","opt_power","getValueForResolutionFunction","nearest","baseLevel","geometryOrExtent","fitInternal","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","getConstrainedResolution","centerRotX","centerRotY","getConstrainedCenter","centerOn","centerOnInternal","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","isMoving","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","opt_doNotCancelAnims","opt_forceMoving","newCenter","opt_resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","opt_targetResolution","targetZoom","opt_direction","targetRes","Group_extends","Group_Property","LAYERS","Group","LayerGroup","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","collectionEvent","pos","ownLayerState","toSize","PluggableMap_extends","ol_PluggableMap","PluggableMap","optionsInternal","keyboardEventTarget","getElementById","controls","interactions","overlays","layerGroup","createOptionsInternal","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","msTouchAction","touchAction","overlayContainer_","overlayContainerStopEvent_","mapBrowserEventHandler_","handleMapBrowserEvent","keyboardEventTarget_","keyHandlerKeys_","labelCache_","labelCacheListenerKey_","overlays_","overlayIdIndex_","handleResize_","postRenderFunctions_","tileQueue_","getTilePriority","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","control","addOverlayInternal_","addControl","getControls","getInteractions","getLayerGroup","overlay","setTarget","checkWrapped","getFeaturesAtPixel","forEachLayerAtPixel","hasFeatureAtPixel","hasFeatureAtCoordinate","getEventCoordinate","getEventCoordinateInternal","viewportPosition","eventPosition","changedTouches","getTarget","pixelToCoordinateTransform","getOverlayById","getLoading","viewCoordinate","tileSourceKey","tileCenter","tileResolution","wantedTiles","HTMLElement","parentElement","interactionsArray","handlePostRender","tileQueue","hints","lowOnFrameBudget","time","dispatchRenderEvent","postRenderFunctions","targetElement","updateSize","handleViewPropertyChanged_","renderSync","redrawText","layerStates","removeControl","removeOverlay","previousFrameState","hasArea","usedTiles","setLayerGroup","setView","computedStyle","Control_extends","control_Control","Control","Attribution_extends","Attribution_render","mapEvent","updateElement_","control_Attribution","Attribution","ulElement_","collapsed_","collapsed","overrideCollapsible_","collapsible","collapsible_","tipLabel","collapseLabel","collapseLabel_","textContent","label_","activeLabel","title","handleClick_","cssClasses","renderedAttributions_","renderedVisible_","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","setCollapsible","handleToggle_","classList","getCollapsible","setCollapsed","getCollapsed","Rotate_extends","Rotate_render","autoHide_","contains","control_Rotate","Rotate","callResetNorth_","resetNorth","duration_","autoHide","resetNorth_","Zoom_extends","control_Zoom","Zoom","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","defaults","zoomOptions","rotateOptions","attribution","attributionOptions","ol_Kinetic","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","initialVelocity_","lastIndex","firstIndex","DoubleClickZoom_extends","DoubleClickZoom_handleEvent","delta_","interaction_DoubleClickZoom","DoubleClickZoom","Pointer_extends","Pointer_centroid","pointerEvents","Pointer","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","trackedPointers_","targetPointers","updateTrackedPointers_","handledUp","handled","isPointerDraggingEvent","DragPan_extends","defaultCondition","interaction_DragPan","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","noKinetic_","centerpx","DragRotate_extends","interaction_DragRotate","DragRotate","lastAngle_","Box_extends","Box","RenderBox","startPixel_","endPixel_","render_","startPixel","endPixel","setPixels","createOrUpdateGeometry","DragBox_extends","DragBoxEventType","DragBoxEvent","interaction_DragBox","DragBox","box_","minArea_","minArea","onBoxEnd_","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","DragZoom_extends","out_","mapExtent","boxPixelExtent","createOrUpdateFromCoordinates","scaleFromCenter","interaction_DragZoom","DragZoom","out","KeyCode","UP","DOWN","KeyboardPan_extends","KeyboardPan_handleEvent","keyCode","mapUnitsDelta","pixelDelta_","pan","interaction_KeyboardPan","KeyboardPan","defaultCondition_","pixelDelta","KeyboardZoom_extends","KeyboardZoom_handleEvent","charCode","charCodeAt","interaction_KeyboardZoom","KeyboardZoom","MouseWheelZoom_extends","Mode","interaction_MouseWheelZoom","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","trackpadDeltaPerZoom_","endInteraction_","sign","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","PinchRotate_extends","interaction_PinchRotate","PinchRotate","pointerOptions","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","PinchZoom_extends","interaction_PinchZoom","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","Immediate_extends","CanvasImmediateRenderer","opt_squaredTolerance","opt_userTransform","context_","transform_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","drawImages_","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","moveToLineTo_","close","drawRings_","simpleGeometry","transformGeom2D","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imageAnchor","imageImage","imageOrigin","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","Map_extends","expireIconCache","renderer_Map","MapRenderer","declutterTree_","calculateMatrices2D","thisArg","thisArg2","translatedCoordinate","offsets","numLayers","tmpCoord","callback_1","zIndexItems","renderDeclutterItems","scheduleExpireIconCache","Composite_extends","Composite","CompositeMapRenderer","labelCacheKey_","firstChild","children_","previousElement","childElementCount","lastElementChild","oldChildren","oldChild","newChild","replaceChildren","ol_Map_extends","ol_Map","Map","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","onFocusOnly","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","interaction_defaults","TileProperty","BaseTile_extends","BaseTile","BaseTileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","getPreload","getUseInterimTilesOnError","TileRange","containsTileRange","TileRange_createOrUpdate","ol_TileRange","TileLayer_extends","TileLayer_CanvasTileLayerRenderer","CanvasTileLayerRenderer","tileLayer","extentChanged","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","isDrawableTile","tileState","getTile","getInterimTile","viewResolution","viewCenter","tileSource","sourceRevision","getTileGridForProjection","getZForResolution","zDirection","tilePixelRatio","getTilePixelRatio","canvasExtent","getTileRangeForExtentAndZ","tilesToDrawByZ","findLoadedTiles","tmpTileRange","inTransition","getAlpha","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","canvasScale","clips","clipZs","currentClip","getOpaque","currentZ","currentTilePixelSize","getTilePixelSize","currentScale","dx_1","dy_1","originTileCoord","getTileCoordForCoordAndZ","originTileExtent","getTileCoordExtent","tileGutter","getGutterForProjection","tilesToDraw","tileCoordKey","floatX","nextX","floatY","nextY","transition","drawTileImage","updateUsedTiles","manageTilePyramid","updateCacheSize_","scheduleExpireCache","getTileImage","tileAlpha","alphaChanged","endTransition","postRenderFunction","expireCache","tileCache","opt_tileCallback","getTileCoordCenter","useTile","canvas_TileLayer","Tile_extends","layer_Tile","TileLayer","tilecoord_createOrUpdate","opt_tileCoord","getKeyZXY","tilecoord_getKey","createFromTemplate","zRegEx","xRegEx","yRegEx","dashYRegEx","getFullTileRange","createFromTileUrlFunctions","tileUrlFunctions","hash","nullTileUrlFunction","ERROR_THRESHOLD","ol_Tile_extends","ol_Tile","Tile","interimTile","transition_","transitionStarts_","refreshInterimChain","getTileCoord","ImageTile_extends","getBlankImage","ol_ImageTile","ImageTile","tileLoadFunction","tileLoadFunction_","naturalWidth","naturalHeight","TileCache_extends","ol_TileCache","TileCache","pruneExceptNewestZ","fromKey","enlargeClipPoint","centroidX","centroidY","dX","dY","reproj_render","sourceExtent","targetExtent","triangulation","sources","opt_renderEdges","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","getTriangles","triangle","u0","v0","u1","v1","u2","v2","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","maxRow","maxEl","absValue","coef","solveLinearSystem","p0","MAX_SUBDIVISION","reproj_Triangulation","Triangulation","targetProj","maxSourceExtent","errorThreshold","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","addQuad_","leftBound_1","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","maxSubdivision","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","reproj_Tile_extends","reproj_Tile","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","opt_errorThreshold","renderEdges_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","maxTargetExtent","limitedTargetExtent","sourceProjExtent","targetMetersPerUnit","sourceMetersPerUnit","compensationFactor","calculateSourceResolution","errorThresholdInPixels","triangulation_","sourceRange","srcX","srcY","unlistenSources_","reproject_","getTileSize","leftToLoad_1","sourceListenKey_1","tmpTileCoord","tilegrid_TileGrid","TileGrid","opt_func","opt_strict","compare","every","currentVal","res","isSorted","origins","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","sizes","calculateTileRanges_","forEachTileCoord","opt_tileRange","tileCoordExtent","getTileRangeExtent","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","adjustX","adjustY","xFromOrigin","yFromOrigin","tileCoordX","tileCoordY","getTileCoordResolution","fullTileRanges","getForProjection","opt_maxZoom","opt_tileSize","opt_corner","corner","resolutionsFromExtent","getCorner","createForExtent","extentFromProjection","createForProjection","createXYZ","xyzOptions","gridOptions","half","source_Tile_extends","Tile_TileSource","TileSource","opaque_","opaque","tilePixelRatio_","canUseScreen","screen","availWidth","availHeight","tmpSize","tileOptions","getTileCacheForProjection","loaded","setKey","getTileGrid","thisProj","size_scale","getTileCoordForTileUrlFunction","worldsAway","withinExtentAndZ","TileSourceEvent","source_Tile","TileEventType","UrlTile_extends","source_UrlTile","UrlTile","generateTileUrlFunction_","tileUrlFunction","urls","setUrls","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getUrls","setTileLoadFunction","setTileUrlFunction","match","startCharCode","stopCharCode","fromCharCode","stop_1","expandUrl","templates","createFromTemplates","TileImage_extends","defaultTileLoadFunction","imageTile","source_TileImage","TileImage","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","usedTileCache","getGutter","projKey","createTile_","urlTileCoord","tileUrl","newTile","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","BingMaps_extends","source_BingMaps","BingMaps","hidpi","hidpi_","culture_","culture","maxZoom_","apiKey_","imagerySet_","imagerySet","opt_errback","opt_callbackParam","script","cleanup","async","timer","getElementsByTagName","jsonp","handleImageryMetadataResponse","getApiKey","getImagerySet","response","statusCode","statusDescription","authenticationResultCode","resourceSets","resources","resource","zoomMax","imageWidth","imageHeight","zoomMin","imageUrlSubdomains","subdomain","quadKeyTileCoord","imageUrl","digits","quadKey","imageryProviders","imageryProvider","intersecting","coverageAreas","coverageArea","XYZ_extends","source_XYZ","OSM_extends","ATTRIBUTION","source_OSM","OSM","FullScreen_extends","events","isFullScreenSupported","webkitRequestFullscreen","msRequestFullscreen","msFullscreenEnabled","requestFullscreen","fullscreenEnabled","isFullScreen","webkitIsFullScreen","msFullscreenElement","fullscreenElement","requestFullScreen","control_FullScreen","FullScreen","cssClassName_","labelNode_","labelActive","labelActiveNode_","button_","setClassName_","keys_","source_","handleFullScreen_","exitFullscreen","msExitFullscreen","webkitExitFullscreen","requestFullScreenWithKeys","handleFullScreenChange_","fullscreen","activeClassName","inactiveClassName","nextClassName","MousePosition_extends","PROJECTION","MousePosition_render","mapProjection_","control_MousePosition","MousePosition","handleProjectionChanged_","coordinateFormat","setCoordinateFormat","setProjection","undefinedHTML_","undefinedHTML","renderOnMouseOut_","renderedHTML_","getCoordinateFormat","handleMouseMove","updateHTML_","handleMouseOut","viewport","html","OpenLayersMap","_ref$projection","_ref$center","_ref$zoom","_ref$cssClass","cssClass","OpenLayersMap_objectWithoutProperties","mapContainer","baseLayer","bingAPIKey","bingImagerySet","allowFullScreen","showMousePosition","defaultControls","format_Feature","FeatureFormat","defaultFeatureProjection","getReadOptions","adaptOptions","readFeature","readGeometry","writeFeature","writeFeatures","writeGeometry","transformGeometryWithOptions","write","transformed","decimals","power_1","JSONFeature_extends","getObject","parse","format_JSONFeature","JSONFeature","readFeatureFromObject","readFeaturesFromObject","readGeometryFromObject","readProjectionFromObject","stringify","writeFeatureObject","writeFeaturesObject","writeGeometryObject","GeometryCollection_extends","cloneGeometries","clonedGeometries","geom_GeometryCollection","opt_geometries","geometries_","changeEventsKeys_","listenGeometriesChange_","unlistenGeometriesChange_","geometryCollection","setGeometries","simplifiedGeometries","simplified","simplifiedGeometryCollection","setGeometriesArray","MultiLineString_extends","geom_MultiLineString","lineStrings","lineString","appendLineString","opt_interpolate","lineStringsCoordinateAtM","getLineString","getLineStrings","midpoints","intersectsLineStringArray","MultiPoint_extends","geom_MultiPoint","appendPoint","getPoint","MultiPolygon_extends","geom_MultiPolygon","opt_endss","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","polygons","polygon","appendPolygon","newEndss","multiArrayMaxSquaredDelta","assignClosestMultiArrayPoint","linearRingssContainsXY","linearRingss","center_linearRingss","getInteriorPointsOfMultiArray","getInteriorPoints","linearRingssAreOriented","simplifiedEndss","quantizeMultiArray","getPolygon","prevEnds","getPolygons","intersectsLinearRingMultiArray","deflateMultiCoordinatesArray","lastEnds","GeoJSON_extends","readPointGeometry","readLineStringGeometry","readPolygonGeometry","readMultiPointGeometry","readMultiLineStringGeometry","readMultiPolygonGeometry","readGeometryCollectionGeometry","geoJSON","writePointGeometry","writeLineStringGeometry","rightHanded","writePolygonGeometry","writeMultiPointGeometry","writeMultiLineStringGeometry","writeMultiPolygonGeometry","writeGeometryCollectionGeometry","format_GeoJSON","GeoJSON","geometryName","extractGeometryName_","extractGeometryName","geoJSONFeature","geoJSONFeatures","crs","objects","geom_Circle_extends","Circle_Circle","setCenterAndRadius","getRadiusSquared_","geom_Circle","Draw_extends","Draw_Mode","DrawEventType","DrawEvent","interaction_Draw","Draw","shouldHandle_","downPx_","downTimeout_","lastDragTime_","freehand_","snapTolerance_","snapTolerance","type_","getMode","stopClick_","stopClick","minPoints_","minPoints","maxPoints_","maxPoints","finishCondition_","finishCondition","opt_geometry","squaredLength","Constructor_1","mode_1","dragVertexDelay_","dragVertexDelay","finishCoordinate_","sketchFeature_","sketchPoint_","sketchCoords_","sketchLine_","sketchLineCoords_","squaredClickTolerance_","clickTolerance","overlay_","Draw_getDefaultStyleFunction","freehandCondition_","freehand","freehandCondition","updateState_","getOverlay","move","pass","addToDrawing_","startDrawing_","circleMode","finishDrawing","atFinish_","abortDrawing_","downPx","clickPx","modifyDrawing_","createOrUpdateSketchPoint_","at","potentiallyDone","potentiallyFinishCoordinates","sketchCoords","finishCoordinate","finishPixel","updateSketchFeatures_","sketchLineGeom","ring","removeLastPoint","sketchFeature","sketchFeatures","overlaySource","getRandomColor","random","mapUtils","getGeoFacets","facets","facetNames","geoFacets","facetName","facet","boxes","convertFacetsToGeoJson","geoJson","geoFacet","ptConverted","uri","convertPropsToGeoJson","convertPointsToGeoJson","latLong","OpenLayersSearchMap","_classCallCheck","_possibleConstructorReturn","_React$Component","createClusterMarker","countLength","countValue","createClusterTextStyle","geoStyles","handleShowMap","showMap","mapId","mapTargetId","popupContentTargetId","drawnBounds","componentDidMount","processData","componentDidUpdate","previousProps","getPrimaryGeoJson","geoFacetNames","getPrimaryStyle","primaryGeoJson","convertedGeoJson","primaryLayer","primarySource","lonLat","afterProcessData","that","typeSelect","addInteractions","onchange","addedFeature","addFeatureLocked","updateDrawnBounds","handleMapClick","resetDrawnBounds","getBoxBounds","convertedExtent","south","west","north","east","getCircleBounds","getPointBounds","bounds","shape","boundsChanged","closePopup","primFeat","markerClick","encodeURIComponent","content","mapStyle","onChange","class","Component","__webpack_exports__","src_MapContext","src_OpenLayersSearchMap","MOUSE_PROPS","MOUSE_DEFAULTS","PointerEvent","inType","inDict","createEvent","initEvent","bubbles","cancelable","buttons","pressure","tiltX","tiltY","twist","tangentialPressure","hwTimestamp","detail","PointerMap","SparseArrayMap","delete","has","CLONE_PROPS","CLONE_DEFAULTS","BOUNDARY_EVENTS","pointerover","pointerout","pointerenter","pointerleave","HAS_SVG_INSTANCE","SVGElementInstance","dispatcher","pointermap","eventMap","captureInfo","eventSources","eventSourceList","registerSource","newEvents","register","es","unregister","contained","ex","down","inEvent","fireEvent","up","enter","leave","over","cancel","leaveOut","enterOver","eventHandler","_handledByPE","addEvent","unlisten","removeEvent","eventName","boundHandler","makeEvent","relatedTarget","_target","cloneEvent","eventCopy","correspondingUseElement","capture","propagateDown","targets","setCapture","inPointerId","inTarget","skipDispatch","releaseCapture","implicitRelease","asyncDispatchEvent","targeting","shadow","inEl","shadowRoot","webkitShadowRoot","canTarget","elementFromPoint","targetingShadow","olderShadow","os","olderShadowRoot","se","allShadows","shadows","searchRoot","inRoot","st","sr","ssr","owner","nodeType","Node","DOCUMENT_NODE","DOCUMENT_FRAGMENT_NODE","findTarget","toArray","MO","MutationObserver","WebKitMutationObserver","OBSERVER_INIT","subtree","childList","attributes","attributeOldValue","attributeFilter","Installer","binder","addCallback","removeCallback","changedCallback","observer","mutationWatcher","rule","watchSubtree","observe","enableOnSubtree","readyState","installOnLoad","installNewSubtree","findElements","addElement","querySelectorAll","removeElement","elementChanged","concatLists","accum","list","isElement","ELEMENT_NODE","flattenMutationTree","inNodes","tree","reduce","mutations","mutationHandler","addedNodes","removedNodes","attrib2css","hasNativePE","MSPointerEvent","hasShadowRoot","ShadowDOMPolyfill","head","createShadowRoot","BUTTON_TO_BUTTONS","HAS_BUTTONS","MouseEvent","INSTALLER","mouseEvents","POINTER_ID","POINTER_TYPE","lastTouches","isEventSimulatedFromTouch","lts","prepareEvent","pd","webkitForce","WEBKIT_FORCE_AT_MOUSE_DOWN","prepareButtonsForMove","which","mousedown","webkitmouseforcechanged","mousemove","mouseup","mouseover","mouseout","deactivateMouse","pointermap$1","touchEvents","elementAdded","getAttribute","touchActionToScrollType","_scrollType","elementRemoved","evts","oldSt","scrollTypes","firstTouch","isPrimaryTouch","inTouch","identifier","setPrimaryTouch","firstXY","X","Y","scrolling","removePrimaryPointer","inPointer","typeToButtons","touchToPointer","cte","currentTouchEvent","radiusX","webkitRadiusX","radiusY","webkitRadiusY","force","altitudeAngle","radToDeg","azimuthAngle","touchType","self","processTouches","inFunction","tl","shouldScroll","currentTarget","dya","dxa","findTouch","inTL","inId","vacuumTouches","touches","cancelOut","touchstart","dedupSynthMouse","overDown","outTarget","touchforcechange","touchmove","touchcancel","moveOverOut","pointer","outEvent","touchend","upOut","cleanUpPointer","lt","pointermap$2","HAS_BITMAP_TYPE","MSPOINTER_TYPE_MOUSE","msEvents","POINTER_TYPES","MSPointerDown","MSPointerMove","MSPointerUp","MSPointerOut","MSPointerOver","MSPointerCancel","MSLostPointerCapture","MSGotPointerCapture","assertActive","assertConnected","ownerDocument","inActiveButtonState","msPointerEnabled","msSetPointerCapture","msReleasePointerCapture","shadowSelector","applyAttributeStyles","tp","msMaxTouchPoints","ontouchstart","applyPolyfill","Element","setPointerCapture","defineProperties","releasePointerCapture","hasPointerCapture","targetFinding"],"mappings":"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","file":"@marklogic-community/grove-react-map-components.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"GroveReactMapComponents\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"GroveReactMapComponents\"] = factory(root[\"React\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__0__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 18);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","import React from 'react';\n\nconst MapContext = React.createContext({});\n\nexport default MapContext;\n\nexport {\n  MapContext\n}","/**\n * @module ol/MapEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered after a map frame is rendered.\n     * @event module:ol/MapEvent~MapEvent#postrender\n     * @api\n     */\n    POSTRENDER: 'postrender',\n    /**\n     * Triggered when the map starts moving.\n     * @event module:ol/MapEvent~MapEvent#movestart\n     * @api\n     */\n    MOVESTART: 'movestart',\n    /**\n     * Triggered after the map is moved.\n     * @event module:ol/MapEvent~MapEvent#moveend\n     * @api\n     */\n    MOVEEND: 'moveend'\n};\n//# sourceMappingURL=MapEventType.js.map","/**\n * @module ol/util\n */\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n    return /** @type {?} */ ((function () {\n        throw new Error('Unimplemented abstract method.');\n    })());\n}\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nvar uidCounter_ = 0;\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n    return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport var VERSION = '6.0.1';\n//# sourceMappingURL=util.js.map","/**\n * @module ol/ObjectEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a property is changed.\n     * @event module:ol/Object.ObjectEvent#propertychange\n     * @api\n     */\n    PROPERTYCHANGE: 'propertychange'\n};\n//# sourceMappingURL=ObjectEventType.js.map","/**\n * @module ol/obj\n */\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport var assign = (typeof Object.assign === 'function') ? Object.assign : function (target, var_sources) {\n    if (target === undefined || target === null) {\n        throw new TypeError('Cannot convert undefined or null to object');\n    }\n    var output = Object(target);\n    for (var i = 1, ii = arguments.length; i < ii; ++i) {\n        var source = arguments[i];\n        if (source !== undefined && source !== null) {\n            for (var key in source) {\n                if (source.hasOwnProperty(key)) {\n                    output[key] = source[key];\n                }\n            }\n        }\n    }\n    return output;\n};\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n    for (var property in object) {\n        delete object[property];\n    }\n}\n/**\n * Polyfill for Object.values().  Get an array of property values from an object.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n *\n * @param {!Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport var getValues = (typeof Object.values === 'function') ? Object.values : function (object) {\n    var values = [];\n    for (var property in object) {\n        values.push(object[property]);\n    }\n    return values;\n};\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n    var property;\n    for (property in object) {\n        return false;\n    }\n    return !property;\n}\n//# sourceMappingURL=obj.js.map","/**\n * @module ol/events\n */\nimport { clear } from './obj.js';\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener\n * @property {import(\"./events/Target.js\").EventTargetLike} target\n * @property {string} type\n * @api\n */\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events~unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean=} opt_once If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n    if (opt_this && opt_this !== target) {\n        listener = listener.bind(opt_this);\n    }\n    if (opt_once) {\n        var originalListener_1 = listener;\n        listener = function () {\n            target.removeEventListener(type, listener);\n            originalListener_1.apply(this, arguments);\n        };\n    }\n    var eventsKey = {\n        target: target,\n        type: type,\n        listener: listener\n    };\n    target.addEventListener(type, listener);\n    return eventsKey;\n}\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events~listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n    return listen(target, type, listener, opt_this, true);\n}\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n    if (key && key.target) {\n        key.target.removeEventListener(key.type, key.listener);\n        clear(key);\n    }\n}\n//# sourceMappingURL=events.js.map","/**\n * @module ol/Disposable\n */\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nvar Disposable = /** @class */ (function () {\n    function Disposable() {\n        /**\n         * The object has already been disposed.\n         * @type {boolean}\n         * @private\n         */\n        this.disposed_ = false;\n    }\n    /**\n     * Clean up.\n     */\n    Disposable.prototype.dispose = function () {\n        if (!this.disposed_) {\n            this.disposed_ = true;\n            this.disposeInternal();\n        }\n    };\n    /**\n     * Extension point for disposable objects.\n     * @protected\n     */\n    Disposable.prototype.disposeInternal = function () { };\n    return Disposable;\n}());\nexport default Disposable;\n//# sourceMappingURL=Disposable.js.map","/**\n * @module ol/array\n */\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function=} opt_comparator Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n    var mid, cmp;\n    var comparator = opt_comparator || numberSafeCompareFunction;\n    var low = 0;\n    var high = haystack.length;\n    var found = false;\n    while (low < high) {\n        /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n         * to double (which gives the wrong results). */\n        mid = low + (high - low >> 1);\n        cmp = +comparator(haystack[mid], needle);\n        if (cmp < 0.0) { /* Too low. */\n            low = mid + 1;\n        }\n        else { /* Key found or too high */\n            high = mid;\n            found = !cmp;\n        }\n    }\n    /* Key not found. */\n    return found ? low : ~low;\n}\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n    return a > b ? 1 : a < b ? -1 : 0;\n}\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n    return arr.indexOf(obj) >= 0;\n}\n/**\n * @param {Array<number>} arr Array.\n * @param {number} target Target.\n * @param {number} direction 0 means return the nearest, > 0\n *    means return the largest nearest, < 0 means return the\n *    smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n    var n = arr.length;\n    if (arr[0] <= target) {\n        return 0;\n    }\n    else if (target <= arr[n - 1]) {\n        return n - 1;\n    }\n    else {\n        var i = void 0;\n        if (direction > 0) {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] < target) {\n                    return i - 1;\n                }\n            }\n        }\n        else if (direction < 0) {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] <= target) {\n                    return i;\n                }\n            }\n        }\n        else {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] == target) {\n                    return i;\n                }\n                else if (arr[i] < target) {\n                    if (arr[i - 1] - target < target - arr[i]) {\n                        return i - 1;\n                    }\n                    else {\n                        return i;\n                    }\n                }\n            }\n        }\n        return n - 1;\n    }\n}\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n    while (begin < end) {\n        var tmp = arr[begin];\n        arr[begin] = arr[end];\n        arr[end] = tmp;\n        ++begin;\n        --end;\n    }\n}\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n    var extension = Array.isArray(data) ? data : [data];\n    var length = extension.length;\n    for (var i = 0; i < length; i++) {\n        arr[arr.length] = extension[i];\n    }\n}\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n    var i = arr.indexOf(obj);\n    var found = i > -1;\n    if (found) {\n        arr.splice(i, 1);\n    }\n    return found;\n}\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n    var length = arr.length >>> 0;\n    var value;\n    for (var i = 0; i < length; i++) {\n        value = arr[i];\n        if (func(value, i, arr)) {\n            return value;\n        }\n    }\n    return null;\n}\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n    var len1 = arr1.length;\n    if (len1 !== arr2.length) {\n        return false;\n    }\n    for (var i = 0; i < len1; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Sort the passed array such that the relative order of equal elements is preverved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n    var length = arr.length;\n    var tmp = Array(arr.length);\n    var i;\n    for (i = 0; i < length; i++) {\n        tmp[i] = { index: i, value: arr[i] };\n    }\n    tmp.sort(function (a, b) {\n        return compareFnc(a.value, b.value) || a.index - b.index;\n    });\n    for (i = 0; i < arr.length; i++) {\n        arr[i] = tmp[i].value;\n    }\n}\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n    var index;\n    var found = !arr.every(function (el, idx) {\n        index = idx;\n        return !func(el, idx, arr);\n    });\n    return found ? index : -1;\n}\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function=} opt_func Comparison function.\n * @param {boolean=} opt_strict Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n    var compare = opt_func || numberSafeCompareFunction;\n    return arr.every(function (currentVal, index) {\n        if (index === 0) {\n            return true;\n        }\n        var res = compare(arr[index - 1], currentVal);\n        return !(res > 0 || opt_strict && res === 0);\n    });\n}\n//# sourceMappingURL=array.js.map","/**\n * @module ol/functions\n */\nimport { equals as arrayEquals } from './array.js';\n/**\n * Always returns true.\n * @returns {boolean} true.\n */\nexport function TRUE() {\n    return true;\n}\n/**\n * Always returns false.\n * @returns {boolean} false.\n */\nexport function FALSE() {\n    return false;\n}\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() { }\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n    var called = false;\n    /** @type ReturnType */\n    var lastResult;\n    /** @type Array<any> */\n    var lastArgs;\n    var lastThis;\n    return function () {\n        var nextArgs = Array.prototype.slice.call(arguments);\n        if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n            called = true;\n            lastThis = this;\n            lastArgs = nextArgs;\n            lastResult = fn.apply(this, arguments);\n        }\n        return lastResult;\n    };\n}\n//# sourceMappingURL=functions.js.map","/**\n * @module ol/events/Event\n */\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nvar BaseEvent = /** @class */ (function () {\n    /**\n     * @param {string} type Type.\n     */\n    function BaseEvent(type) {\n        /**\n         * @type {boolean}\n         */\n        this.propagationStopped;\n        /**\n         * The event type.\n         * @type {string}\n         * @api\n         */\n        this.type = type;\n        /**\n         * The event target.\n         * @type {Object}\n         * @api\n         */\n        this.target = null;\n    }\n    /**\n     * Stop event propagation.\n     * @api\n     */\n    BaseEvent.prototype.preventDefault = function () {\n        this.propagationStopped = true;\n    };\n    /**\n     * Stop event propagation.\n     * @api\n     */\n    BaseEvent.prototype.stopPropagation = function () {\n        this.propagationStopped = true;\n    };\n    return BaseEvent;\n}());\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n    evt.stopPropagation();\n}\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n    evt.preventDefault();\n}\nexport default BaseEvent;\n//# sourceMappingURL=Event.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport { VOID } from '../functions.js';\nimport Event from './Event.js';\nimport { clear } from '../obj.js';\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nvar Target = /** @class */ (function (_super) {\n    __extends(Target, _super);\n    /**\n     * @param {*=} opt_target Default event target for dispatched events.\n     */\n    function Target(opt_target) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {*}\n         */\n        _this.target_ = opt_target;\n        /**\n         * @private\n         * @type {!Object<string, number>}\n         */\n        _this.pendingRemovals_ = {};\n        /**\n         * @private\n         * @type {!Object<string, number>}\n         */\n        _this.dispatching_ = {};\n        /**\n         * @private\n         * @type {!Object<string, Array<import(\"../events.js\").ListenerFunction>>}\n         */\n        _this.listeners_ = {};\n        return _this;\n    }\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../events.js\").ListenerFunction} listener Listener.\n     */\n    Target.prototype.addEventListener = function (type, listener) {\n        if (!type || !listener) {\n            return;\n        }\n        var listeners = this.listeners_[type];\n        if (!listeners) {\n            listeners = this.listeners_[type] = [];\n        }\n        if (listeners.indexOf(listener) === -1) {\n            listeners.push(listener);\n        }\n    };\n    /**\n     * Dispatches an event and calls all listeners listening for events\n     * of this type. The event parameter can either be a string or an\n     * Object with a `type` property.\n     *\n     * @param {{type: string,\n     *     target: (EventTargetLike|undefined),\n     *     propagationStopped: (boolean|undefined)}|\n     *     import(\"./Event.js\").default|string} event Event object.\n     * @return {boolean|undefined} `false` if anyone called preventDefault on the\n     *     event object or if any of the listeners returned false.\n     * @api\n     */\n    Target.prototype.dispatchEvent = function (event) {\n        var evt = typeof event === 'string' ? new Event(event) : event;\n        var type = evt.type;\n        if (!evt.target) {\n            evt.target = this.target_ || this;\n        }\n        var listeners = this.listeners_[type];\n        var propagate;\n        if (listeners) {\n            if (!(type in this.dispatching_)) {\n                this.dispatching_[type] = 0;\n                this.pendingRemovals_[type] = 0;\n            }\n            ++this.dispatching_[type];\n            for (var i = 0, ii = listeners.length; i < ii; ++i) {\n                if (listeners[i].call(this, evt) === false || evt.propagationStopped) {\n                    propagate = false;\n                    break;\n                }\n            }\n            --this.dispatching_[type];\n            if (this.dispatching_[type] === 0) {\n                var pendingRemovals = this.pendingRemovals_[type];\n                delete this.pendingRemovals_[type];\n                while (pendingRemovals--) {\n                    this.removeEventListener(type, VOID);\n                }\n                delete this.dispatching_[type];\n            }\n            return propagate;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Target.prototype.disposeInternal = function () {\n        clear(this.listeners_);\n    };\n    /**\n     * Get the listeners for a specified event type. Listeners are returned in the\n     * order that they will be called in.\n     *\n     * @param {string} type Type.\n     * @return {Array<import(\"../events.js\").ListenerFunction>} Listeners.\n     */\n    Target.prototype.getListeners = function (type) {\n        return this.listeners_[type];\n    };\n    /**\n     * @param {string=} opt_type Type. If not provided,\n     *     `true` will be returned if this event target has any listeners.\n     * @return {boolean} Has listeners.\n     */\n    Target.prototype.hasListener = function (opt_type) {\n        return opt_type ?\n            opt_type in this.listeners_ :\n            Object.keys(this.listeners_).length > 0;\n    };\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../events.js\").ListenerFunction} listener Listener.\n     */\n    Target.prototype.removeEventListener = function (type, listener) {\n        var listeners = this.listeners_[type];\n        if (listeners) {\n            var index = listeners.indexOf(listener);\n            if (index !== -1) {\n                if (type in this.pendingRemovals_) {\n                    // make listener a no-op, and remove later in #dispatchEvent()\n                    listeners[index] = VOID;\n                    ++this.pendingRemovals_[type];\n                }\n                else {\n                    listeners.splice(index, 1);\n                    if (listeners.length === 0) {\n                        delete this.listeners_[type];\n                    }\n                }\n            }\n        }\n    };\n    return Target;\n}(Disposable));\nexport default Target;\n//# sourceMappingURL=Target.js.map","/**\n * @module ol/events/EventType\n */\n/**\n * @enum {string}\n * @const\n */\nexport default {\n    /**\n     * Generic change event. Triggered when the revision counter is increased.\n     * @event module:ol/events/Event~BaseEvent#change\n     * @api\n     */\n    CHANGE: 'change',\n    /**\n     * Generic error event. Triggered when an error occurs.\n     * @event module:ol/events/Event~BaseEvent#error\n     * @api\n     */\n    ERROR: 'error',\n    CLEAR: 'clear',\n    CONTEXTMENU: 'contextmenu',\n    CLICK: 'click',\n    DBLCLICK: 'dblclick',\n    DRAGENTER: 'dragenter',\n    DRAGOVER: 'dragover',\n    DROP: 'drop',\n    KEYDOWN: 'keydown',\n    KEYPRESS: 'keypress',\n    LOAD: 'load',\n    RESIZE: 'resize',\n    WHEEL: 'wheel'\n};\n//# sourceMappingURL=EventType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Observable\n */\nimport { listen, unlistenByKey, listenOnce } from './events.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nvar Observable = /** @class */ (function (_super) {\n    __extends(Observable, _super);\n    function Observable() {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.revision_ = 0;\n        return _this;\n    }\n    /**\n     * Increases the revision counter and dispatches a 'change' event.\n     * @api\n     */\n    Observable.prototype.changed = function () {\n        ++this.revision_;\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * Get the version number for this object.  Each time the object is modified,\n     * its version number will be incremented.\n     * @return {number} Revision.\n     * @api\n     */\n    Observable.prototype.getRevision = function () {\n        return this.revision_;\n    };\n    /**\n     * Listen for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function(?): ?} listener The listener function.\n     * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n     *     called with an array of event types as the first argument, the return\n     *     will be an array of keys.\n     * @api\n     */\n    Observable.prototype.on = function (type, listener) {\n        if (Array.isArray(type)) {\n            var len = type.length;\n            var keys = new Array(len);\n            for (var i = 0; i < len; ++i) {\n                keys[i] = listen(this, type[i], listener);\n            }\n            return keys;\n        }\n        else {\n            return listen(this, /** @type {string} */ (type), listener);\n        }\n    };\n    /**\n     * Listen once for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function(?): ?} listener The listener function.\n     * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n     *     called with an array of event types as the first argument, the return\n     *     will be an array of keys.\n     * @api\n     */\n    Observable.prototype.once = function (type, listener) {\n        if (Array.isArray(type)) {\n            var len = type.length;\n            var keys = new Array(len);\n            for (var i = 0; i < len; ++i) {\n                keys[i] = listenOnce(this, type[i], listener);\n            }\n            return keys;\n        }\n        else {\n            return listenOnce(this, /** @type {string} */ (type), listener);\n        }\n    };\n    /**\n     * Unlisten for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function(?): ?} listener The listener function.\n     * @api\n     */\n    Observable.prototype.un = function (type, listener) {\n        if (Array.isArray(type)) {\n            for (var i = 0, ii = type.length; i < ii; ++i) {\n                this.removeEventListener(type[i], listener);\n            }\n        }\n        else {\n            this.removeEventListener(type, listener);\n        }\n    };\n    return Observable;\n}(EventTarget));\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n    if (Array.isArray(key)) {\n        for (var i = 0, ii = key.length; i < ii; ++i) {\n            unlistenByKey(key[i]);\n        }\n    }\n    else {\n        unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n    }\n}\nexport default Observable;\n//# sourceMappingURL=Observable.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Object\n */\nimport { getUid } from './util.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport Event from './events/Event.js';\nimport { assign } from './obj.js';\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nvar ObjectEvent = /** @class */ (function (_super) {\n    __extends(ObjectEvent, _super);\n    /**\n     * @param {string} type The event type.\n     * @param {string} key The property name.\n     * @param {*} oldValue The old value for `key`.\n     */\n    function ObjectEvent(type, key, oldValue) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The name of the property whose value is changing.\n         * @type {string}\n         * @api\n         */\n        _this.key = key;\n        /**\n         * The old value. To get the new value use `e.target.get(e.key)` where\n         * `e` is the event object.\n         * @type {*}\n         * @api\n         */\n        _this.oldValue = oldValue;\n        return _this;\n    }\n    return ObjectEvent;\n}(Event));\nexport { ObjectEvent };\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nvar BaseObject = /** @class */ (function (_super) {\n    __extends(BaseObject, _super);\n    /**\n     * @param {Object<string, *>=} opt_values An object with key-value pairs.\n     */\n    function BaseObject(opt_values) {\n        var _this = _super.call(this) || this;\n        // Call {@link module:ol/util~getUid} to ensure that the order of objects' ids is\n        // the same as the order in which they were created.  This also helps to\n        // ensure that object properties are always added in the same order, which\n        // helps many JavaScript engines generate faster code.\n        getUid(_this);\n        /**\n         * @private\n         * @type {!Object<string, *>}\n         */\n        _this.values_ = {};\n        if (opt_values !== undefined) {\n            _this.setProperties(opt_values);\n        }\n        return _this;\n    }\n    /**\n     * Gets a value.\n     * @param {string} key Key name.\n     * @return {*} Value.\n     * @api\n     */\n    BaseObject.prototype.get = function (key) {\n        var value;\n        if (this.values_.hasOwnProperty(key)) {\n            value = this.values_[key];\n        }\n        return value;\n    };\n    /**\n     * Get a list of object property names.\n     * @return {Array<string>} List of property names.\n     * @api\n     */\n    BaseObject.prototype.getKeys = function () {\n        return Object.keys(this.values_);\n    };\n    /**\n     * Get an object of all property names and values.\n     * @return {Object<string, *>} Object.\n     * @api\n     */\n    BaseObject.prototype.getProperties = function () {\n        return assign({}, this.values_);\n    };\n    /**\n     * @param {string} key Key name.\n     * @param {*} oldValue Old value.\n     */\n    BaseObject.prototype.notify = function (key, oldValue) {\n        var eventType;\n        eventType = getChangeEventType(key);\n        this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n        eventType = ObjectEventType.PROPERTYCHANGE;\n        this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    };\n    /**\n     * Sets a value.\n     * @param {string} key Key name.\n     * @param {*} value Value.\n     * @param {boolean=} opt_silent Update without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.set = function (key, value, opt_silent) {\n        if (opt_silent) {\n            this.values_[key] = value;\n        }\n        else {\n            var oldValue = this.values_[key];\n            this.values_[key] = value;\n            if (oldValue !== value) {\n                this.notify(key, oldValue);\n            }\n        }\n    };\n    /**\n     * Sets a collection of key-value pairs.  Note that this changes any existing\n     * properties and adds new ones (it does not remove any existing properties).\n     * @param {Object<string, *>} values Values.\n     * @param {boolean=} opt_silent Update without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.setProperties = function (values, opt_silent) {\n        for (var key in values) {\n            this.set(key, values[key], opt_silent);\n        }\n    };\n    /**\n     * Unsets a property.\n     * @param {string} key Key name.\n     * @param {boolean=} opt_silent Unset without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.unset = function (key, opt_silent) {\n        if (key in this.values_) {\n            var oldValue = this.values_[key];\n            delete this.values_[key];\n            if (!opt_silent) {\n                this.notify(key, oldValue);\n            }\n        }\n    };\n    return BaseObject;\n}(Observable));\n/**\n * @type {Object<string, string>}\n */\nvar changeEventTypeCache = {};\n/**\n * @param {string} key Key name.\n * @return {string} Change name.\n */\nexport function getChangeEventType(key) {\n    return changeEventTypeCache.hasOwnProperty(key) ?\n        changeEventTypeCache[key] :\n        (changeEventTypeCache[key] = 'change:' + key);\n}\nexport default BaseObject;\n//# sourceMappingURL=Object.js.map","/**\n * @module ol/OverlayPositioning\n */\n/**\n * Overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, `'top-right'`\n * @enum {string}\n */\nexport default {\n    BOTTOM_LEFT: 'bottom-left',\n    BOTTOM_CENTER: 'bottom-center',\n    BOTTOM_RIGHT: 'bottom-right',\n    CENTER_LEFT: 'center-left',\n    CENTER_CENTER: 'center-center',\n    CENTER_RIGHT: 'center-right',\n    TOP_LEFT: 'top-left',\n    TOP_CENTER: 'top-center',\n    TOP_RIGHT: 'top-right'\n};\n//# sourceMappingURL=OverlayPositioning.js.map","/**\n * @module ol/css\n */\n/**\n * @typedef {Object} FontParameters\n * @property {Array<string>} families\n * @property {string} style\n * @property {string} weight\n */\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_HIDDEN = 'ol-hidden';\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_SELECTABLE = 'ol-selectable';\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSELECTABLE = 'ol-unselectable';\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSUPPORTED = 'ol-unsupported';\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_CONTROL = 'ol-control';\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_COLLAPSED = 'ol-collapsed';\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} The CSS font property.\n * @return {FontParameters} The font families (or null if the input spec is invalid).\n */\nexport var getFontParameters = (function () {\n    /**\n     * @type {CSSStyleDeclaration}\n     */\n    var style;\n    /**\n     * @type {Object<string, FontParameters>}\n     */\n    var cache = {};\n    return function (font) {\n        if (!style) {\n            style = document.createElement('div').style;\n        }\n        if (!(font in cache)) {\n            style.font = font;\n            var family = style.fontFamily;\n            var fontWeight = style.fontWeight;\n            var fontStyle = style.fontStyle;\n            style.font = '';\n            if (!family) {\n                return null;\n            }\n            var families = family.split(/,\\s?/);\n            cache[font] = {\n                families: families,\n                weight: fontWeight,\n                style: fontStyle\n            };\n        }\n        return cache[font];\n    };\n})();\n//# sourceMappingURL=css.js.map","/**\n * @module ol/dom\n */\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number=} opt_width Canvas width.\n * @param {number=} opt_height Canvas height.\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(opt_width, opt_height) {\n    var canvas = document.createElement('canvas');\n    if (opt_width) {\n        canvas.width = opt_width;\n    }\n    if (opt_height) {\n        canvas.height = opt_height;\n    }\n    return canvas.getContext('2d');\n}\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n    var width = element.offsetWidth;\n    var style = getComputedStyle(element);\n    width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n    return width;\n}\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n    var height = element.offsetHeight;\n    var style = getComputedStyle(element);\n    height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n    return height;\n}\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n    var parent = oldNode.parentNode;\n    if (parent) {\n        parent.replaceChild(newNode, oldNode);\n    }\n}\n/**\n * @param {Node} node The node to remove.\n * @returns {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n    return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n    while (node.lastChild) {\n        node.removeChild(node.lastChild);\n    }\n}\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n    var oldChildren = node.childNodes;\n    for (var i = 0; true; ++i) {\n        var oldChild = oldChildren[i];\n        var newChild = children[i];\n        // check if our work is done\n        if (!oldChild && !newChild) {\n            break;\n        }\n        // check if children match\n        if (oldChild === newChild) {\n            continue;\n        }\n        // check if a new child needs to be added\n        if (!oldChild) {\n            node.appendChild(newChild);\n            continue;\n        }\n        // check if an old child needs to be removed\n        if (!newChild) {\n            node.removeChild(oldChild);\n            --i;\n            continue;\n        }\n        // reorder\n        node.insertBefore(newChild, oldChild);\n    }\n}\n//# sourceMappingURL=dom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/AssertionError\n */\nimport { VERSION } from './util.js';\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nvar AssertionError = /** @class */ (function (_super) {\n    __extends(AssertionError, _super);\n    /**\n     * @param {number} code Error code.\n     */\n    function AssertionError(code) {\n        var _this = this;\n        var path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n        var message = 'Assertion failed. See https://openlayers.org/en/' + path +\n            '/doc/errors/#' + code + ' for details.';\n        _this = _super.call(this, message) || this;\n        /**\n         * Error code. The meaning of the code can be found on\n         * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n         * the version found in the OpenLayers script's header comment if a version\n         * other than the latest is used).\n         * @type {number}\n         * @api\n         */\n        _this.code = code;\n        /**\n         * @type {string}\n         */\n        _this.name = 'AssertionError';\n        // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n        _this.message = message;\n        return _this;\n    }\n    return AssertionError;\n}(Error));\nexport default AssertionError;\n//# sourceMappingURL=AssertionError.js.map","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n    if (!assertion) {\n        throw new AssertionError(errorCode);\n    }\n}\n//# sourceMappingURL=asserts.js.map","/**\n * @module ol/extent/Corner\n */\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n    BOTTOM_LEFT: 'bottom-left',\n    BOTTOM_RIGHT: 'bottom-right',\n    TOP_LEFT: 'top-left',\n    TOP_RIGHT: 'top-right'\n};\n//# sourceMappingURL=Corner.js.map","/**\n * @module ol/extent/Relationship\n */\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n    UNKNOWN: 0,\n    INTERSECTING: 1,\n    ABOVE: 2,\n    RIGHT: 4,\n    BELOW: 8,\n    LEFT: 16\n};\n//# sourceMappingURL=Relationship.js.map","/**\n * @module ol/extent\n */\nimport { assert } from './asserts.js';\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n    var extent = createEmpty();\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        extendCoordinate(extent, coordinates[i]);\n    }\n    return extent;\n}\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent=} opt_extent Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n    var minX = Math.min.apply(null, xs);\n    var minY = Math.min.apply(null, ys);\n    var maxX = Math.max.apply(null, xs);\n    var maxY = Math.max.apply(null, ys);\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0] - value;\n        opt_extent[1] = extent[1] - value;\n        opt_extent[2] = extent[2] + value;\n        opt_extent[3] = extent[3] + value;\n        return opt_extent;\n    }\n    else {\n        return [\n            extent[0] - value,\n            extent[1] - value,\n            extent[2] + value,\n            extent[3] + value\n        ];\n    }\n}\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0];\n        opt_extent[1] = extent[1];\n        opt_extent[2] = extent[2];\n        opt_extent[3] = extent[3];\n        return opt_extent;\n    }\n    else {\n        return extent.slice();\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n    var dx, dy;\n    if (x < extent[0]) {\n        dx = extent[0] - x;\n    }\n    else if (extent[2] < x) {\n        dx = x - extent[2];\n    }\n    else {\n        dx = 0;\n    }\n    if (y < extent[1]) {\n        dy = extent[1] - y;\n    }\n    else if (extent[3] < y) {\n        dy = y - extent[3];\n    }\n    else {\n        dy = 0;\n    }\n    return dx * dx + dy * dy;\n}\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n    return containsXY(extent, coordinate[0], coordinate[1]);\n}\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n    return extent1[0] <= extent2[0] && extent2[2] <= extent1[2] &&\n        extent1[1] <= extent2[1] && extent2[3] <= extent1[3];\n}\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n    return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {Relationship} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var x = coordinate[0];\n    var y = coordinate[1];\n    var relationship = Relationship.UNKNOWN;\n    if (x < minX) {\n        relationship = relationship | Relationship.LEFT;\n    }\n    else if (x > maxX) {\n        relationship = relationship | Relationship.RIGHT;\n    }\n    if (y < minY) {\n        relationship = relationship | Relationship.BELOW;\n    }\n    else if (y > maxY) {\n        relationship = relationship | Relationship.ABOVE;\n    }\n    if (relationship === Relationship.UNKNOWN) {\n        relationship = Relationship.INTERSECTING;\n    }\n    return relationship;\n}\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n    return [Infinity, Infinity, -Infinity, -Infinity];\n}\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = minX;\n        opt_extent[1] = minY;\n        opt_extent[2] = maxX;\n        opt_extent[3] = maxY;\n        return opt_extent;\n    }\n    else {\n        return [minX, minY, maxX, maxY];\n    }\n}\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n    return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n    var x = coordinate[0];\n    var y = coordinate[1];\n    return createOrUpdate(x, y, x, y, opt_extent);\n}\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendCoordinates(extent, coordinates);\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(flatCoordinates, offset, end, stride, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendRings(extent, rings);\n}\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n    return extent1[0] == extent2[0] && extent1[2] == extent2[2] &&\n        extent1[1] == extent2[1] && extent1[3] == extent2[3];\n}\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n    if (extent2[0] < extent1[0]) {\n        extent1[0] = extent2[0];\n    }\n    if (extent2[2] > extent1[2]) {\n        extent1[2] = extent2[2];\n    }\n    if (extent2[1] < extent1[1]) {\n        extent1[1] = extent2[1];\n    }\n    if (extent2[3] > extent1[3]) {\n        extent1[3] = extent2[3];\n    }\n    return extent1;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n    if (coordinate[0] < extent[0]) {\n        extent[0] = coordinate[0];\n    }\n    if (coordinate[0] > extent[2]) {\n        extent[2] = coordinate[0];\n    }\n    if (coordinate[1] < extent[1]) {\n        extent[1] = coordinate[1];\n    }\n    if (coordinate[1] > extent[3]) {\n        extent[3] = coordinate[1];\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        extendCoordinate(extent, coordinates[i]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(extent, flatCoordinates, offset, end, stride) {\n    for (; offset < end; offset += stride) {\n        extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n    for (var i = 0, ii = rings.length; i < ii; ++i) {\n        extendCoordinates(extent, rings[i]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n    extent[0] = Math.min(extent[0], x);\n    extent[1] = Math.min(extent[1], y);\n    extent[2] = Math.max(extent[2], x);\n    extent[3] = Math.max(extent[3], y);\n}\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n    var val;\n    val = callback(getBottomLeft(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getBottomRight(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getTopRight(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getTopLeft(extent));\n    if (val) {\n        return val;\n    }\n    return false;\n}\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n    var area = 0;\n    if (!isEmpty(extent)) {\n        area = getWidth(extent) * getHeight(extent);\n    }\n    return area;\n}\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n    return [extent[0], extent[1]];\n}\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n    return [extent[2], extent[1]];\n}\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n    return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n    var coordinate;\n    if (corner === Corner.BOTTOM_LEFT) {\n        coordinate = getBottomLeft(extent);\n    }\n    else if (corner === Corner.BOTTOM_RIGHT) {\n        coordinate = getBottomRight(extent);\n    }\n    else if (corner === Corner.TOP_LEFT) {\n        coordinate = getTopLeft(extent);\n    }\n    else if (corner === Corner.TOP_RIGHT) {\n        coordinate = getTopRight(extent);\n    }\n    else {\n        assert(false, 13); // Invalid corner\n    }\n    return coordinate;\n}\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n    var minX = Math.min(extent1[0], extent2[0]);\n    var minY = Math.min(extent1[1], extent2[1]);\n    var maxX = Math.max(extent1[2], extent2[2]);\n    var maxY = Math.max(extent1[3], extent2[3]);\n    return (maxX - minX) * (maxY - minY);\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, opt_extent) {\n    var dx = resolution * size[0] / 2;\n    var dy = resolution * size[1] / 2;\n    var cosRotation = Math.cos(rotation);\n    var sinRotation = Math.sin(rotation);\n    var xCos = dx * cosRotation;\n    var xSin = dx * sinRotation;\n    var yCos = dy * cosRotation;\n    var ySin = dy * sinRotation;\n    var x = center[0];\n    var y = center[1];\n    var x0 = x - xCos + ySin;\n    var x1 = x - xCos - ySin;\n    var x2 = x + xCos - ySin;\n    var x3 = x + xCos + ySin;\n    var y0 = y - xSin - yCos;\n    var y1 = y - xSin + yCos;\n    var y2 = y + xSin + yCos;\n    var y3 = y + xSin - yCos;\n    return createOrUpdate(Math.min(x0, x1, x2, x3), Math.min(y0, y1, y2, y3), Math.max(x0, x1, x2, x3), Math.max(y0, y1, y2, y3), opt_extent);\n}\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n    return extent[3] - extent[1];\n}\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n    var intersection = getIntersection(extent1, extent2);\n    return getArea(intersection);\n}\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent=} opt_extent Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n    var intersection = opt_extent ? opt_extent : createEmpty();\n    if (intersects(extent1, extent2)) {\n        if (extent1[0] > extent2[0]) {\n            intersection[0] = extent1[0];\n        }\n        else {\n            intersection[0] = extent2[0];\n        }\n        if (extent1[1] > extent2[1]) {\n            intersection[1] = extent1[1];\n        }\n        else {\n            intersection[1] = extent2[1];\n        }\n        if (extent1[2] < extent2[2]) {\n            intersection[2] = extent1[2];\n        }\n        else {\n            intersection[2] = extent2[2];\n        }\n        if (extent1[3] < extent2[3]) {\n            intersection[3] = extent1[3];\n        }\n        else {\n            intersection[3] = extent2[3];\n        }\n    }\n    else {\n        createOrUpdateEmpty(intersection);\n    }\n    return intersection;\n}\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n    return getWidth(extent) + getHeight(extent);\n}\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n    return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n    return [extent[0], extent[3]];\n}\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n    return [extent[2], extent[3]];\n}\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n    return extent[2] - extent[0];\n}\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n    return extent1[0] <= extent2[2] &&\n        extent1[2] >= extent2[0] &&\n        extent1[1] <= extent2[3] &&\n        extent1[3] >= extent2[1];\n}\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n    return extent[2] < extent[0] || extent[3] < extent[1];\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0];\n        opt_extent[1] = extent[1];\n        opt_extent[2] = extent[2];\n        opt_extent[3] = extent[3];\n        return opt_extent;\n    }\n    else {\n        return extent;\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n    var deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n    var deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n    extent[0] -= deltaX;\n    extent[2] += deltaX;\n    extent[1] -= deltaY;\n    extent[3] += deltaY;\n}\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n    var intersects = false;\n    var startRel = coordinateRelationship(extent, start);\n    var endRel = coordinateRelationship(extent, end);\n    if (startRel === Relationship.INTERSECTING ||\n        endRel === Relationship.INTERSECTING) {\n        intersects = true;\n    }\n    else {\n        var minX = extent[0];\n        var minY = extent[1];\n        var maxX = extent[2];\n        var maxY = extent[3];\n        var startX = start[0];\n        var startY = start[1];\n        var endX = end[0];\n        var endY = end[1];\n        var slope = (endY - startY) / (endX - startX);\n        var x = void 0, y = void 0;\n        if (!!(endRel & Relationship.ABOVE) &&\n            !(startRel & Relationship.ABOVE)) {\n            // potentially intersects top\n            x = endX - ((endY - maxY) / slope);\n            intersects = x >= minX && x <= maxX;\n        }\n        if (!intersects && !!(endRel & Relationship.RIGHT) &&\n            !(startRel & Relationship.RIGHT)) {\n            // potentially intersects right\n            y = endY - ((endX - maxX) * slope);\n            intersects = y >= minY && y <= maxY;\n        }\n        if (!intersects && !!(endRel & Relationship.BELOW) &&\n            !(startRel & Relationship.BELOW)) {\n            // potentially intersects bottom\n            x = endX - ((endY - minY) / slope);\n            intersects = x >= minX && x <= maxX;\n        }\n        if (!intersects && !!(endRel & Relationship.LEFT) &&\n            !(startRel & Relationship.LEFT)) {\n            // potentially intersects left\n            y = endY - ((endX - minX) * slope);\n            intersects = y >= minY && y <= maxY;\n        }\n    }\n    return intersects;\n}\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent) {\n    var coordinates = [\n        extent[0], extent[1],\n        extent[0], extent[3],\n        extent[2], extent[1],\n        extent[2], extent[3]\n    ];\n    transformFn(coordinates, coordinates, 2);\n    var xs = [coordinates[0], coordinates[2], coordinates[4], coordinates[6]];\n    var ys = [coordinates[1], coordinates[3], coordinates[5], coordinates[7]];\n    return _boundingExtentXYs(xs, ys, opt_extent);\n}\n//# sourceMappingURL=extent.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Overlay\n */\nimport MapEventType from './MapEventType.js';\nimport BaseObject, { getChangeEventType } from './Object.js';\nimport OverlayPositioning from './OverlayPositioning.js';\nimport { CLASS_SELECTABLE } from './css.js';\nimport { removeNode, removeChildren, outerWidth, outerHeight } from './dom.js';\nimport { listen, unlistenByKey } from './events.js';\nimport { containsExtent } from './extent.js';\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {HTMLElement} [element] The overlay element.\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {import(\"./coordinate.js\").Coordinate} [position] The overlay position\n * in map projection.\n * @property {OverlayPositioning} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {boolean} [autoPan=false] If set to `true` the map is panned when\n * calling `setPosition`, so that the overlay is entirely visible in the current\n * viewport.\n * @property {PanOptions} [autoPanAnimation] The\n * animation options used to pan the overlay into view. This animation is only\n * used when `autoPan` is enabled. A `duration` and `easing` may be provided to\n * customize the animation.\n * @property {number} [autoPanMargin=20] The margin (in pixels) between the\n * overlay and the borders of the map when autopanning.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing~inAndOut}.\n */\n/**\n * @enum {string}\n * @protected\n */\nvar Property = {\n    ELEMENT: 'element',\n    MAP: 'map',\n    OFFSET: 'offset',\n    POSITION: 'position',\n    POSITIONING: 'positioning'\n};\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay';\n *\n *     var popup = new Overlay({\n *       element: document.getElementById('popup')\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @api\n */\nvar Overlay = /** @class */ (function (_super) {\n    __extends(Overlay, _super);\n    /**\n     * @param {Options} options Overlay options.\n     */\n    function Overlay(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {Options}\n         */\n        _this.options = options;\n        /**\n         * @protected\n         * @type {number|string|undefined}\n         */\n        _this.id = options.id;\n        /**\n         * @protected\n         * @type {boolean}\n         */\n        _this.insertFirst = options.insertFirst !== undefined ?\n            options.insertFirst : true;\n        /**\n         * @protected\n         * @type {boolean}\n         */\n        _this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n        /**\n         * @protected\n         * @type {HTMLElement}\n         */\n        _this.element = document.createElement('div');\n        _this.element.className = options.className !== undefined ?\n            options.className : 'ol-overlay-container ' + CLASS_SELECTABLE;\n        _this.element.style.position = 'absolute';\n        /**\n         * @protected\n         * @type {boolean}\n         */\n        _this.autoPan = options.autoPan !== undefined ? options.autoPan : false;\n        /**\n         * @protected\n         * @type {PanOptions}\n         */\n        _this.autoPanAnimation = options.autoPanAnimation || /** @type {PanOptions} */ ({});\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.autoPanMargin = options.autoPanMargin !== undefined ?\n            options.autoPanMargin : 20;\n        /**\n         * @protected\n         * @type {{bottom_: string,\n         *         left_: string,\n         *         right_: string,\n         *         top_: string,\n         *         visible: boolean}}\n         */\n        _this.rendered = {\n            bottom_: '',\n            left_: '',\n            right_: '',\n            top_: '',\n            visible: true\n        };\n        /**\n         * @protected\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.mapPostrenderListenerKey = null;\n        _this.addEventListener(getChangeEventType(Property.ELEMENT), _this.handleElementChanged);\n        _this.addEventListener(getChangeEventType(Property.MAP), _this.handleMapChanged);\n        _this.addEventListener(getChangeEventType(Property.OFFSET), _this.handleOffsetChanged);\n        _this.addEventListener(getChangeEventType(Property.POSITION), _this.handlePositionChanged);\n        _this.addEventListener(getChangeEventType(Property.POSITIONING), _this.handlePositioningChanged);\n        if (options.element !== undefined) {\n            _this.setElement(options.element);\n        }\n        _this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n        _this.setPositioning(options.positioning !== undefined ?\n            /** @type {OverlayPositioning} */ (options.positioning) :\n            OverlayPositioning.TOP_LEFT);\n        if (options.position !== undefined) {\n            _this.setPosition(options.position);\n        }\n        return _this;\n    }\n    /**\n     * Get the DOM element of this overlay.\n     * @return {HTMLElement|undefined} The Element containing the overlay.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.getElement = function () {\n        return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\n    };\n    /**\n     * Get the overlay identifier which is set on constructor.\n     * @return {number|string|undefined} Id.\n     * @api\n     */\n    Overlay.prototype.getId = function () {\n        return this.id;\n    };\n    /**\n     * Get the map associated with this overlay.\n     * @return {import(\"./PluggableMap.js\").default|undefined} The map that the\n     * overlay is part of.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.getMap = function () {\n        return (\n        /** @type {import(\"./PluggableMap.js\").default|undefined} */ (this.get(Property.MAP)));\n    };\n    /**\n     * Get the offset of this overlay.\n     * @return {Array<number>} The offset.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.getOffset = function () {\n        return /** @type {Array<number>} */ (this.get(Property.OFFSET));\n    };\n    /**\n     * Get the current position of this overlay.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} The spatial point that the overlay is\n     *     anchored at.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.getPosition = function () {\n        return (\n        /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(Property.POSITION)));\n    };\n    /**\n     * Get the current positioning of this overlay.\n     * @return {OverlayPositioning} How the overlay is positioned\n     *     relative to its point on the map.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.getPositioning = function () {\n        return (\n        /** @type {OverlayPositioning} */ (this.get(Property.POSITIONING)));\n    };\n    /**\n     * @protected\n     */\n    Overlay.prototype.handleElementChanged = function () {\n        removeChildren(this.element);\n        var element = this.getElement();\n        if (element) {\n            this.element.appendChild(element);\n        }\n    };\n    /**\n     * @protected\n     */\n    Overlay.prototype.handleMapChanged = function () {\n        if (this.mapPostrenderListenerKey) {\n            removeNode(this.element);\n            unlistenByKey(this.mapPostrenderListenerKey);\n            this.mapPostrenderListenerKey = null;\n        }\n        var map = this.getMap();\n        if (map) {\n            this.mapPostrenderListenerKey = listen(map, MapEventType.POSTRENDER, this.render, this);\n            this.updatePixelPosition();\n            var container = this.stopEvent ?\n                map.getOverlayContainerStopEvent() : map.getOverlayContainer();\n            if (this.insertFirst) {\n                container.insertBefore(this.element, container.childNodes[0] || null);\n            }\n            else {\n                container.appendChild(this.element);\n            }\n        }\n    };\n    /**\n     * @protected\n     */\n    Overlay.prototype.render = function () {\n        this.updatePixelPosition();\n    };\n    /**\n     * @protected\n     */\n    Overlay.prototype.handleOffsetChanged = function () {\n        this.updatePixelPosition();\n    };\n    /**\n     * @protected\n     */\n    Overlay.prototype.handlePositionChanged = function () {\n        this.updatePixelPosition();\n        if (this.get(Property.POSITION) && this.autoPan) {\n            this.panIntoView();\n        }\n    };\n    /**\n     * @protected\n     */\n    Overlay.prototype.handlePositioningChanged = function () {\n        this.updatePixelPosition();\n    };\n    /**\n     * Set the DOM element to be associated with this overlay.\n     * @param {HTMLElement|undefined} element The Element containing the overlay.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.setElement = function (element) {\n        this.set(Property.ELEMENT, element);\n    };\n    /**\n     * Set the map to be associated with this overlay.\n     * @param {import(\"./PluggableMap.js\").default|undefined} map The map that the\n     * overlay is part of.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.setMap = function (map) {\n        this.set(Property.MAP, map);\n    };\n    /**\n     * Set the offset for this overlay.\n     * @param {Array<number>} offset Offset.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.setOffset = function (offset) {\n        this.set(Property.OFFSET, offset);\n    };\n    /**\n     * Set the position for this overlay. If the position is `undefined` the\n     * overlay is hidden.\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} position The spatial point that the overlay\n     *     is anchored at.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.setPosition = function (position) {\n        this.set(Property.POSITION, position);\n    };\n    /**\n     * Pan the map so that the overlay is entirely visible in the current viewport\n     * (if necessary).\n     * @protected\n     */\n    Overlay.prototype.panIntoView = function () {\n        var map = this.getMap();\n        if (!map || !map.getTargetElement()) {\n            return;\n        }\n        var mapRect = this.getRect(map.getTargetElement(), map.getSize());\n        var element = this.getElement();\n        var overlayRect = this.getRect(element, [outerWidth(element), outerHeight(element)]);\n        var margin = this.autoPanMargin;\n        if (!containsExtent(mapRect, overlayRect)) {\n            // the overlay is not completely inside the viewport, so pan the map\n            var offsetLeft = overlayRect[0] - mapRect[0];\n            var offsetRight = mapRect[2] - overlayRect[2];\n            var offsetTop = overlayRect[1] - mapRect[1];\n            var offsetBottom = mapRect[3] - overlayRect[3];\n            var delta = [0, 0];\n            if (offsetLeft < 0) {\n                // move map to the left\n                delta[0] = offsetLeft - margin;\n            }\n            else if (offsetRight < 0) {\n                // move map to the right\n                delta[0] = Math.abs(offsetRight) + margin;\n            }\n            if (offsetTop < 0) {\n                // move map up\n                delta[1] = offsetTop - margin;\n            }\n            else if (offsetBottom < 0) {\n                // move map down\n                delta[1] = Math.abs(offsetBottom) + margin;\n            }\n            if (delta[0] !== 0 || delta[1] !== 0) {\n                var center = /** @type {import(\"./coordinate.js\").Coordinate} */ (map.getView().getCenterInternal());\n                var centerPx = map.getPixelFromCoordinateInternal(center);\n                var newCenterPx = [\n                    centerPx[0] + delta[0],\n                    centerPx[1] + delta[1]\n                ];\n                map.getView().animateInternal({\n                    center: map.getCoordinateFromPixelInternal(newCenterPx),\n                    duration: this.autoPanAnimation.duration,\n                    easing: this.autoPanAnimation.easing\n                });\n            }\n        }\n    };\n    /**\n     * Get the extent of an element relative to the document\n     * @param {HTMLElement} element The element.\n     * @param {import(\"./size.js\").Size} size The size of the element.\n     * @return {import(\"./extent.js\").Extent} The extent.\n     * @protected\n     */\n    Overlay.prototype.getRect = function (element, size) {\n        var box = element.getBoundingClientRect();\n        var offsetX = box.left + window.pageXOffset;\n        var offsetY = box.top + window.pageYOffset;\n        return [\n            offsetX,\n            offsetY,\n            offsetX + size[0],\n            offsetY + size[1]\n        ];\n    };\n    /**\n     * Set the positioning for this overlay.\n     * @param {OverlayPositioning} positioning how the overlay is\n     *     positioned relative to its point on the map.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.setPositioning = function (positioning) {\n        this.set(Property.POSITIONING, positioning);\n    };\n    /**\n     * Modify the visibility of the element.\n     * @param {boolean} visible Element visibility.\n     * @protected\n     */\n    Overlay.prototype.setVisible = function (visible) {\n        if (this.rendered.visible !== visible) {\n            this.element.style.display = visible ? '' : 'none';\n            this.rendered.visible = visible;\n        }\n    };\n    /**\n     * Update pixel position.\n     * @protected\n     */\n    Overlay.prototype.updatePixelPosition = function () {\n        var map = this.getMap();\n        var position = this.getPosition();\n        if (!map || !map.isRendered() || !position) {\n            this.setVisible(false);\n            return;\n        }\n        var pixel = map.getPixelFromCoordinate(position);\n        var mapSize = map.getSize();\n        this.updateRenderedPosition(pixel, mapSize);\n    };\n    /**\n     * @param {import(\"./pixel.js\").Pixel} pixel The pixel location.\n     * @param {import(\"./size.js\").Size|undefined} mapSize The map size.\n     * @protected\n     */\n    Overlay.prototype.updateRenderedPosition = function (pixel, mapSize) {\n        var style = this.element.style;\n        var offset = this.getOffset();\n        var positioning = this.getPositioning();\n        this.setVisible(true);\n        var offsetX = offset[0];\n        var offsetY = offset[1];\n        if (positioning == OverlayPositioning.BOTTOM_RIGHT ||\n            positioning == OverlayPositioning.CENTER_RIGHT ||\n            positioning == OverlayPositioning.TOP_RIGHT) {\n            if (this.rendered.left_ !== '') {\n                this.rendered.left_ = style.left = '';\n            }\n            var right = Math.round(mapSize[0] - pixel[0] - offsetX) + 'px';\n            if (this.rendered.right_ != right) {\n                this.rendered.right_ = style.right = right;\n            }\n        }\n        else {\n            if (this.rendered.right_ !== '') {\n                this.rendered.right_ = style.right = '';\n            }\n            if (positioning == OverlayPositioning.BOTTOM_CENTER ||\n                positioning == OverlayPositioning.CENTER_CENTER ||\n                positioning == OverlayPositioning.TOP_CENTER) {\n                offsetX -= this.element.offsetWidth / 2;\n            }\n            var left = Math.round(pixel[0] + offsetX) + 'px';\n            if (this.rendered.left_ != left) {\n                this.rendered.left_ = style.left = left;\n            }\n        }\n        if (positioning == OverlayPositioning.BOTTOM_LEFT ||\n            positioning == OverlayPositioning.BOTTOM_CENTER ||\n            positioning == OverlayPositioning.BOTTOM_RIGHT) {\n            if (this.rendered.top_ !== '') {\n                this.rendered.top_ = style.top = '';\n            }\n            var bottom = Math.round(mapSize[1] - pixel[1] - offsetY) + 'px';\n            if (this.rendered.bottom_ != bottom) {\n                this.rendered.bottom_ = style.bottom = bottom;\n            }\n        }\n        else {\n            if (this.rendered.bottom_ !== '') {\n                this.rendered.bottom_ = style.bottom = '';\n            }\n            if (positioning == OverlayPositioning.CENTER_LEFT ||\n                positioning == OverlayPositioning.CENTER_CENTER ||\n                positioning == OverlayPositioning.CENTER_RIGHT) {\n                offsetY -= this.element.offsetHeight / 2;\n            }\n            var top_1 = Math.round(pixel[1] + offsetY) + 'px';\n            if (this.rendered.top_ != top_1) {\n                this.rendered.top_ = style.top = top_1;\n            }\n        }\n    };\n    /**\n     * returns the options this Overlay has been created with\n     * @return {Options} overlay options\n     */\n    Overlay.prototype.getOptions = function () {\n        return this.options;\n    };\n    return Overlay;\n}(BaseObject));\nexport default Overlay;\n//# sourceMappingURL=Overlay.js.map","/**\n * @module ol/CollectionEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when an item is added to the collection.\n     * @event module:ol/Collection.CollectionEvent#add\n     * @api\n     */\n    ADD: 'add',\n    /**\n     * Triggered when an item is removed from the collection.\n     * @event module:ol/Collection.CollectionEvent#remove\n     * @api\n     */\n    REMOVE: 'remove'\n};\n//# sourceMappingURL=CollectionEventType.js.map","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n    /**\n     * A true single click with no dragging and no double click. Note that this\n     * event is delayed by 250 ms to ensure that it is not a double click.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n     * @api\n     */\n    SINGLECLICK: 'singleclick',\n    /**\n     * A click with no dragging. A double click will fire two of this.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n     * @api\n     */\n    CLICK: EventType.CLICK,\n    /**\n     * A true double click, with no dragging.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n     * @api\n     */\n    DBLCLICK: EventType.DBLCLICK,\n    /**\n     * Triggered when a pointer is dragged.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n     * @api\n     */\n    POINTERDRAG: 'pointerdrag',\n    /**\n     * Triggered when a pointer is moved. Note that on touch devices this is\n     * triggered when the map is panned, so is not the same as mousemove.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n     * @api\n     */\n    POINTERMOVE: 'pointermove',\n    POINTERDOWN: 'pointerdown',\n    POINTERUP: 'pointerup',\n    POINTEROVER: 'pointerover',\n    POINTEROUT: 'pointerout',\n    POINTERENTER: 'pointerenter',\n    POINTERLEAVE: 'pointerleave',\n    POINTERCANCEL: 'pointercancel'\n};\n//# sourceMappingURL=MapBrowserEventType.js.map","/**\n * @module ol/has\n */\nvar ua = typeof navigator !== 'undefined' ?\n    navigator.userAgent.toLowerCase() : '';\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport var FIREFOX = ua.indexOf('firefox') !== -1;\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport var SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport var WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport var MAC = ua.indexOf('macintosh') !== -1;\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport var DEVICE_PIXEL_RATIO = window.devicePixelRatio || 1;\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport var IMAGE_DECODE = typeof Image !== 'undefined' && Image.prototype.decode;\n//# sourceMappingURL=has.js.map","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport { assert } from '../asserts.js';\nimport { TRUE, FALSE } from '../functions.js';\nimport { WEBKIT, MAC } from '../has.js';\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport var altKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey);\n};\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport var altShiftKeysOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        originalEvent.shiftKey);\n};\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport var focus = function (event) {\n    return event.target.getTargetElement() === document.activeElement;\n};\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport var always = TRUE;\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport var click = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport var mouseActionButton = function (mapBrowserEvent) {\n    var originalEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n    return originalEvent.button == 0 &&\n        !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport var never = FALSE;\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport var pointerMove = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == 'pointermove';\n};\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport var singleClick = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport var doubleClick = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport var noModifierKeys = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (!originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey);\n};\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport var platformModifierKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return !originalEvent.altKey &&\n        (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey;\n};\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport var shiftKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (!originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        originalEvent.shiftKey);\n};\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport var targetNotEditable = function (mapBrowserEvent) {\n    var target = mapBrowserEvent.target;\n    var tagName = /** @type {Element} */ (target).tagName;\n    return (tagName !== 'INPUT' &&\n        tagName !== 'SELECT' &&\n        tagName !== 'TEXTAREA');\n};\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport var mouseOnly = function (mapBrowserEvent) {\n    var pointerEvent = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n    assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvent.pointerType == 'mouse';\n};\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport var touchOnly = function (mapBrowserEvent) {\n    var pointerEvt = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n    assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvt.pointerType === 'touch';\n};\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport var penOnly = function (mapBrowserEvent) {\n    var pointerEvt = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n    assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvt.pointerType === 'pen';\n};\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See http://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport var primaryAction = function (mapBrowserEvent) {\n    var pointerEvent = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n    assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n//# sourceMappingURL=condition.js.map","/**\n * @module ol/geom/GeometryType\n */\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n    POINT: 'Point',\n    LINE_STRING: 'LineString',\n    LINEAR_RING: 'LinearRing',\n    POLYGON: 'Polygon',\n    MULTI_POINT: 'MultiPoint',\n    MULTI_LINE_STRING: 'MultiLineString',\n    MULTI_POLYGON: 'MultiPolygon',\n    GEOMETRY_COLLECTION: 'GeometryCollection',\n    CIRCLE: 'Circle'\n};\n//# sourceMappingURL=GeometryType.js.map","/**\n * @module ol/easing\n */\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n    return Math.pow(t, 3);\n}\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n    return 1 - easeIn(1 - t);\n}\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n    return 3 * t * t - 2 * t * t * t;\n}\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n    return t;\n}\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n    if (t < 0.5) {\n        return inAndOut(2 * t);\n    }\n    else {\n        return 1 - inAndOut(2 * (t - 0.5));\n    }\n}\n//# sourceMappingURL=easing.js.map","/**\n * @module ol/interaction/Property\n */\n/**\n * @enum {string}\n */\nexport default {\n    ACTIVE: 'active'\n};\n//# sourceMappingURL=Property.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport { easeOut, linear } from '../easing.js';\nimport InteractionProperty from './Property.js';\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nvar Interaction = /** @class */ (function (_super) {\n    __extends(Interaction, _super);\n    /**\n     * @param {InteractionOptions} options Options.\n     */\n    function Interaction(options) {\n        var _this = _super.call(this) || this;\n        if (options.handleEvent) {\n            _this.handleEvent = options.handleEvent;\n        }\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        _this.setActive(true);\n        return _this;\n    }\n    /**\n     * Return whether the interaction is currently active.\n     * @return {boolean} `true` if the interaction is active, `false` otherwise.\n     * @observable\n     * @api\n     */\n    Interaction.prototype.getActive = function () {\n        return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n    };\n    /**\n     * Get the map associated with this interaction.\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     * @api\n     */\n    Interaction.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event}.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     * @api\n     */\n    Interaction.prototype.handleEvent = function (mapBrowserEvent) {\n        return true;\n    };\n    /**\n     * Activate or deactivate the interaction.\n     * @param {boolean} active Active.\n     * @observable\n     * @api\n     */\n    Interaction.prototype.setActive = function (active) {\n        this.set(InteractionProperty.ACTIVE, active);\n    };\n    /**\n     * Remove the interaction from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    Interaction.prototype.setMap = function (map) {\n        this.map_ = map;\n    };\n    return Interaction;\n}(BaseObject));\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number=} opt_duration Duration.\n */\nexport function pan(view, delta, opt_duration) {\n    var currentCenter = view.getCenterInternal();\n    if (currentCenter) {\n        var center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n        view.animateInternal({\n            duration: opt_duration !== undefined ? opt_duration : 250,\n            easing: linear,\n            center: view.getConstrainedCenter(center)\n        });\n    }\n}\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate in the user projection.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n    var currentZoom = view.getZoom();\n    if (currentZoom === undefined) {\n        return;\n    }\n    var newZoom = view.getConstrainedZoom(currentZoom + delta);\n    var newResolution = view.getResolutionForZoom(newZoom);\n    if (view.getAnimating()) {\n        view.cancelAnimations();\n    }\n    view.animate({\n        resolution: newResolution,\n        anchor: opt_anchor,\n        duration: opt_duration !== undefined ? opt_duration : 250,\n        easing: easeOut\n    });\n}\nexport default Interaction;\n//# sourceMappingURL=Interaction.js.map","/**\n * @module ol/math\n */\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n    return Math.min(Math.max(value, min), max);\n}\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport var cosh = (function () {\n    // Wrapped in a iife, to save the overhead of checking for the native\n    // implementation on every invocation.\n    var cosh;\n    if ('cosh' in Math) {\n        // The environment supports the native Math.cosh function, use it…\n        cosh = Math.cosh;\n    }\n    else {\n        // … else, use the reference implementation of MDN:\n        cosh = function (x) {\n            var y = /** @type {Math} */ (Math).exp(x);\n            return (y + 1 / y) / 2;\n        };\n    }\n    return cosh;\n}());\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    if (dx !== 0 || dy !== 0) {\n        var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n        if (t > 1) {\n            x1 = x2;\n            y1 = y2;\n        }\n        else if (t > 0) {\n            x1 += dx * t;\n            y1 += dy * t;\n        }\n    }\n    return squaredDistance(x, y, x1, y1);\n}\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    return dx * dx + dy * dy;\n}\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n    var n = mat.length;\n    for (var i = 0; i < n; i++) {\n        // Find max in the i-th column (ignoring i - 1 first rows)\n        var maxRow = i;\n        var maxEl = Math.abs(mat[i][i]);\n        for (var r = i + 1; r < n; r++) {\n            var absValue = Math.abs(mat[r][i]);\n            if (absValue > maxEl) {\n                maxEl = absValue;\n                maxRow = r;\n            }\n        }\n        if (maxEl === 0) {\n            return null; // matrix is singular\n        }\n        // Swap max row with i-th (current) row\n        var tmp = mat[maxRow];\n        mat[maxRow] = mat[i];\n        mat[i] = tmp;\n        // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n        for (var j = i + 1; j < n; j++) {\n            var coef = -mat[j][i] / mat[i][i];\n            for (var k = i; k < n + 1; k++) {\n                if (i == k) {\n                    mat[j][k] = 0;\n                }\n                else {\n                    mat[j][k] += coef * mat[i][k];\n                }\n            }\n        }\n    }\n    // Solve Ax=b for upper triangular matrix A (mat)\n    var x = new Array(n);\n    for (var l = n - 1; l >= 0; l--) {\n        x[l] = mat[l][n] / mat[l][l];\n        for (var m = l - 1; m >= 0; m--) {\n            mat[m][n] -= mat[m][l] * x[l];\n        }\n    }\n    return x;\n}\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n    return angleInRadians * 180 / Math.PI;\n}\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n    return angleInDegrees * Math.PI / 180;\n}\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n    var r = a % b;\n    return r * b < 0 ? r + b : r;\n}\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n    return a + x * (b - a);\n}\n//# sourceMappingURL=math.js.map","/**\n * @module ol/color\n */\nimport { assert } from './asserts.js';\nimport { clamp } from './math.js';\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nvar HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nvar NAMED_COLOR_RE_ = /^([a-z]*)$/i;\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n    if (typeof color === 'string') {\n        return color;\n    }\n    else {\n        return toString(color);\n    }\n}\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n    var el = document.createElement('div');\n    el.style.color = color;\n    if (el.style.color !== '') {\n        document.body.appendChild(el);\n        var rgb = getComputedStyle(el).color;\n        document.body.removeChild(el);\n        return rgb;\n    }\n    else {\n        return '';\n    }\n}\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport var fromString = (function () {\n    // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n    // semantics, whenever the cache grows too large we simply delete an\n    // arbitrary 25% of the entries.\n    /**\n     * @const\n     * @type {number}\n     */\n    var MAX_CACHE_SIZE = 1024;\n    /**\n     * @type {Object<string, Color>}\n     */\n    var cache = {};\n    /**\n     * @type {number}\n     */\n    var cacheSize = 0;\n    return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n        var color;\n        if (cache.hasOwnProperty(s)) {\n            color = cache[s];\n        }\n        else {\n            if (cacheSize >= MAX_CACHE_SIZE) {\n                var i = 0;\n                for (var key in cache) {\n                    if ((i++ & 3) === 0) {\n                        delete cache[key];\n                        --cacheSize;\n                    }\n                }\n            }\n            color = fromStringInternal_(s);\n            cache[s] = color;\n            ++cacheSize;\n        }\n        return color;\n    });\n})();\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n    if (Array.isArray(color)) {\n        return color;\n    }\n    else {\n        return fromString(color);\n    }\n}\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n    var r, g, b, a, color;\n    if (NAMED_COLOR_RE_.exec(s)) {\n        s = fromNamed(s);\n    }\n    if (HEX_COLOR_RE_.exec(s)) { // hex\n        var n = s.length - 1; // number of hex digits\n        var d = // number of digits per channel\n         void 0; // number of digits per channel\n        if (n <= 4) {\n            d = 1;\n        }\n        else {\n            d = 2;\n        }\n        var hasAlpha = n === 4 || n === 8;\n        r = parseInt(s.substr(1 + 0 * d, d), 16);\n        g = parseInt(s.substr(1 + 1 * d, d), 16);\n        b = parseInt(s.substr(1 + 2 * d, d), 16);\n        if (hasAlpha) {\n            a = parseInt(s.substr(1 + 3 * d, d), 16);\n        }\n        else {\n            a = 255;\n        }\n        if (d == 1) {\n            r = (r << 4) + r;\n            g = (g << 4) + g;\n            b = (b << 4) + b;\n            if (hasAlpha) {\n                a = (a << 4) + a;\n            }\n        }\n        color = [r, g, b, a / 255];\n    }\n    else if (s.indexOf('rgba(') == 0) { // rgba()\n        color = s.slice(5, -1).split(',').map(Number);\n        normalize(color);\n    }\n    else if (s.indexOf('rgb(') == 0) { // rgb()\n        color = s.slice(4, -1).split(',').map(Number);\n        color.push(1);\n        normalize(color);\n    }\n    else {\n        assert(false, 14); // Invalid color\n    }\n    return color;\n}\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n    color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n    color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n    color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n    color[3] = clamp(color[3], 0, 1);\n    return color;\n}\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n    var r = color[0];\n    if (r != (r | 0)) {\n        r = (r + 0.5) | 0;\n    }\n    var g = color[1];\n    if (g != (g | 0)) {\n        g = (g + 0.5) | 0;\n    }\n    var b = color[2];\n    if (b != (b | 0)) {\n        b = (b + 0.5) | 0;\n    }\n    var a = color[3] === undefined ? 1 : color[3];\n    return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n//# sourceMappingURL=color.js.map","/**\n * @module ol/colorlike\n */\nimport { toString } from './color.js';\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n    if (Array.isArray(color)) {\n        return toString(color);\n    }\n    else {\n        return color;\n    }\n}\n//# sourceMappingURL=colorlike.js.map","/**\n * @module ol/ImageState\n */\n/**\n * @enum {number}\n */\nexport default {\n    IDLE: 0,\n    LOADING: 1,\n    LOADED: 2,\n    ERROR: 3,\n    EMPTY: 4\n};\n//# sourceMappingURL=ImageState.js.map","/**\n * @module ol/transform\n */\nimport { assert } from './asserts.js';\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n */\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n/**\n * @private\n * @type {Transform}\n */\nvar tmp_ = new Array(6);\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n    return [1, 0, 0, 1, 0, 0];\n}\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n    return set(transform, 1, 0, 0, 1, 0, 0);\n}\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n    var a1 = transform1[0];\n    var b1 = transform1[1];\n    var c1 = transform1[2];\n    var d1 = transform1[3];\n    var e1 = transform1[4];\n    var f1 = transform1[5];\n    var a2 = transform2[0];\n    var b2 = transform2[1];\n    var c2 = transform2[2];\n    var d2 = transform2[3];\n    var e2 = transform2[4];\n    var f2 = transform2[5];\n    transform1[0] = a1 * a2 + c1 * b2;\n    transform1[1] = b1 * a2 + d1 * b2;\n    transform1[2] = a1 * c2 + c1 * d2;\n    transform1[3] = b1 * c2 + d1 * d2;\n    transform1[4] = a1 * e2 + c1 * f2 + e1;\n    transform1[5] = b1 * e2 + d1 * f2 + f1;\n    return transform1;\n}\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n    transform[0] = a;\n    transform[1] = b;\n    transform[2] = c;\n    transform[3] = d;\n    transform[4] = e;\n    transform[5] = f;\n    return transform;\n}\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n    transform1[0] = transform2[0];\n    transform1[1] = transform2[1];\n    transform1[2] = transform2[2];\n    transform1[3] = transform2[3];\n    transform1[4] = transform2[4];\n    transform1[5] = transform2[5];\n    return transform1;\n}\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n    var x = coordinate[0];\n    var y = coordinate[1];\n    coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n    coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n    return coordinate;\n}\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n    var cos = Math.cos(angle);\n    var sin = Math.sin(angle);\n    return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n    return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n    return set(target, x, 0, 0, y, 0, 0);\n}\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n    return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n    var sin = Math.sin(angle);\n    var cos = Math.cos(angle);\n    transform[0] = sx * cos;\n    transform[1] = sy * sin;\n    transform[2] = -sx * sin;\n    transform[3] = sy * cos;\n    transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n    transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n    return transform;\n}\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n    return makeInverse(source, source);\n}\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n    var det = determinant(source);\n    assert(det !== 0, 32); // Transformation matrix cannot be inverted\n    var a = source[0];\n    var b = source[1];\n    var c = source[2];\n    var d = source[3];\n    var e = source[4];\n    var f = source[5];\n    target[0] = d / det;\n    target[1] = -b / det;\n    target[2] = -c / det;\n    target[3] = a / det;\n    target[4] = (c * f - d * e) / det;\n    target[5] = -(a * f - b * e) / det;\n    return target;\n}\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n    return mat[0] * mat[3] - mat[1] * mat[2];\n}\n/**\n * A string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n    return 'matrix(' + mat.join(', ') + ')';\n}\n//# sourceMappingURL=transform.js.map","/**\n * @module ol/structs/LRUCache\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { assert } from '../asserts.js';\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\n/**\n * @typedef {Object} Entry\n * @property {string} key_\n * @property {Object} newer\n * @property {Object} older\n * @property {*} value_\n */\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nvar LRUCache = /** @class */ (function (_super) {\n    __extends(LRUCache, _super);\n    /**\n     * @param {number=} opt_highWaterMark High water mark.\n     */\n    function LRUCache(opt_highWaterMark) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {number}\n         */\n        _this.highWaterMark = opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.count_ = 0;\n        /**\n         * @private\n         * @type {!Object<string, Entry>}\n         */\n        _this.entries_ = {};\n        /**\n         * @private\n         * @type {?Entry}\n         */\n        _this.oldest_ = null;\n        /**\n         * @private\n         * @type {?Entry}\n         */\n        _this.newest_ = null;\n        return _this;\n    }\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    LRUCache.prototype.canExpireCache = function () {\n        return this.getCount() > this.highWaterMark;\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    LRUCache.prototype.clear = function () {\n        this.count_ = 0;\n        this.entries_ = {};\n        this.oldest_ = null;\n        this.newest_ = null;\n        this.dispatchEvent(EventType.CLEAR);\n    };\n    /**\n     * @param {string} key Key.\n     * @return {boolean} Contains key.\n     */\n    LRUCache.prototype.containsKey = function (key) {\n        return this.entries_.hasOwnProperty(key);\n    };\n    /**\n     * @param {function(T, string, LRUCache<T>): ?} f The function\n     *     to call for every entry from the oldest to the newer. This function takes\n     *     3 arguments (the entry value, the entry key and the LRUCache object).\n     *     The return value is ignored.\n     */\n    LRUCache.prototype.forEach = function (f) {\n        var entry = this.oldest_;\n        while (entry) {\n            f(entry.value_, entry.key_, this);\n            entry = entry.newer;\n        }\n    };\n    /**\n     * @param {string} key Key.\n     * @param {*=} opt_options Options (reserverd for subclasses).\n     * @return {T} Value.\n     */\n    LRUCache.prototype.get = function (key, opt_options) {\n        var entry = this.entries_[key];\n        assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n        if (entry === this.newest_) {\n            return entry.value_;\n        }\n        else if (entry === this.oldest_) {\n            this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n            this.oldest_.older = null;\n        }\n        else {\n            entry.newer.older = entry.older;\n            entry.older.newer = entry.newer;\n        }\n        entry.newer = null;\n        entry.older = this.newest_;\n        this.newest_.newer = entry;\n        this.newest_ = entry;\n        return entry.value_;\n    };\n    /**\n     * Remove an entry from the cache.\n     * @param {string} key The entry key.\n     * @return {T} The removed entry.\n     */\n    LRUCache.prototype.remove = function (key) {\n        var entry = this.entries_[key];\n        assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n        if (entry === this.newest_) {\n            this.newest_ = /** @type {Entry} */ (entry.older);\n            if (this.newest_) {\n                this.newest_.newer = null;\n            }\n        }\n        else if (entry === this.oldest_) {\n            this.oldest_ = /** @type {Entry} */ (entry.newer);\n            if (this.oldest_) {\n                this.oldest_.older = null;\n            }\n        }\n        else {\n            entry.newer.older = entry.older;\n            entry.older.newer = entry.newer;\n        }\n        delete this.entries_[key];\n        --this.count_;\n        return entry.value_;\n    };\n    /**\n     * @return {number} Count.\n     */\n    LRUCache.prototype.getCount = function () {\n        return this.count_;\n    };\n    /**\n     * @return {Array<string>} Keys.\n     */\n    LRUCache.prototype.getKeys = function () {\n        var keys = new Array(this.count_);\n        var i = 0;\n        var entry;\n        for (entry = this.newest_; entry; entry = entry.older) {\n            keys[i++] = entry.key_;\n        }\n        return keys;\n    };\n    /**\n     * @return {Array<T>} Values.\n     */\n    LRUCache.prototype.getValues = function () {\n        var values = new Array(this.count_);\n        var i = 0;\n        var entry;\n        for (entry = this.newest_; entry; entry = entry.older) {\n            values[i++] = entry.value_;\n        }\n        return values;\n    };\n    /**\n     * @return {T} Last value.\n     */\n    LRUCache.prototype.peekLast = function () {\n        return this.oldest_.value_;\n    };\n    /**\n     * @return {string} Last key.\n     */\n    LRUCache.prototype.peekLastKey = function () {\n        return this.oldest_.key_;\n    };\n    /**\n     * Get the key of the newest item in the cache.  Throws if the cache is empty.\n     * @return {string} The newest key.\n     */\n    LRUCache.prototype.peekFirstKey = function () {\n        return this.newest_.key_;\n    };\n    /**\n     * @return {T} value Value.\n     */\n    LRUCache.prototype.pop = function () {\n        var entry = this.oldest_;\n        delete this.entries_[entry.key_];\n        if (entry.newer) {\n            entry.newer.older = null;\n        }\n        this.oldest_ = /** @type {Entry} */ (entry.newer);\n        if (!this.oldest_) {\n            this.newest_ = null;\n        }\n        --this.count_;\n        return entry.value_;\n    };\n    /**\n     * @param {string} key Key.\n     * @param {T} value Value.\n     */\n    LRUCache.prototype.replace = function (key, value) {\n        this.get(key); // update `newest_`\n        this.entries_[key].value_ = value;\n    };\n    /**\n     * @param {string} key Key.\n     * @param {T} value Value.\n     */\n    LRUCache.prototype.set = function (key, value) {\n        assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n        var entry = {\n            key_: key,\n            newer: null,\n            older: this.newest_,\n            value_: value\n        };\n        if (!this.newest_) {\n            this.oldest_ = entry;\n        }\n        else {\n            this.newest_.newer = entry;\n        }\n        this.newest_ = entry;\n        this.entries_[key] = entry;\n        ++this.count_;\n    };\n    /**\n     * Set a maximum number of entries for the cache.\n     * @param {number} size Cache size.\n     * @api\n     */\n    LRUCache.prototype.setSize = function (size) {\n        this.highWaterMark = size;\n    };\n    return LRUCache;\n}(EventTarget));\nexport default LRUCache;\n//# sourceMappingURL=LRUCache.js.map","/**\n * @module ol/render/canvas\n */\nimport { getFontParameters } from '../css.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { clear } from '../obj.js';\nimport { create as createTransform } from '../transform.js';\nimport LabelCache from './canvas/LabelCache.js';\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle\n */\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle]\n * @property {CanvasLineCap} [currentLineCap]\n * @property {Array<number>} currentLineDash\n * @property {number} [currentLineDashOffset]\n * @property {CanvasLineJoin} [currentLineJoin]\n * @property {number} [currentLineWidth]\n * @property {number} [currentMiterLimit]\n * @property {number} [lastStroke]\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {CanvasLineCap} [lineCap]\n * @property {Array<number>} lineDash\n * @property {number} [lineDashOffset]\n * @property {CanvasLineJoin} [lineJoin]\n * @property {number} [lineWidth]\n * @property {number} [miterLimit]\n */\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {CanvasLineJoin} lineJoin\n * @property {number} lineWidth\n * @property {number} miterLimit\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle\n */\n/**\n * @typedef {Object} TextState\n * @property {string} font\n * @property {string} [textAlign]\n * @property {string} textBaseline\n * @property {string} [placement]\n * @property {number} [maxAngle]\n * @property {boolean} [overflow]\n * @property {import(\"../style/Fill.js\").default} [backgroundFill]\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke]\n * @property {number} [scale]\n * @property {Array<number>} [padding]\n */\n/**\n * Container for decluttered replay instructions that need to be rendered or\n * omitted together, i.e. when styles render both an image and text, or for the\n * characters that form text along lines. The basic elements of this array are\n * `[minX, minY, maxX, maxY, count]`, where the first four entries are the\n * rendered extent of the group in pixel space. `count` is the number of styles\n * in the group, i.e. 2 when an image and a text are grouped, or 1 otherwise.\n * In addition to these four elements, declutter instruction arrays (i.e. the\n * arguments to {@link module:ol/render/canvas~drawImage} are appended to the array.\n * @typedef {Array<*>} DeclutterGroup\n */\n/**\n * Declutter groups for support of multi geometries.\n * @typedef {Array<DeclutterGroup>} DeclutterGroups\n */\n/**\n * @const\n * @type {string}\n */\nexport var defaultFont = '10px sans-serif';\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport var defaultFillStyle = '#000';\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport var defaultLineCap = 'round';\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultLineDash = [];\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineDashOffset = 0;\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport var defaultLineJoin = 'round';\n/**\n * @const\n * @type {number}\n */\nexport var defaultMiterLimit = 10;\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport var defaultStrokeStyle = '#000';\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextAlign = 'center';\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextBaseline = 'middle';\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultPadding = [0, 0, 0, 0];\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineWidth = 1;\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\n * @type {LabelCache}\n * @api\n */\nexport var labelCache = new LabelCache();\n/**\n * @type {!Object<string, number>}\n */\nexport var checkedFonts = {};\n/**\n * @type {CanvasRenderingContext2D}\n */\nvar measureContext = null;\n/**\n * @type {string}\n */\nvar measureFont;\n/**\n * @type {!Object<string, number>}\n */\nexport var textHeights = {};\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport var checkFont = (function () {\n    var retries = 100;\n    var checked = checkedFonts;\n    var size = '32px ';\n    var referenceFonts = ['monospace', 'serif'];\n    var len = referenceFonts.length;\n    var text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n    var interval, referenceWidth;\n    /**\n     * @param {string} fontStyle Css font-style\n     * @param {string} fontWeight Css font-weight\n     * @param {*} fontFamily Css font-family\n     * @return {boolean} Font with style and weight is available\n     */\n    function isAvailable(fontStyle, fontWeight, fontFamily) {\n        var context = getMeasureContext();\n        var available = true;\n        for (var i = 0; i < len; ++i) {\n            var referenceFont = referenceFonts[i];\n            context.font = fontStyle + ' ' + fontWeight + ' ' + size + referenceFont;\n            referenceWidth = context.measureText(text).width;\n            if (fontFamily != referenceFont) {\n                context.font = fontStyle + ' ' + fontWeight + ' ' + size + fontFamily + ',' + referenceFont;\n                var width = context.measureText(text).width;\n                // If width and referenceWidth are the same, then the fallback was used\n                // instead of the font we wanted, so the font is not available.\n                available = available && width != referenceWidth;\n            }\n        }\n        if (available) {\n            return true;\n        }\n        return false;\n    }\n    function check() {\n        var done = true;\n        for (var font in checked) {\n            if (checked[font] < retries) {\n                if (isAvailable.apply(this, font.split('\\n'))) {\n                    checked[font] = retries;\n                    clear(textHeights);\n                    // Make sure that loaded fonts are picked up by Safari\n                    measureContext = null;\n                    measureFont = undefined;\n                    if (labelCache.getCount()) {\n                        labelCache.clear();\n                    }\n                }\n                else {\n                    ++checked[font];\n                    done = false;\n                }\n            }\n        }\n        if (done) {\n            clearInterval(interval);\n            interval = undefined;\n        }\n    }\n    return function (fontSpec) {\n        var font = getFontParameters(fontSpec);\n        if (!font) {\n            return;\n        }\n        var families = font.families;\n        for (var i = 0, ii = families.length; i < ii; ++i) {\n            var family = families[i];\n            var key = font.style + '\\n' + font.weight + '\\n' + family;\n            if (!(key in checked)) {\n                checked[key] = retries;\n                if (!isAvailable(font.style, font.weight, family)) {\n                    checked[key] = 0;\n                    if (interval === undefined) {\n                        interval = setInterval(check, 32);\n                    }\n                }\n            }\n        }\n    };\n})();\n/**\n * @return {CanvasRenderingContext2D} Measure context.\n */\nfunction getMeasureContext() {\n    if (!measureContext) {\n        measureContext = createCanvasContext2D(1, 1);\n    }\n    return measureContext;\n}\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport var measureTextHeight = (function () {\n    /**\n     * @type {HTMLDivElement}\n     */\n    var div;\n    var heights = textHeights;\n    return function (font) {\n        var height = heights[font];\n        if (height == undefined) {\n            if (!div) {\n                div = document.createElement('div');\n                div.innerHTML = 'M';\n                div.style.margin = div.style.padding = '0 !important';\n                div.style.position = 'absolute !important';\n                div.style.left = '-99999px !important';\n            }\n            div.style.font = font;\n            document.body.appendChild(div);\n            height = heights[font] = div.offsetHeight;\n            document.body.removeChild(div);\n        }\n        return height;\n    };\n})();\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n    var measureContext = getMeasureContext();\n    if (font != measureFont) {\n        measureContext.font = measureFont = font;\n    }\n    return measureContext.measureText(text).width;\n}\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @returns {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n    if (text in cache) {\n        return cache[text];\n    }\n    var width = cache[text] = measureTextWidth(font, text);\n    return width;\n}\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n    var numLines = lines.length;\n    var width = 0;\n    for (var i = 0; i < numLines; ++i) {\n        var currentWidth = measureTextWidth(font, lines[i]);\n        width = Math.max(width, currentWidth);\n        widths.push(currentWidth);\n    }\n    return width;\n}\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n    if (rotation !== 0) {\n        context.translate(offsetX, offsetY);\n        context.rotate(rotation);\n        context.translate(-offsetX, -offsetY);\n    }\n}\nexport var resetTransform = createTransform();\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} scale Scale.\n */\nexport function drawImage(context, transform, opacity, image, originX, originY, w, h, x, y, scale) {\n    var alpha;\n    if (opacity != 1) {\n        alpha = context.globalAlpha;\n        context.globalAlpha = alpha * opacity;\n    }\n    if (transform) {\n        context.setTransform.apply(context, transform);\n    }\n    context.drawImage(image, originX, originY, w, h, x, y, w * scale, h * scale);\n    if (opacity != 1) {\n        context.globalAlpha = alpha;\n    }\n    if (transform) {\n        context.setTransform.apply(context, resetTransform);\n    }\n}\n//# sourceMappingURL=canvas.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { getUid } from '../../util.js';\nimport LRUCache from '../../structs/LRUCache.js';\n/**\n * @module ol/render/canvas/LabelCache\n */\n/**\n * @classdesc\n * Cache of pre-rendered labels.\n */\nvar LabelCache = /** @class */ (function (_super) {\n    __extends(LabelCache, _super);\n    /**\n     * @inheritDoc\n     */\n    function LabelCache(opt_highWaterMark) {\n        var _this = _super.call(this, opt_highWaterMark) || this;\n        _this.consumers = {};\n        return _this;\n    }\n    LabelCache.prototype.clear = function () {\n        this.consumers = {};\n        _super.prototype.clear.call(this);\n    };\n    /**\n     * @override\n     * @param {string} key Label key.\n     * @param {import(\"./Executor.js\").default} consumer Label consumer.\n     * @return {HTMLCanvasElement} Label.\n     */\n    LabelCache.prototype.get = function (key, consumer) {\n        var canvas = _super.prototype.get.call(this, key);\n        var consumerId = getUid(consumer);\n        if (!(consumerId in this.consumers)) {\n            this.consumers[consumerId] = {};\n        }\n        this.consumers[consumerId][key] = true;\n        return canvas;\n    };\n    LabelCache.prototype.prune = function () {\n        outer: while (this.canExpireCache()) {\n            var key = this.peekLastKey();\n            for (var consumerId in this.consumers) {\n                if (key in this.consumers[consumerId]) {\n                    break outer;\n                }\n            }\n            var canvas = this.pop();\n            canvas.width = canvas.height = 0;\n            for (var consumerId in this.consumers) {\n                delete this.consumers[consumerId][key];\n            }\n        }\n    };\n    /**\n     * @param {import(\"./Executor.js\").default} consumer Label consumer.\n     */\n    LabelCache.prototype.release = function (consumer) {\n        delete this.consumers[getUid(consumer)];\n    };\n    return LabelCache;\n}(LRUCache));\nexport default LabelCache;\n//# sourceMappingURL=LabelCache.js.map","/**\n * @module ol/style/Image\n */\nimport { abstract } from '../util.js';\n/**\n * @typedef {Object} Options\n * @property {number} opacity\n * @property {boolean} rotateWithView\n * @property {number} rotation\n * @property {number} scale\n */\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nvar ImageStyle = /** @class */ (function () {\n    /**\n     * @param {Options} options Options.\n     */\n    function ImageStyle(options) {\n        /**\n         * @private\n         * @type {number}\n         */\n        this.opacity_ = options.opacity;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.rotateWithView_ = options.rotateWithView;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.rotation_ = options.rotation;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.scale_ = options.scale;\n    }\n    /**\n     * Clones the style.\n     * @return {ImageStyle} The cloned style.\n     * @api\n     */\n    ImageStyle.prototype.clone = function () {\n        return new ImageStyle({\n            opacity: this.getOpacity(),\n            scale: this.getScale(),\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView()\n        });\n    };\n    /**\n     * Get the symbolizer opacity.\n     * @return {number} Opacity.\n     * @api\n     */\n    ImageStyle.prototype.getOpacity = function () {\n        return this.opacity_;\n    };\n    /**\n     * Determine whether the symbolizer rotates with the map.\n     * @return {boolean} Rotate with map.\n     * @api\n     */\n    ImageStyle.prototype.getRotateWithView = function () {\n        return this.rotateWithView_;\n    };\n    /**\n     * Get the symoblizer rotation.\n     * @return {number} Rotation.\n     * @api\n     */\n    ImageStyle.prototype.getRotation = function () {\n        return this.rotation_;\n    };\n    /**\n     * Get the symbolizer scale.\n     * @return {number} Scale.\n     * @api\n     */\n    ImageStyle.prototype.getScale = function () {\n        return this.scale_;\n    };\n    /**\n     * Get the anchor point in pixels. The anchor determines the center point for the\n     * symbolizer.\n     * @abstract\n     * @return {Array<number>} Anchor.\n     */\n    ImageStyle.prototype.getAnchor = function () {\n        return abstract();\n    };\n    /**\n     * Get the image element for the symbolizer.\n     * @abstract\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n     */\n    ImageStyle.prototype.getImage = function (pixelRatio) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n     */\n    ImageStyle.prototype.getHitDetectionImage = function (pixelRatio) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @return {import(\"../ImageState.js\").default} Image state.\n     */\n    ImageStyle.prototype.getImageState = function () {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @return {import(\"../size.js\").Size} Image size.\n     */\n    ImageStyle.prototype.getImageSize = function () {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n     */\n    ImageStyle.prototype.getHitDetectionImageSize = function () {\n        return abstract();\n    };\n    /**\n     * Get the origin of the symbolizer.\n     * @abstract\n     * @return {Array<number>} Origin.\n     */\n    ImageStyle.prototype.getOrigin = function () {\n        return abstract();\n    };\n    /**\n     * Get the size of the symbolizer (in pixels).\n     * @abstract\n     * @return {import(\"../size.js\").Size} Size.\n     */\n    ImageStyle.prototype.getSize = function () {\n        return abstract();\n    };\n    /**\n     * Set the opacity.\n     *\n     * @param {number} opacity Opacity.\n     * @api\n     */\n    ImageStyle.prototype.setOpacity = function (opacity) {\n        this.opacity_ = opacity;\n    };\n    /**\n     * Set whether to rotate the style with the view.\n     *\n     * @param {boolean} rotateWithView Rotate with map.\n     * @api\n     */\n    ImageStyle.prototype.setRotateWithView = function (rotateWithView) {\n        this.rotateWithView_ = rotateWithView;\n    };\n    /**\n     * Set the rotation.\n     *\n     * @param {number} rotation Rotation.\n     * @api\n     */\n    ImageStyle.prototype.setRotation = function (rotation) {\n        this.rotation_ = rotation;\n    };\n    /**\n     * Set the scale.\n     *\n     * @param {number} scale Scale.\n     * @api\n     */\n    ImageStyle.prototype.setScale = function (scale) {\n        this.scale_ = scale;\n    };\n    /**\n     * @abstract\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     * @template T\n     */\n    ImageStyle.prototype.listenImageChange = function (listener) {\n        abstract();\n    };\n    /**\n     * Load not yet loaded URI.\n     * @abstract\n     */\n    ImageStyle.prototype.load = function () {\n        abstract();\n    };\n    /**\n     * @abstract\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     * @template T\n     */\n    ImageStyle.prototype.unlistenImageChange = function (listener) {\n        abstract();\n    };\n    return ImageStyle;\n}());\nexport default ImageStyle;\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/style/RegularShape\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { asArray } from '../color.js';\nimport { asColorLike } from '../colorlike.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport ImageState from '../ImageState.js';\nimport { defaultStrokeStyle, defaultFillStyle, defaultLineCap, defaultLineWidth, defaultLineJoin, defaultMiterLimit } from '../render/canvas.js';\nimport ImageStyle from './Image.js';\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] Outer radius of a star.\n * @property {number} [radius2] Inner radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n */\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {number} strokeWidth\n * @property {number} size\n * @property {CanvasLineCap} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {CanvasLineJoin} lineJoin\n * @property {number} miterLimit\n */\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nvar RegularShape = /** @class */ (function (_super) {\n    __extends(RegularShape, _super);\n    /**\n     * @param {Options} options Options.\n     */\n    function RegularShape(options) {\n        var _this = this;\n        /**\n         * @type {boolean}\n         */\n        var rotateWithView = options.rotateWithView !== undefined ?\n            options.rotateWithView : false;\n        _this = _super.call(this, {\n            opacity: 1,\n            rotateWithView: rotateWithView,\n            rotation: options.rotation !== undefined ? options.rotation : 0,\n            scale: 1\n        }) || this;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.canvas_ = null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.hitDetectionCanvas_ = null;\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        _this.fill_ = options.fill !== undefined ? options.fill : null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.origin_ = [0, 0];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.points_ = options.points;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.radius_ = /** @type {number} */ (options.radius !== undefined ?\n            options.radius : options.radius1);\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.radius2_ = options.radius2;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.angle_ = options.angle !== undefined ? options.angle : 0;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        _this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.anchor_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.size_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.imageSize_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.hitDetectionImageSize_ = null;\n        _this.render();\n        return _this;\n    }\n    /**\n     * Clones the style.\n     * @return {RegularShape} The cloned style.\n     * @api\n     */\n    RegularShape.prototype.clone = function () {\n        var style = new RegularShape({\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            points: this.getPoints(),\n            radius: this.getRadius(),\n            radius2: this.getRadius2(),\n            angle: this.getAngle(),\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView()\n        });\n        style.setOpacity(this.getOpacity());\n        style.setScale(this.getScale());\n        return style;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    RegularShape.prototype.getAnchor = function () {\n        return this.anchor_;\n    };\n    /**\n     * Get the angle used in generating the shape.\n     * @return {number} Shape's rotation in radians.\n     * @api\n     */\n    RegularShape.prototype.getAngle = function () {\n        return this.angle_;\n    };\n    /**\n     * Get the fill style for the shape.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    RegularShape.prototype.getFill = function () {\n        return this.fill_;\n    };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.getHitDetectionImage = function (pixelRatio) {\n        return this.hitDetectionCanvas_;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    RegularShape.prototype.getImage = function (pixelRatio) {\n        return this.canvas_;\n    };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.getImageSize = function () {\n        return this.imageSize_;\n    };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.getHitDetectionImageSize = function () {\n        return this.hitDetectionImageSize_;\n    };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.getImageState = function () {\n        return ImageState.LOADED;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    RegularShape.prototype.getOrigin = function () {\n        return this.origin_;\n    };\n    /**\n     * Get the number of points for generating the shape.\n     * @return {number} Number of points for stars and regular polygons.\n     * @api\n     */\n    RegularShape.prototype.getPoints = function () {\n        return this.points_;\n    };\n    /**\n     * Get the (primary) radius for the shape.\n     * @return {number} Radius.\n     * @api\n     */\n    RegularShape.prototype.getRadius = function () {\n        return this.radius_;\n    };\n    /**\n     * Get the secondary radius for the shape.\n     * @return {number|undefined} Radius2.\n     * @api\n     */\n    RegularShape.prototype.getRadius2 = function () {\n        return this.radius2_;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    RegularShape.prototype.getSize = function () {\n        return this.size_;\n    };\n    /**\n     * Get the stroke style for the shape.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    RegularShape.prototype.getStroke = function () {\n        return this.stroke_;\n    };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.listenImageChange = function (listener) { };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.load = function () { };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.unlistenImageChange = function (listener) { };\n    /**\n     * @protected\n     */\n    RegularShape.prototype.render = function () {\n        var lineCap = defaultLineCap;\n        var lineJoin = defaultLineJoin;\n        var miterLimit = 0;\n        var lineDash = null;\n        var lineDashOffset = 0;\n        var strokeStyle;\n        var strokeWidth = 0;\n        if (this.stroke_) {\n            strokeStyle = this.stroke_.getColor();\n            if (strokeStyle === null) {\n                strokeStyle = defaultStrokeStyle;\n            }\n            strokeStyle = asColorLike(strokeStyle);\n            strokeWidth = this.stroke_.getWidth();\n            if (strokeWidth === undefined) {\n                strokeWidth = defaultLineWidth;\n            }\n            lineDash = this.stroke_.getLineDash();\n            lineDashOffset = this.stroke_.getLineDashOffset();\n            lineJoin = this.stroke_.getLineJoin();\n            if (lineJoin === undefined) {\n                lineJoin = defaultLineJoin;\n            }\n            lineCap = this.stroke_.getLineCap();\n            if (lineCap === undefined) {\n                lineCap = defaultLineCap;\n            }\n            miterLimit = this.stroke_.getMiterLimit();\n            if (miterLimit === undefined) {\n                miterLimit = defaultMiterLimit;\n            }\n        }\n        var size = 2 * (this.radius_ + strokeWidth) + 1;\n        var renderOptions = {\n            strokeStyle: strokeStyle,\n            strokeWidth: strokeWidth,\n            size: size,\n            lineCap: lineCap,\n            lineDash: lineDash,\n            lineDashOffset: lineDashOffset,\n            lineJoin: lineJoin,\n            miterLimit: miterLimit\n        };\n        var context = createCanvasContext2D(size, size);\n        this.canvas_ = context.canvas;\n        // canvas.width and height are rounded to the closest integer\n        size = this.canvas_.width;\n        var imageSize = size;\n        this.draw_(renderOptions, context, 0, 0);\n        this.createHitDetectionCanvas_(renderOptions);\n        this.anchor_ = [size / 2, size / 2];\n        this.size_ = [size, size];\n        this.imageSize_ = [imageSize, imageSize];\n    };\n    /**\n     * @private\n     * @param {RenderOptions} renderOptions Render options.\n     * @param {CanvasRenderingContext2D} context The rendering context.\n     * @param {number} x The origin for the symbol (x).\n     * @param {number} y The origin for the symbol (y).\n     */\n    RegularShape.prototype.draw_ = function (renderOptions, context, x, y) {\n        var i, angle0, radiusC;\n        // reset transform\n        context.setTransform(1, 0, 0, 1, 0, 0);\n        // then move to (x, y)\n        context.translate(x, y);\n        context.beginPath();\n        var points = this.points_;\n        if (points === Infinity) {\n            context.arc(renderOptions.size / 2, renderOptions.size / 2, this.radius_, 0, 2 * Math.PI, true);\n        }\n        else {\n            var radius2 = (this.radius2_ !== undefined) ? this.radius2_\n                : this.radius_;\n            if (radius2 !== this.radius_) {\n                points = 2 * points;\n            }\n            for (i = 0; i <= points; i++) {\n                angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n                radiusC = i % 2 === 0 ? this.radius_ : radius2;\n                context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0), renderOptions.size / 2 + radiusC * Math.sin(angle0));\n            }\n        }\n        if (this.fill_) {\n            var color = this.fill_.getColor();\n            if (color === null) {\n                color = defaultFillStyle;\n            }\n            context.fillStyle = asColorLike(color);\n            context.fill();\n        }\n        if (this.stroke_) {\n            context.strokeStyle = renderOptions.strokeStyle;\n            context.lineWidth = renderOptions.strokeWidth;\n            if (context.setLineDash && renderOptions.lineDash) {\n                context.setLineDash(renderOptions.lineDash);\n                context.lineDashOffset = renderOptions.lineDashOffset;\n            }\n            context.lineCap = renderOptions.lineCap;\n            context.lineJoin = renderOptions.lineJoin;\n            context.miterLimit = renderOptions.miterLimit;\n            context.stroke();\n        }\n        context.closePath();\n    };\n    /**\n     * @private\n     * @param {RenderOptions} renderOptions Render options.\n     */\n    RegularShape.prototype.createHitDetectionCanvas_ = function (renderOptions) {\n        this.hitDetectionImageSize_ = [renderOptions.size, renderOptions.size];\n        this.hitDetectionCanvas_ = this.canvas_;\n        if (this.fill_) {\n            var color = this.fill_.getColor();\n            // determine if fill is transparent (or pattern or gradient)\n            var opacity = 0;\n            if (typeof color === 'string') {\n                color = asArray(color);\n            }\n            if (color === null) {\n                opacity = 1;\n            }\n            else if (Array.isArray(color)) {\n                opacity = color.length === 4 ? color[3] : 1;\n            }\n            if (opacity === 0) {\n                // if a transparent fill style is set, create an extra hit-detection image\n                // with a default fill style\n                var context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n                this.hitDetectionCanvas_ = context.canvas;\n                this.drawHitDetectionCanvas_(renderOptions, context, 0, 0);\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {RenderOptions} renderOptions Render options.\n     * @param {CanvasRenderingContext2D} context The context.\n     * @param {number} x The origin for the symbol (x).\n     * @param {number} y The origin for the symbol (y).\n     */\n    RegularShape.prototype.drawHitDetectionCanvas_ = function (renderOptions, context, x, y) {\n        // reset transform\n        context.setTransform(1, 0, 0, 1, 0, 0);\n        // then move to (x, y)\n        context.translate(x, y);\n        context.beginPath();\n        var points = this.points_;\n        if (points === Infinity) {\n            context.arc(renderOptions.size / 2, renderOptions.size / 2, this.radius_, 0, 2 * Math.PI, true);\n        }\n        else {\n            var radius2 = (this.radius2_ !== undefined) ? this.radius2_\n                : this.radius_;\n            if (radius2 !== this.radius_) {\n                points = 2 * points;\n            }\n            var i = void 0, radiusC = void 0, angle0 = void 0;\n            for (i = 0; i <= points; i++) {\n                angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n                radiusC = i % 2 === 0 ? this.radius_ : radius2;\n                context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0), renderOptions.size / 2 + radiusC * Math.sin(angle0));\n            }\n        }\n        context.fillStyle = defaultFillStyle;\n        context.fill();\n        if (this.stroke_) {\n            context.strokeStyle = renderOptions.strokeStyle;\n            context.lineWidth = renderOptions.strokeWidth;\n            if (renderOptions.lineDash) {\n                context.setLineDash(renderOptions.lineDash);\n                context.lineDashOffset = renderOptions.lineDashOffset;\n            }\n            context.stroke();\n        }\n        context.closePath();\n    };\n    return RegularShape;\n}(ImageStyle));\nexport default RegularShape;\n//# sourceMappingURL=RegularShape.js.map","/**\n * @module ol/style/Circle\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport RegularShape from './RegularShape.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n */\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nvar CircleStyle = /** @class */ (function (_super) {\n    __extends(CircleStyle, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function CircleStyle(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            points: Infinity,\n            fill: options.fill,\n            radius: options.radius,\n            stroke: options.stroke\n        }) || this;\n        return _this;\n    }\n    /**\n    * Clones the style.\n    * @return {CircleStyle} The cloned style.\n    * @override\n    * @api\n    */\n    CircleStyle.prototype.clone = function () {\n        var style = new CircleStyle({\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            radius: this.getRadius()\n        });\n        style.setOpacity(this.getOpacity());\n        style.setScale(this.getScale());\n        return style;\n    };\n    /**\n     * Set the circle radius.\n     *\n     * @param {number} radius Circle radius.\n     * @api\n     */\n    CircleStyle.prototype.setRadius = function (radius) {\n        this.radius_ = radius;\n        this.render();\n    };\n    return CircleStyle;\n}(RegularShape));\nexport default CircleStyle;\n//# sourceMappingURL=Circle.js.map","/**\n * @module ol/style/Fill\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nvar Fill = /** @class */ (function () {\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Fill(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n         */\n        this.color_ = options.color !== undefined ? options.color : null;\n    }\n    /**\n     * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n     * @return {Fill} The cloned style.\n     * @api\n     */\n    Fill.prototype.clone = function () {\n        var color = this.getColor();\n        return new Fill({\n            color: Array.isArray(color) ? color.slice() : color || undefined\n        });\n    };\n    /**\n     * Get the fill color.\n     * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n     * @api\n     */\n    Fill.prototype.getColor = function () {\n        return this.color_;\n    };\n    /**\n     * Set the color.\n     *\n     * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n     * @api\n     */\n    Fill.prototype.setColor = function (color) {\n        this.color_ = color;\n    };\n    return Fill;\n}());\nexport default Fill;\n//# sourceMappingURL=Fill.js.map","/**\n * @module ol/style/Stroke\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `undefined` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nvar Stroke = /** @class */ (function () {\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Stroke(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n         */\n        this.color_ = options.color !== undefined ? options.color : null;\n        /**\n         * @private\n         * @type {CanvasLineCap|undefined}\n         */\n        this.lineCap_ = options.lineCap;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.lineDashOffset_ = options.lineDashOffset;\n        /**\n         * @private\n         * @type {CanvasLineJoin|undefined}\n         */\n        this.lineJoin_ = options.lineJoin;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.miterLimit_ = options.miterLimit;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.width_ = options.width;\n    }\n    /**\n     * Clones the style.\n     * @return {Stroke} The cloned style.\n     * @api\n     */\n    Stroke.prototype.clone = function () {\n        var color = this.getColor();\n        return new Stroke({\n            color: Array.isArray(color) ? color.slice() : color || undefined,\n            lineCap: this.getLineCap(),\n            lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n            lineDashOffset: this.getLineDashOffset(),\n            lineJoin: this.getLineJoin(),\n            miterLimit: this.getMiterLimit(),\n            width: this.getWidth()\n        });\n    };\n    /**\n     * Get the stroke color.\n     * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n     * @api\n     */\n    Stroke.prototype.getColor = function () {\n        return this.color_;\n    };\n    /**\n     * Get the line cap type for the stroke.\n     * @return {CanvasLineCap|undefined} Line cap.\n     * @api\n     */\n    Stroke.prototype.getLineCap = function () {\n        return this.lineCap_;\n    };\n    /**\n     * Get the line dash style for the stroke.\n     * @return {Array<number>} Line dash.\n     * @api\n     */\n    Stroke.prototype.getLineDash = function () {\n        return this.lineDash_;\n    };\n    /**\n     * Get the line dash offset for the stroke.\n     * @return {number|undefined} Line dash offset.\n     * @api\n     */\n    Stroke.prototype.getLineDashOffset = function () {\n        return this.lineDashOffset_;\n    };\n    /**\n     * Get the line join type for the stroke.\n     * @return {CanvasLineJoin|undefined} Line join.\n     * @api\n     */\n    Stroke.prototype.getLineJoin = function () {\n        return this.lineJoin_;\n    };\n    /**\n     * Get the miter limit for the stroke.\n     * @return {number|undefined} Miter limit.\n     * @api\n     */\n    Stroke.prototype.getMiterLimit = function () {\n        return this.miterLimit_;\n    };\n    /**\n     * Get the stroke width.\n     * @return {number|undefined} Width.\n     * @api\n     */\n    Stroke.prototype.getWidth = function () {\n        return this.width_;\n    };\n    /**\n     * Set the color.\n     *\n     * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n     * @api\n     */\n    Stroke.prototype.setColor = function (color) {\n        this.color_ = color;\n    };\n    /**\n     * Set the line cap.\n     *\n     * @param {CanvasLineCap|undefined} lineCap Line cap.\n     * @api\n     */\n    Stroke.prototype.setLineCap = function (lineCap) {\n        this.lineCap_ = lineCap;\n    };\n    /**\n     * Set the line dash.\n     *\n     * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n     * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n     * property will have no visual effect in these browsers.\n     *\n     * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n     *\n     * @param {Array<number>} lineDash Line dash.\n     * @api\n     */\n    Stroke.prototype.setLineDash = function (lineDash) {\n        this.lineDash_ = lineDash;\n    };\n    /**\n     * Set the line dash offset.\n     *\n     * @param {number|undefined} lineDashOffset Line dash offset.\n     * @api\n     */\n    Stroke.prototype.setLineDashOffset = function (lineDashOffset) {\n        this.lineDashOffset_ = lineDashOffset;\n    };\n    /**\n     * Set the line join.\n     *\n     * @param {CanvasLineJoin|undefined} lineJoin Line join.\n     * @api\n     */\n    Stroke.prototype.setLineJoin = function (lineJoin) {\n        this.lineJoin_ = lineJoin;\n    };\n    /**\n     * Set the miter limit.\n     *\n     * @param {number|undefined} miterLimit Miter limit.\n     * @api\n     */\n    Stroke.prototype.setMiterLimit = function (miterLimit) {\n        this.miterLimit_ = miterLimit;\n    };\n    /**\n     * Set the width.\n     *\n     * @param {number|undefined} width Width.\n     * @api\n     */\n    Stroke.prototype.setWidth = function (width) {\n        this.width_ = width;\n    };\n    return Stroke;\n}());\nexport default Stroke;\n//# sourceMappingURL=Stroke.js.map","/**\n * @module ol/style/Style\n */\nimport { assert } from '../asserts.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\n/**\n * A function that takes an {@link module:ol/Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\n * vector layer can be styled.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>)} StyleFunction\n */\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n/**\n * A function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void}\n * RenderFunction\n */\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *\n *  var fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)'\n *  });\n *  var stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25\n *  });\n *  var styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5\n *      }),\n *      fill: fill,\n *      stroke: stroke\n *    })\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *  import GeometryType from 'ol/geom/GeometryType';\n *\n *  var white = [255, 255, 255, 1];\n *  var blue = [0, 153, 255, 1];\n *  var width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5]\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] =\n *      styles[GeometryType.POLYGON];\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2\n *      })\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] =\n *      styles[GeometryType.LINE_STRING];\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2\n *        })\n *      }),\n *      zIndex: Infinity\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POINT] =\n *      styles[GeometryType.POINT];\n *  styles[GeometryType.GEOMETRY_COLLECTION] =\n *      styles[GeometryType.POLYGON].concat(\n *          styles[GeometryType.LINE_STRING],\n *          styles[GeometryType.POINT]\n *      );\n * ```\n *\n * @api\n */\nvar Style = /** @class */ (function () {\n    /**\n     * @param {Options=} opt_options Style options.\n     */\n    function Style(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n         */\n        this.geometry_ = null;\n        /**\n         * @private\n         * @type {!GeometryFunction}\n         */\n        this.geometryFunction_ = defaultGeometryFunction;\n        if (options.geometry !== undefined) {\n            this.setGeometry(options.geometry);\n        }\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        this.fill_ = options.fill !== undefined ? options.fill : null;\n        /**\n           * @private\n           * @type {import(\"./Image.js\").default}\n           */\n        this.image_ = options.image !== undefined ? options.image : null;\n        /**\n         * @private\n         * @type {RenderFunction|null}\n         */\n        this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n        /**\n         * @private\n         * @type {import(\"./Text.js\").default}\n         */\n        this.text_ = options.text !== undefined ? options.text : null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.zIndex_ = options.zIndex;\n    }\n    /**\n     * Clones the style.\n     * @return {Style} The cloned style.\n     * @api\n     */\n    Style.prototype.clone = function () {\n        var geometry = this.getGeometry();\n        if (geometry && typeof geometry === 'object') {\n            geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (geometry).clone();\n        }\n        return new Style({\n            geometry: geometry,\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            image: this.getImage() ? this.getImage().clone() : undefined,\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            text: this.getText() ? this.getText().clone() : undefined,\n            zIndex: this.getZIndex()\n        });\n    };\n    /**\n     * Get the custom renderer function that was configured with\n     * {@link #setRenderer} or the `renderer` constructor option.\n     * @return {RenderFunction|null} Custom renderer function.\n     * @api\n     */\n    Style.prototype.getRenderer = function () {\n        return this.renderer_;\n    };\n    /**\n     * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n     * and `image` options of the style will be ignored.\n     * @param {RenderFunction|null} renderer Custom renderer function.\n     * @api\n     */\n    Style.prototype.setRenderer = function (renderer) {\n        this.renderer_ = renderer;\n    };\n    /**\n     * Get the geometry to be rendered.\n     * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     * Feature property or geometry or function that returns the geometry that will\n     * be rendered with this style.\n     * @api\n     */\n    Style.prototype.getGeometry = function () {\n        return this.geometry_;\n    };\n    /**\n     * Get the function used to generate a geometry for rendering.\n     * @return {!GeometryFunction} Function that is called with a feature\n     * and returns the geometry to render instead of the feature's geometry.\n     * @api\n     */\n    Style.prototype.getGeometryFunction = function () {\n        return this.geometryFunction_;\n    };\n    /**\n     * Get the fill style.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    Style.prototype.getFill = function () {\n        return this.fill_;\n    };\n    /**\n     * Set the fill style.\n     * @param {import(\"./Fill.js\").default} fill Fill style.\n     * @api\n     */\n    Style.prototype.setFill = function (fill) {\n        this.fill_ = fill;\n    };\n    /**\n     * Get the image style.\n     * @return {import(\"./Image.js\").default} Image style.\n     * @api\n     */\n    Style.prototype.getImage = function () {\n        return this.image_;\n    };\n    /**\n     * Set the image style.\n     * @param {import(\"./Image.js\").default} image Image style.\n     * @api\n     */\n    Style.prototype.setImage = function (image) {\n        this.image_ = image;\n    };\n    /**\n     * Get the stroke style.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    Style.prototype.getStroke = function () {\n        return this.stroke_;\n    };\n    /**\n     * Set the stroke style.\n     * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n     * @api\n     */\n    Style.prototype.setStroke = function (stroke) {\n        this.stroke_ = stroke;\n    };\n    /**\n     * Get the text style.\n     * @return {import(\"./Text.js\").default} Text style.\n     * @api\n     */\n    Style.prototype.getText = function () {\n        return this.text_;\n    };\n    /**\n     * Set the text style.\n     * @param {import(\"./Text.js\").default} text Text style.\n     * @api\n     */\n    Style.prototype.setText = function (text) {\n        this.text_ = text;\n    };\n    /**\n     * Get the z-index for the style.\n     * @return {number|undefined} ZIndex.\n     * @api\n     */\n    Style.prototype.getZIndex = function () {\n        return this.zIndex_;\n    };\n    /**\n     * Set a geometry that is rendered instead of the feature's geometry.\n     *\n     * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n     *     Feature property or geometry or function returning a geometry to render\n     *     for this style.\n     * @api\n     */\n    Style.prototype.setGeometry = function (geometry) {\n        if (typeof geometry === 'function') {\n            this.geometryFunction_ = geometry;\n        }\n        else if (typeof geometry === 'string') {\n            this.geometryFunction_ = function (feature) {\n                return (\n                /** @type {import(\"../geom/Geometry.js\").default} */ (feature.get(geometry)));\n            };\n        }\n        else if (!geometry) {\n            this.geometryFunction_ = defaultGeometryFunction;\n        }\n        else if (geometry !== undefined) {\n            this.geometryFunction_ = function () {\n                return (\n                /** @type {import(\"../geom/Geometry.js\").default} */ (geometry));\n            };\n        }\n        this.geometry_ = geometry;\n    };\n    /**\n     * Set the z-index.\n     *\n     * @param {number|undefined} zIndex ZIndex.\n     * @api\n     */\n    Style.prototype.setZIndex = function (zIndex) {\n        this.zIndex_ = zIndex;\n    };\n    return Style;\n}());\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n    var styleFunction;\n    if (typeof obj === 'function') {\n        styleFunction = obj;\n    }\n    else {\n        /**\n         * @type {Array<Style>}\n         */\n        var styles_1;\n        if (Array.isArray(obj)) {\n            styles_1 = obj;\n        }\n        else {\n            assert(typeof /** @type {?} */ (obj).getZIndex === 'function', 41); // Expected an `Style` or an array of `Style`\n            var style = /** @type {Style} */ (obj);\n            styles_1 = [style];\n        }\n        styleFunction = function () {\n            return styles_1;\n        };\n    }\n    return styleFunction;\n}\n/**\n * @type {Array<Style>}\n */\nvar defaultStyles = null;\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n    // We don't use an immediately-invoked function\n    // and a closure so we don't get an error at script evaluation time in\n    // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n    // canvas.getContext('2d') at construction time, which will cause an.error\n    // in such browsers.)\n    if (!defaultStyles) {\n        var fill = new Fill({\n            color: 'rgba(255,255,255,0.4)'\n        });\n        var stroke = new Stroke({\n            color: '#3399CC',\n            width: 1.25\n        });\n        defaultStyles = [\n            new Style({\n                image: new CircleStyle({\n                    fill: fill,\n                    stroke: stroke,\n                    radius: 5\n                }),\n                fill: fill,\n                stroke: stroke\n            })\n        ];\n    }\n    return defaultStyles;\n}\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n    /** @type {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} */\n    var styles = {};\n    var white = [255, 255, 255, 1];\n    var blue = [0, 153, 255, 1];\n    var width = 3;\n    styles[GeometryType.POLYGON] = [\n        new Style({\n            fill: new Fill({\n                color: [255, 255, 255, 0.5]\n            })\n        })\n    ];\n    styles[GeometryType.MULTI_POLYGON] =\n        styles[GeometryType.POLYGON];\n    styles[GeometryType.LINE_STRING] = [\n        new Style({\n            stroke: new Stroke({\n                color: white,\n                width: width + 2\n            })\n        }),\n        new Style({\n            stroke: new Stroke({\n                color: blue,\n                width: width\n            })\n        })\n    ];\n    styles[GeometryType.MULTI_LINE_STRING] =\n        styles[GeometryType.LINE_STRING];\n    styles[GeometryType.CIRCLE] =\n        styles[GeometryType.POLYGON].concat(styles[GeometryType.LINE_STRING]);\n    styles[GeometryType.POINT] = [\n        new Style({\n            image: new CircleStyle({\n                radius: width * 2,\n                fill: new Fill({\n                    color: blue\n                }),\n                stroke: new Stroke({\n                    color: white,\n                    width: width / 2\n                })\n            }),\n            zIndex: Infinity\n        })\n    ];\n    styles[GeometryType.MULTI_POINT] =\n        styles[GeometryType.POINT];\n    styles[GeometryType.GEOMETRY_COLLECTION] =\n        styles[GeometryType.POLYGON].concat(styles[GeometryType.LINE_STRING], styles[GeometryType.POINT]);\n    return styles;\n}\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n    return feature.getGeometry();\n}\nexport default Style;\n//# sourceMappingURL=Style.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport BaseObject from './Object.js';\nimport Event from './events/Event.js';\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    LENGTH: 'length'\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nvar CollectionEvent = /** @class */ (function (_super) {\n    __extends(CollectionEvent, _super);\n    /**\n     * @param {CollectionEventType} type Type.\n     * @param {*=} opt_element Element.\n     * @param {number} opt_index The index of the added or removed element.\n     */\n    function CollectionEvent(type, opt_element, opt_index) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The element that is added to or removed from the collection.\n         * @type {*}\n         * @api\n         */\n        _this.element = opt_element;\n        /**\n         * The index of the added or removed element.\n         * @type {number}\n         * @api\n         */\n        _this.index = opt_index;\n        return _this;\n    }\n    return CollectionEvent;\n}(Event));\nexport { CollectionEvent };\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nvar Collection = /** @class */ (function (_super) {\n    __extends(Collection, _super);\n    /**\n     * @param {Array<T>=} opt_array Array.\n     * @param {Options=} opt_options Collection options.\n     */\n    function Collection(opt_array, opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.unique_ = !!options.unique;\n        /**\n         * @private\n         * @type {!Array<T>}\n         */\n        _this.array_ = opt_array ? opt_array : [];\n        if (_this.unique_) {\n            for (var i = 0, ii = _this.array_.length; i < ii; ++i) {\n                _this.assertUnique_(_this.array_[i], i);\n            }\n        }\n        _this.updateLength_();\n        return _this;\n    }\n    /**\n     * Remove all elements from the collection.\n     * @api\n     */\n    Collection.prototype.clear = function () {\n        while (this.getLength() > 0) {\n            this.pop();\n        }\n    };\n    /**\n     * Add elements to the collection.  This pushes each item in the provided array\n     * to the end of the collection.\n     * @param {!Array<T>} arr Array.\n     * @return {Collection<T>} This collection.\n     * @api\n     */\n    Collection.prototype.extend = function (arr) {\n        for (var i = 0, ii = arr.length; i < ii; ++i) {\n            this.push(arr[i]);\n        }\n        return this;\n    };\n    /**\n     * Iterate over each element, calling the provided callback.\n     * @param {function(T, number, Array<T>): *} f The function to call\n     *     for every element. This function takes 3 arguments (the element, the\n     *     index and the array). The return value is ignored.\n     * @api\n     */\n    Collection.prototype.forEach = function (f) {\n        var array = this.array_;\n        for (var i = 0, ii = array.length; i < ii; ++i) {\n            f(array[i], i, array);\n        }\n    };\n    /**\n     * Get a reference to the underlying Array object. Warning: if the array\n     * is mutated, no events will be dispatched by the collection, and the\n     * collection's \"length\" property won't be in sync with the actual length\n     * of the array.\n     * @return {!Array<T>} Array.\n     * @api\n     */\n    Collection.prototype.getArray = function () {\n        return this.array_;\n    };\n    /**\n     * Get the element at the provided index.\n     * @param {number} index Index.\n     * @return {T} Element.\n     * @api\n     */\n    Collection.prototype.item = function (index) {\n        return this.array_[index];\n    };\n    /**\n     * Get the length of this collection.\n     * @return {number} The length of the array.\n     * @observable\n     * @api\n     */\n    Collection.prototype.getLength = function () {\n        return this.get(Property.LENGTH);\n    };\n    /**\n     * Insert an element at the provided index.\n     * @param {number} index Index.\n     * @param {T} elem Element.\n     * @api\n     */\n    Collection.prototype.insertAt = function (index, elem) {\n        if (this.unique_) {\n            this.assertUnique_(elem);\n        }\n        this.array_.splice(index, 0, elem);\n        this.updateLength_();\n        this.dispatchEvent(new CollectionEvent(CollectionEventType.ADD, elem, index));\n    };\n    /**\n     * Remove the last element of the collection and return it.\n     * Return `undefined` if the collection is empty.\n     * @return {T|undefined} Element.\n     * @api\n     */\n    Collection.prototype.pop = function () {\n        return this.removeAt(this.getLength() - 1);\n    };\n    /**\n     * Insert the provided element at the end of the collection.\n     * @param {T} elem Element.\n     * @return {number} New length of the collection.\n     * @api\n     */\n    Collection.prototype.push = function (elem) {\n        if (this.unique_) {\n            this.assertUnique_(elem);\n        }\n        var n = this.getLength();\n        this.insertAt(n, elem);\n        return this.getLength();\n    };\n    /**\n     * Remove the first occurrence of an element from the collection.\n     * @param {T} elem Element.\n     * @return {T|undefined} The removed element or undefined if none found.\n     * @api\n     */\n    Collection.prototype.remove = function (elem) {\n        var arr = this.array_;\n        for (var i = 0, ii = arr.length; i < ii; ++i) {\n            if (arr[i] === elem) {\n                return this.removeAt(i);\n            }\n        }\n        return undefined;\n    };\n    /**\n     * Remove the element at the provided index and return it.\n     * Return `undefined` if the collection does not contain this index.\n     * @param {number} index Index.\n     * @return {T|undefined} Value.\n     * @api\n     */\n    Collection.prototype.removeAt = function (index) {\n        var prev = this.array_[index];\n        this.array_.splice(index, 1);\n        this.updateLength_();\n        this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev, index));\n        return prev;\n    };\n    /**\n     * Set the element at the provided index.\n     * @param {number} index Index.\n     * @param {T} elem Element.\n     * @api\n     */\n    Collection.prototype.setAt = function (index, elem) {\n        var n = this.getLength();\n        if (index < n) {\n            if (this.unique_) {\n                this.assertUnique_(elem, index);\n            }\n            var prev = this.array_[index];\n            this.array_[index] = elem;\n            this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev, index));\n            this.dispatchEvent(new CollectionEvent(CollectionEventType.ADD, elem, index));\n        }\n        else {\n            for (var j = n; j < index; ++j) {\n                this.insertAt(j, undefined);\n            }\n            this.insertAt(index, elem);\n        }\n    };\n    /**\n     * @private\n     */\n    Collection.prototype.updateLength_ = function () {\n        this.set(Property.LENGTH, this.array_.length);\n    };\n    /**\n     * @private\n     * @param {T} elem Element.\n     * @param {number=} opt_except Optional index to ignore.\n     */\n    Collection.prototype.assertUnique_ = function (elem, opt_except) {\n        for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n            if (this.array_[i] === elem && i !== opt_except) {\n                throw new AssertionError(58);\n            }\n        }\n    };\n    return Collection;\n}(BaseObject));\nexport default Collection;\n//# sourceMappingURL=Collection.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Select\n */\nimport { getUid } from '../util.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport { extend, includes } from '../array.js';\nimport Event from '../events/Event.js';\nimport { singleClick, never, shiftKeyOnly, pointerMove } from '../events/condition.js';\nimport { TRUE } from '../functions.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Interaction from './Interaction.js';\nimport { clear } from '../obj.js';\nimport { createEditingStyle } from '../style/Style.js';\nimport Collection from '../Collection.js';\n/**\n * @enum {string}\n */\nvar SelectEventType = {\n    /**\n     * Triggered when feature(s) has been (de)selected.\n     * @event SelectEvent#select\n     * @api\n     */\n    SELECT: 'select'\n};\n/**\n * A function that takes an {@link module:ol/Feature} or\n * {@link module:ol/render/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default):boolean} FilterFunction\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [addCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition~never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is the event\n * for the selected features as a whole. By default, this is\n * {@link module:ol/events/condition~singleClick}. Clicking on a feature selects that\n * feature and removes any that were in the selection. Clicking outside any\n * feature removes all from the selection.\n * See `toggle`, `add`, `remove` options for adding/removing extra features to/\n * from the selection.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default): boolean} [layers]\n * A list of layers from which features should be selected. Alternatively, a\n * filter function can be provided. The function will be called for each layer\n * in the map and should return `true` for layers that you want to be\n * selectable. If the option is absent, all visible layers will be considered\n * selectable.\n * @property {import(\"../style/Style.js\").StyleLike} [style]\n * Style for the selected features. By default the default edit style is used\n * (see {@link module:ol/style}).\n * @property {import(\"../events/condition.js\").Condition} [removeCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition~never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [toggleCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is in addition\n * to the `condition` event. By default,\n * {@link module:ol/events/condition~shiftKeyOnly}, i.e. pressing `shift` as\n * well as the `condition` event, adds that feature to the current selection if\n * it is not currently selected, and removes it if it is. See `add` and `remove`\n * if you want to use different events instead of a toggle.\n * @property {boolean} [multi=false] A boolean that determines if the default\n * behaviour should select only single features or all (overlapping) features at\n * the clicked map position. The default of `false` means single select.\n * @property {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} [features]\n * Collection where the interaction will place selected features. Optional. If\n * not set the interaction will create a collection. In any case the collection\n * used by the interaction is returned by\n * {@link module:ol/interaction/Select~Select#getFeatures}.\n * @property {FilterFunction} [filter] A function\n * that takes an {@link module:ol/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside\n * the radius around the given position will be checked for features.\n */\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Select~Select} instances are instances of\n * this type.\n */\nvar SelectEvent = /** @class */ (function (_super) {\n    __extends(SelectEvent, _super);\n    /**\n     * @param {SelectEventType} type The event type.\n     * @param {Array<import(\"../Feature.js\").default>} selected Selected features.\n     * @param {Array<import(\"../Feature.js\").default>} deselected Deselected features.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Associated\n     *     {@link module:ol/MapBrowserEvent}.\n     */\n    function SelectEvent(type, selected, deselected, mapBrowserEvent) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * Selected features array.\n         * @type {Array<import(\"../Feature.js\").default>}\n         * @api\n         */\n        _this.selected = selected;\n        /**\n         * Deselected features array.\n         * @type {Array<import(\"../Feature.js\").default>}\n         * @api\n         */\n        _this.deselected = deselected;\n        /**\n         * Associated {@link module:ol/MapBrowserEvent}.\n         * @type {import(\"../MapBrowserEvent.js\").default}\n         * @api\n         */\n        _this.mapBrowserEvent = mapBrowserEvent;\n        return _this;\n    }\n    return SelectEvent;\n}(Event));\n/**\n * @classdesc\n * Interaction for selecting vector features. By default, selected features are\n * styled differently, so this interaction can be used for visual highlighting,\n * as well as selecting features for other actions, such as modification or\n * output. There are three ways of controlling which features are selected:\n * using the browser event as defined by the `condition` and optionally the\n * `toggle`, `add`/`remove`, and `multi` options; a `layers` filter; and a\n * further feature filter using the `filter` option.\n *\n * Selected features are added to an internal unmanaged layer.\n *\n * @fires SelectEvent\n * @api\n */\nvar Select = /** @class */ (function (_super) {\n    __extends(Select, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Select(opt_options) {\n        var _this = _super.call(this, {\n            handleEvent: handleEvent\n        }) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : singleClick;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.addCondition_ = options.addCondition ? options.addCondition : never;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.removeCondition_ = options.removeCondition ? options.removeCondition : never;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.toggleCondition_ = options.toggleCondition ? options.toggleCondition : shiftKeyOnly;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.multi_ = options.multi ? options.multi : false;\n        /**\n         * @private\n         * @type {FilterFunction}\n         */\n        _this.filter_ = options.filter ? options.filter : TRUE;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n        /**\n         * @private\n         * @type {import(\"../style/Style.js\").default|Array.<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction|null}\n         */\n        _this.style_ = options.style ? options.style : getDefaultStyleFunction();\n        /**\n         * An association between selected feature (key)\n         * and original style (value)\n         * @private\n         * @type {Object.<number, import(\"../style/Style.js\").default|Array.<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction>}\n         */\n        _this.featureStyleAssociation_ = {};\n        /**\n         * @private\n         * @type {import(\"../Collection.js\").default}\n         */\n        _this.features_ = options.features || new Collection();\n        /** @type {function(import(\"../layer/Layer.js\").default): boolean} */\n        var layerFilter;\n        if (options.layers) {\n            if (typeof options.layers === 'function') {\n                layerFilter = options.layers;\n            }\n            else {\n                var layers_1 = options.layers;\n                layerFilter = function (layer) {\n                    return includes(layers_1, layer);\n                };\n            }\n        }\n        else {\n            layerFilter = TRUE;\n        }\n        /**\n         * @private\n         * @type {function(import(\"../layer/Layer.js\").default): boolean}\n         */\n        _this.layerFilter_ = layerFilter;\n        /**\n         * An association between selected feature (key)\n         * and layer (value)\n         * @private\n         * @type {Object<string, import(\"../layer/Layer.js\").default>}\n         */\n        _this.featureLayerAssociation_ = {};\n        var features = _this.getFeatures();\n        features.addEventListener(CollectionEventType.ADD, _this.addFeature_.bind(_this));\n        features.addEventListener(CollectionEventType.REMOVE, _this.removeFeature_.bind(_this));\n        return _this;\n    }\n    /**\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @private\n     */\n    Select.prototype.addFeatureLayerAssociation_ = function (feature, layer) {\n        this.featureLayerAssociation_[getUid(feature)] = layer;\n    };\n    /**\n     * Get the selected features.\n     * @return {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} Features collection.\n     * @api\n     */\n    Select.prototype.getFeatures = function () {\n        return this.features_;\n    };\n    /**\n     * Returns the Hit-detection tolerance.\n     * @returns {number} Hit tolerance in pixels.\n     * @api\n     */\n    Select.prototype.getHitTolerance = function () {\n        return this.hitTolerance_;\n    };\n    /**\n     * Returns the associated {@link module:ol/layer/Vector~Vector vectorlayer} of\n     * the (last) selected feature. Note that this will not work with any\n     * programmatic method like pushing features to\n     * {@link module:ol/interaction/Select~Select#getFeatures collection}.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature\n     * @return {import('../layer/Vector.js').default} Layer.\n     * @api\n     */\n    Select.prototype.getLayer = function (feature) {\n        return (\n        /** @type {import('../layer/Vector.js').default} */ (this.featureLayerAssociation_[getUid(feature)]));\n    };\n    /**\n     * Hit-detection tolerance. Pixels inside the radius around the given position\n     * will be checked for features.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @api\n     */\n    Select.prototype.setHitTolerance = function (hitTolerance) {\n        this.hitTolerance_ = hitTolerance;\n    };\n    /**\n     * Remove the interaction from its current map, if any,  and attach it to a new\n     * map, if any. Pass `null` to just remove the interaction from the current map.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @override\n     * @api\n     */\n    Select.prototype.setMap = function (map) {\n        var currentMap = this.getMap();\n        if (currentMap && this.style_) {\n            this.features_.forEach(this.removeSelectedStyle_.bind(this));\n        }\n        _super.prototype.setMap.call(this, map);\n        if (map && this.style_) {\n            this.features_.forEach(this.giveSelectedStyle_.bind(this));\n        }\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n     * @private\n     */\n    Select.prototype.addFeature_ = function (evt) {\n        var feature = evt.element;\n        if (this.style_) {\n            this.giveSelectedStyle_(feature);\n        }\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n     * @private\n     */\n    Select.prototype.removeFeature_ = function (evt) {\n        var feature = evt.element;\n        if (this.style_) {\n            this.removeSelectedStyle_(feature);\n        }\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @private\n     */\n    Select.prototype.giveSelectedStyle_ = function (feature) {\n        var key = getUid(feature);\n        this.featureStyleAssociation_[key] = feature.getStyle();\n        feature.setStyle(this.style_);\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @private\n     */\n    Select.prototype.removeSelectedStyle_ = function (feature) {\n        var key = getUid(feature);\n        feature.setStyle(this.featureStyleAssociation_[key]);\n        delete this.featureStyleAssociation_[key];\n    };\n    /**\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @private\n     */\n    Select.prototype.removeFeatureLayerAssociation_ = function (feature) {\n        delete this.featureLayerAssociation_[getUid(feature)];\n    };\n    return Select;\n}(Interaction));\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} and may change the\n * selected state of features.\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {Select}\n */\nfunction handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n        return true;\n    }\n    var add = this.addCondition_(mapBrowserEvent);\n    var remove = this.removeCondition_(mapBrowserEvent);\n    var toggle = this.toggleCondition_(mapBrowserEvent);\n    var set = !add && !remove && !toggle;\n    var map = mapBrowserEvent.map;\n    var features = this.getFeatures();\n    var deselected = [];\n    var selected = [];\n    if (set) {\n        // Replace the currently selected feature(s) with the feature(s) at the\n        // pixel, or clear the selected feature(s) if there is no feature at\n        // the pixel.\n        clear(this.featureLayerAssociation_);\n        map.forEachFeatureAtPixel(mapBrowserEvent.pixel, (\n        /**\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        function (feature, layer) {\n            if (this.filter_(feature, layer)) {\n                selected.push(feature);\n                this.addFeatureLayerAssociation_(feature, layer);\n                return !this.multi_;\n            }\n        }).bind(this), {\n            layerFilter: this.layerFilter_,\n            hitTolerance: this.hitTolerance_\n        });\n        for (var i = features.getLength() - 1; i >= 0; --i) {\n            var feature = features.item(i);\n            var index = selected.indexOf(feature);\n            if (index > -1) {\n                // feature is already selected\n                selected.splice(index, 1);\n            }\n            else {\n                features.remove(feature);\n                deselected.push(feature);\n            }\n        }\n        if (selected.length !== 0) {\n            features.extend(selected);\n        }\n    }\n    else {\n        // Modify the currently selected feature(s).\n        map.forEachFeatureAtPixel(mapBrowserEvent.pixel, (\n        /**\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        function (feature, layer) {\n            if (this.filter_(feature, layer)) {\n                if ((add || toggle) && !includes(features.getArray(), feature)) {\n                    selected.push(feature);\n                    this.addFeatureLayerAssociation_(feature, layer);\n                }\n                else if ((remove || toggle) && includes(features.getArray(), feature)) {\n                    deselected.push(feature);\n                    this.removeFeatureLayerAssociation_(feature);\n                }\n                return !this.multi_;\n            }\n        }).bind(this), {\n            layerFilter: this.layerFilter_,\n            hitTolerance: this.hitTolerance_\n        });\n        for (var j = deselected.length - 1; j >= 0; --j) {\n            features.remove(deselected[j]);\n        }\n        features.extend(selected);\n    }\n    if (selected.length > 0 || deselected.length > 0) {\n        this.dispatchEvent(new SelectEvent(SelectEventType.SELECT, selected, deselected, mapBrowserEvent));\n    }\n    return pointerMove(mapBrowserEvent);\n}\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n    var styles = createEditingStyle();\n    extend(styles[GeometryType.POLYGON], styles[GeometryType.LINE_STRING]);\n    extend(styles[GeometryType.GEOMETRY_COLLECTION], styles[GeometryType.LINE_STRING]);\n    return function (feature) {\n        if (!feature.getGeometry()) {\n            return null;\n        }\n        return styles[feature.getGeometry().getType()];\n    };\n}\nexport default Select;\n//# sourceMappingURL=Select.js.map","/**\n * @license\n * Latitude/longitude spherical geodesy formulae taken from\n * http://www.movable-type.co.uk/scripts/latlong.html\n * Licensed under CC-BY-3.0.\n */\n/**\n * @module ol/sphere\n */\nimport { toRadians, toDegrees } from './math.js';\nimport GeometryType from './geom/GeometryType.js';\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport var DEFAULT_RADIUS = 6371008.8;\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n    var radius = opt_radius || DEFAULT_RADIUS;\n    var lat1 = toRadians(c1[1]);\n    var lat2 = toRadians(c2[1]);\n    var deltaLatBy2 = (lat2 - lat1) / 2;\n    var deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n    var a = Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n        Math.sin(deltaLonBy2) * Math.sin(deltaLonBy2) *\n            Math.cos(lat1) * Math.cos(lat2);\n    return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n    var length = 0;\n    for (var i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n        length += getDistance(coordinates[i], coordinates[i + 1], radius);\n    }\n    return length;\n}\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n    var options = opt_options || {};\n    var radius = options.radius || DEFAULT_RADIUS;\n    var projection = options.projection || 'EPSG:3857';\n    var type = geometry.getType();\n    if (type !== GeometryType.GEOMETRY_COLLECTION) {\n        geometry = geometry.clone().transform(projection, 'EPSG:4326');\n    }\n    var length = 0;\n    var coordinates, coords, i, ii, j, jj;\n    switch (type) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT: {\n            break;\n        }\n        case GeometryType.LINE_STRING:\n        case GeometryType.LINEAR_RING: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            length = getLengthInternal(coordinates, radius);\n            break;\n        }\n        case GeometryType.MULTI_LINE_STRING:\n        case GeometryType.POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                length += getLengthInternal(coordinates[i], radius);\n            }\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                coords = coordinates[i];\n                for (j = 0, jj = coords.length; j < jj; ++j) {\n                    length += getLengthInternal(coords[j], radius);\n                }\n            }\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n            for (i = 0, ii = geometries.length; i < ii; ++i) {\n                length += getLength(geometries[i], opt_options);\n            }\n            break;\n        }\n        default: {\n            throw new Error('Unsupported geometry type: ' + type);\n        }\n    }\n    return length;\n}\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs-new.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n    var area = 0;\n    var len = coordinates.length;\n    var x1 = coordinates[len - 1][0];\n    var y1 = coordinates[len - 1][1];\n    for (var i = 0; i < len; i++) {\n        var x2 = coordinates[i][0];\n        var y2 = coordinates[i][1];\n        area += toRadians(x2 - x1) *\n            (2 + Math.sin(toRadians(y1)) +\n                Math.sin(toRadians(y2)));\n        x1 = x2;\n        y1 = y2;\n    }\n    return area * radius * radius / 2.0;\n}\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n    var options = opt_options || {};\n    var radius = options.radius || DEFAULT_RADIUS;\n    var projection = options.projection || 'EPSG:3857';\n    var type = geometry.getType();\n    if (type !== GeometryType.GEOMETRY_COLLECTION) {\n        geometry = geometry.clone().transform(projection, 'EPSG:4326');\n    }\n    var area = 0;\n    var coordinates, coords, i, ii, j, jj;\n    switch (type) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n        case GeometryType.LINE_STRING:\n        case GeometryType.MULTI_LINE_STRING:\n        case GeometryType.LINEAR_RING: {\n            break;\n        }\n        case GeometryType.POLYGON: {\n            coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (geometry).getCoordinates();\n            area = Math.abs(getAreaInternal(coordinates[0], radius));\n            for (i = 1, ii = coordinates.length; i < ii; ++i) {\n                area -= Math.abs(getAreaInternal(coordinates[i], radius));\n            }\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                coords = coordinates[i];\n                area += Math.abs(getAreaInternal(coords[0], radius));\n                for (j = 1, jj = coords.length; j < jj; ++j) {\n                    area -= Math.abs(getAreaInternal(coords[j], radius));\n                }\n            }\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n            for (i = 0, ii = geometries.length; i < ii; ++i) {\n                area += getArea(geometries[i], opt_options);\n            }\n            break;\n        }\n        default: {\n            throw new Error('Unsupported geometry type: ' + type);\n        }\n    }\n    return area;\n}\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n    var radius = opt_radius || DEFAULT_RADIUS;\n    var lat1 = toRadians(c1[1]);\n    var lon1 = toRadians(c1[0]);\n    var dByR = distance / radius;\n    var lat = Math.asin(Math.sin(lat1) * Math.cos(dByR) +\n        Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing));\n    var lon = lon1 + Math.atan2(Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1), Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat));\n    return [toDegrees(lon), toDegrees(lat)];\n}\n//# sourceMappingURL=sphere.js.map","/**\n * @module ol/proj/Units\n */\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nvar Units = {\n    DEGREES: 'degrees',\n    FEET: 'ft',\n    METERS: 'm',\n    PIXELS: 'pixels',\n    TILE_PIXELS: 'tile-pixels',\n    USFEET: 'us-ft'\n};\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport var METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.DEGREES] = 2 * Math.PI * 6370997 / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\nexport default Units;\n//# sourceMappingURL=Units.js.map","/**\n * @module ol/proj/Projection\n */\nimport { METERS_PER_UNIT } from './Units.js';\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `{number}` view resolution and an `{import(\"../coordinate.js\").Coordinate}` as arguments, and returns\n * the `{number}` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj#getPointResolution} function will be used.\n */\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4~register} function.\n *\n * @api\n */\nvar Projection = /** @class */ (function () {\n    /**\n     * @param {Options} options Projection options.\n     */\n    function Projection(options) {\n        /**\n         * @private\n         * @type {string}\n         */\n        this.code_ = options.code;\n        /**\n         * Units of projected coordinates. When set to `TILE_PIXELS`, a\n         * `this.extent_` and `this.worldExtent_` must be configured properly for each\n         * tile.\n         * @private\n         * @type {import(\"./Units.js\").default}\n         */\n        this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n        /**\n         * Validity extent of the projection in projected coordinates. For projections\n         * with `TILE_PIXELS` units, this is the extent of the tile in\n         * tile pixel space.\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.extent_ = options.extent !== undefined ? options.extent : null;\n        /**\n         * Extent of the world in EPSG:4326. For projections with\n         * `TILE_PIXELS` units, this is the extent of the tile in\n         * projected coordinate space.\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.worldExtent_ = options.worldExtent !== undefined ?\n            options.worldExtent : null;\n        /**\n         * @private\n         * @type {string}\n         */\n        this.axisOrientation_ = options.axisOrientation !== undefined ?\n            options.axisOrientation : 'enu';\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.global_ = options.global !== undefined ? options.global : false;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.canWrapX_ = !!(this.global_ && this.extent_);\n        /**\n         * @private\n         * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n         */\n        this.getPointResolutionFunc_ = options.getPointResolution;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        this.defaultTileGrid_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.metersPerUnit_ = options.metersPerUnit;\n    }\n    /**\n     * @return {boolean} The projection is suitable for wrapping the x-axis\n     */\n    Projection.prototype.canWrapX = function () {\n        return this.canWrapX_;\n    };\n    /**\n     * Get the code for this projection, e.g. 'EPSG:4326'.\n     * @return {string} Code.\n     * @api\n     */\n    Projection.prototype.getCode = function () {\n        return this.code_;\n    };\n    /**\n     * Get the validity extent for this projection.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    Projection.prototype.getExtent = function () {\n        return this.extent_;\n    };\n    /**\n     * Get the units of this projection.\n     * @return {import(\"./Units.js\").default} Units.\n     * @api\n     */\n    Projection.prototype.getUnits = function () {\n        return this.units_;\n    };\n    /**\n     * Get the amount of meters per unit of this projection.  If the projection is\n     * not configured with `metersPerUnit` or a units identifier, the return is\n     * `undefined`.\n     * @return {number|undefined} Meters.\n     * @api\n     */\n    Projection.prototype.getMetersPerUnit = function () {\n        return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n    };\n    /**\n     * Get the world extent for this projection.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    Projection.prototype.getWorldExtent = function () {\n        return this.worldExtent_;\n    };\n    /**\n     * Get the axis orientation of this projection.\n     * Example values are:\n     * enu - the default easting, northing, elevation.\n     * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n     *     or south orientated transverse mercator.\n     * wnu - westing, northing, up - some planetary coordinate systems have\n     *     \"west positive\" coordinate systems\n     * @return {string} Axis orientation.\n     * @api\n     */\n    Projection.prototype.getAxisOrientation = function () {\n        return this.axisOrientation_;\n    };\n    /**\n     * Is this projection a global projection which spans the whole world?\n     * @return {boolean} Whether the projection is global.\n     * @api\n     */\n    Projection.prototype.isGlobal = function () {\n        return this.global_;\n    };\n    /**\n     * Set if the projection is a global projection which spans the whole world\n     * @param {boolean} global Whether the projection is global.\n     * @api\n     */\n    Projection.prototype.setGlobal = function (global) {\n        this.global_ = global;\n        this.canWrapX_ = !!(global && this.extent_);\n    };\n    /**\n     * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n     */\n    Projection.prototype.getDefaultTileGrid = function () {\n        return this.defaultTileGrid_;\n    };\n    /**\n     * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n     */\n    Projection.prototype.setDefaultTileGrid = function (tileGrid) {\n        this.defaultTileGrid_ = tileGrid;\n    };\n    /**\n     * Set the validity extent for this projection.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    Projection.prototype.setExtent = function (extent) {\n        this.extent_ = extent;\n        this.canWrapX_ = !!(this.global_ && extent);\n    };\n    /**\n     * Set the world extent for this projection.\n     * @param {import(\"../extent.js\").Extent} worldExtent World extent\n     *     [minlon, minlat, maxlon, maxlat].\n     * @api\n     */\n    Projection.prototype.setWorldExtent = function (worldExtent) {\n        this.worldExtent_ = worldExtent;\n    };\n    /**\n     * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\n     * for this projection.\n     * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n     * @api\n     */\n    Projection.prototype.setGetPointResolution = function (func) {\n        this.getPointResolutionFunc_ = func;\n    };\n    /**\n     * Get the custom point resolution function for this projection (if set).\n     * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n     * resolution function (if set).\n     */\n    Projection.prototype.getPointResolutionFunc = function () {\n        return this.getPointResolutionFunc_;\n    };\n    return Projection;\n}());\nexport default Projection;\n//# sourceMappingURL=Projection.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/proj/epsg3857\n */\nimport { cosh } from '../math.js';\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n/**\n * @const\n * @type {number}\n */\nexport var HALF_SIZE = Math.PI * RADIUS;\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [\n    -HALF_SIZE, -HALF_SIZE,\n    HALF_SIZE, HALF_SIZE\n];\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var WORLD_EXTENT = [-180, -85, 180, 85];\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nvar EPSG3857Projection = /** @class */ (function (_super) {\n    __extends(EPSG3857Projection, _super);\n    /**\n     * @param {string} code Code.\n     */\n    function EPSG3857Projection(code) {\n        return _super.call(this, {\n            code: code,\n            units: Units.METERS,\n            extent: EXTENT,\n            global: true,\n            worldExtent: WORLD_EXTENT,\n            getPointResolution: function (resolution, point) {\n                return resolution / cosh(point[1] / RADIUS);\n            }\n        }) || this;\n    }\n    return EPSG3857Projection;\n}(Projection));\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n    new EPSG3857Projection('EPSG:3857'),\n    new EPSG3857Projection('EPSG:102100'),\n    new EPSG3857Projection('EPSG:102113'),\n    new EPSG3857Projection('EPSG:900913'),\n    new EPSG3857Projection('urn:ogc:def:crs:EPSG:6.18:3:3857'),\n    new EPSG3857Projection('urn:ogc:def:crs:EPSG::3857'),\n    new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857')\n];\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n    var length = input.length;\n    var dimension = opt_dimension > 1 ? opt_dimension : 2;\n    var output = opt_output;\n    if (output === undefined) {\n        if (dimension > 2) {\n            // preserve values beyond second dimension\n            output = input.slice();\n        }\n        else {\n            output = new Array(length);\n        }\n    }\n    var halfSize = HALF_SIZE;\n    for (var i = 0; i < length; i += dimension) {\n        output[i] = halfSize * input[i] / 180;\n        var y = RADIUS *\n            Math.log(Math.tan(Math.PI * (+input[i + 1] + 90) / 360));\n        if (y > halfSize) {\n            y = halfSize;\n        }\n        else if (y < -halfSize) {\n            y = -halfSize;\n        }\n        output[i + 1] = y;\n    }\n    return output;\n}\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n    var length = input.length;\n    var dimension = opt_dimension > 1 ? opt_dimension : 2;\n    var output = opt_output;\n    if (output === undefined) {\n        if (dimension > 2) {\n            // preserve values beyond second dimension\n            output = input.slice();\n        }\n        else {\n            output = new Array(length);\n        }\n    }\n    for (var i = 0; i < length; i += dimension) {\n        output[i] = 180 * input[i] / HALF_SIZE;\n        output[i + 1] = 360 * Math.atan(Math.exp(input[i + 1] / RADIUS)) / Math.PI - 90;\n    }\n    return output;\n}\n//# sourceMappingURL=epsg3857.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [-180, -90, 180, 90];\n/**\n * @const\n * @type {number}\n */\nexport var METERS_PER_UNIT = Math.PI * RADIUS / 180;\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nvar EPSG4326Projection = /** @class */ (function (_super) {\n    __extends(EPSG4326Projection, _super);\n    /**\n     * @param {string} code Code.\n     * @param {string=} opt_axisOrientation Axis orientation.\n     */\n    function EPSG4326Projection(code, opt_axisOrientation) {\n        return _super.call(this, {\n            code: code,\n            units: Units.DEGREES,\n            extent: EXTENT,\n            axisOrientation: opt_axisOrientation,\n            global: true,\n            metersPerUnit: METERS_PER_UNIT,\n            worldExtent: EXTENT\n        }) || this;\n    }\n    return EPSG4326Projection;\n}(Projection));\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n    new EPSG4326Projection('CRS:84'),\n    new EPSG4326Projection('EPSG:4326', 'neu'),\n    new EPSG4326Projection('urn:ogc:def:crs:EPSG::4326', 'neu'),\n    new EPSG4326Projection('urn:ogc:def:crs:EPSG:6.6:4326', 'neu'),\n    new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n    new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n    new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n    new EPSG4326Projection('urn:x-ogc:def:crs:EPSG:4326', 'neu')\n];\n//# sourceMappingURL=epsg4326.js.map","/**\n * @module ol/proj/transforms\n */\nimport { isEmpty } from '../obj.js';\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nvar transforms = {};\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n    transforms = {};\n}\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n    var sourceCode = source.getCode();\n    var destinationCode = destination.getCode();\n    if (!(sourceCode in transforms)) {\n        transforms[sourceCode] = {};\n    }\n    transforms[sourceCode][destinationCode] = transformFn;\n}\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n    var sourceCode = source.getCode();\n    var destinationCode = destination.getCode();\n    var transform = transforms[sourceCode][destinationCode];\n    delete transforms[sourceCode][destinationCode];\n    if (isEmpty(transforms[sourceCode])) {\n        delete transforms[sourceCode];\n    }\n    return transform;\n}\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n    var transform;\n    if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n        transform = transforms[sourceCode][destinationCode];\n    }\n    return transform;\n}\n//# sourceMappingURL=transforms.js.map","/**\n * @module ol/proj/projections\n */\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nvar cache = {};\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n    cache = {};\n}\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n    return cache[code] || null;\n}\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n    cache[code] = projection;\n}\n//# sourceMappingURL=projections.js.map","/**\n * @module ol/proj\n */\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport { getDistance } from './sphere.js';\nimport { applyTransform } from './extent.js';\nimport { modulo } from './math.js';\nimport { toEPSG4326, fromEPSG4326, PROJECTIONS as EPSG3857_PROJECTIONS } from './proj/epsg3857.js';\nimport { PROJECTIONS as EPSG4326_PROJECTIONS } from './proj/epsg4326.js';\nimport Projection from './proj/Projection.js';\nimport Units, { METERS_PER_UNIT } from './proj/Units.js';\nimport { add as addTransformFunc, clear as clearTransformFuncs, get as getTransformFunc } from './proj/transforms.js';\nimport { add as addProj, clear as clearProj, get as getProj } from './proj/projections.js';\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\nexport { METERS_PER_UNIT };\nexport { Projection };\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n    var output;\n    if (opt_output !== undefined) {\n        for (var i = 0, ii = input.length; i < ii; ++i) {\n            opt_output[i] = input[i];\n        }\n        output = opt_output;\n    }\n    else {\n        output = input.slice();\n    }\n    return output;\n}\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n    if (opt_output !== undefined && input !== opt_output) {\n        for (var i = 0, ii = input.length; i < ii; ++i) {\n            opt_output[i] = input[i];\n        }\n        input = opt_output;\n    }\n    return input;\n}\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n    addProj(projection.getCode(), projection);\n    addTransformFunc(projection, projection, cloneTransform);\n}\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n    projections.forEach(addProjection);\n}\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n    return typeof projectionLike === 'string' ?\n        getProj(/** @type {string} */ (projectionLike)) :\n        ( /** @type {Projection} */(projectionLike) || null);\n}\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {Units=} opt_units Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n    projection = get(projection);\n    var pointResolution;\n    var getter = projection.getPointResolutionFunc();\n    if (getter) {\n        pointResolution = getter(resolution, point);\n        if (opt_units && opt_units !== projection.getUnits()) {\n            var metersPerUnit = projection.getMetersPerUnit();\n            if (metersPerUnit) {\n                pointResolution = pointResolution * metersPerUnit / METERS_PER_UNIT[opt_units];\n            }\n        }\n    }\n    else {\n        var units = projection.getUnits();\n        if (units == Units.DEGREES && !opt_units || opt_units == Units.DEGREES) {\n            pointResolution = resolution;\n        }\n        else {\n            // Estimate point resolution by transforming the center pixel to EPSG:4326,\n            // measuring its width and height on the normal sphere, and taking the\n            // average of the width and height.\n            var toEPSG4326_1 = getTransformFromProjections(projection, get('EPSG:4326'));\n            var vertices = [\n                point[0] - resolution / 2, point[1],\n                point[0] + resolution / 2, point[1],\n                point[0], point[1] - resolution / 2,\n                point[0], point[1] + resolution / 2\n            ];\n            vertices = toEPSG4326_1(vertices, vertices, 2);\n            var width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n            var height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n            pointResolution = (width + height) / 2;\n            var metersPerUnit = opt_units ?\n                METERS_PER_UNIT[opt_units] :\n                projection.getMetersPerUnit();\n            if (metersPerUnit !== undefined) {\n                pointResolution /= metersPerUnit;\n            }\n        }\n    }\n    return pointResolution;\n}\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n    addProjections(projections);\n    projections.forEach(function (source) {\n        projections.forEach(function (destination) {\n            if (source !== destination) {\n                addTransformFunc(source, destination, cloneTransform);\n            }\n        });\n    });\n}\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(projections1, projections2, forwardTransform, inverseTransform) {\n    projections1.forEach(function (projection1) {\n        projections2.forEach(function (projection2) {\n            addTransformFunc(projection1, projection2, forwardTransform);\n            addTransformFunc(projection2, projection1, inverseTransform);\n        });\n    });\n}\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n    clearProj();\n    clearTransformFuncs();\n}\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n    if (!projection) {\n        return get(defaultCode);\n    }\n    else if (typeof projection === 'string') {\n        return get(projection);\n    }\n    else {\n        return (\n        /** @type {Projection} */ (projection));\n    }\n}\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n    return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>=} opt_output Output.\n     * @param {number=} opt_dimension Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, opt_output, opt_dimension) {\n        var length = input.length;\n        var dimension = opt_dimension !== undefined ? opt_dimension : 2;\n        var output = opt_output !== undefined ? opt_output : new Array(length);\n        for (var i = 0; i < length; i += dimension) {\n            var point = coordTransform([input[i], input[i + 1]]);\n            output[i] = point[0];\n            output[i + 1] = point[1];\n            for (var j = dimension - 1; j >= 2; --j) {\n                output[i + j] = input[i + j];\n            }\n        }\n        return output;\n    });\n}\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n    var sourceProj = get(source);\n    var destProj = get(destination);\n    addTransformFunc(sourceProj, destProj, createTransformFromCoordinateTransform(forward));\n    addTransformFunc(destProj, sourceProj, createTransformFromCoordinateTransform(inverse));\n}\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike=} opt_projection Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n    return transform(coordinate, 'EPSG:4326', opt_projection !== undefined ? opt_projection : 'EPSG:3857');\n}\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike=} opt_projection Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n    var lonLat = transform(coordinate, opt_projection !== undefined ? opt_projection : 'EPSG:3857', 'EPSG:4326');\n    var lon = lonLat[0];\n    if (lon < -180 || lon > 180) {\n        lonLat[0] = modulo(lon + 180, 360) - 180;\n    }\n    return lonLat;\n}\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n    if (projection1 === projection2) {\n        return true;\n    }\n    var equalUnits = projection1.getUnits() === projection2.getUnits();\n    if (projection1.getCode() === projection2.getCode()) {\n        return equalUnits;\n    }\n    else {\n        var transformFunc = getTransformFromProjections(projection1, projection2);\n        return transformFunc === cloneTransform && equalUnits;\n    }\n}\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(sourceProjection, destinationProjection) {\n    var sourceCode = sourceProjection.getCode();\n    var destinationCode = destinationProjection.getCode();\n    var transformFunc = getTransformFunc(sourceCode, destinationCode);\n    if (!transformFunc) {\n        transformFunc = identityTransform;\n    }\n    return transformFunc;\n}\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n    var sourceProjection = get(source);\n    var destinationProjection = get(destination);\n    return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj~transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n    var transformFunc = getTransform(source, destination);\n    return transformFunc(coordinate, undefined, coordinate.length);\n}\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination) {\n    var transformFunc = getTransform(source, destination);\n    return applyTransform(extent, transformFunc);\n}\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(point, sourceProjection, destinationProjection) {\n    var transformFunc = getTransformFromProjections(sourceProjection, destinationProjection);\n    return transformFunc(point);\n}\n/**\n * @type {Projection}\n */\nvar userProjection = null;\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @param {ProjectionLike} projection The user projection.\n */\nexport function setUserProjection(projection) {\n    userProjection = get(projection);\n}\n/**\n * Clear the user projection if set.  Note that this method is not yet a part of\n * the stable API.  Support for user projections is not yet complete and should\n * be considered experimental.\n */\nexport function clearUserProjection() {\n    userProjection = null;\n}\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @returns {Projection} The user projection (or null if not set).\n */\nexport function getUserProjection() {\n    return userProjection;\n}\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  Note that this\n * method is not yet a part of the stable API.  Support for user projections is\n * not yet complete and should be considered experimental.\n */\nexport function useGeographic() {\n    setUserProjection('EPSG:4326');\n}\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @returns {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n    if (!userProjection) {\n        return coordinate;\n    }\n    return transform(coordinate, sourceProjection, userProjection);\n}\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @returns {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n    if (!userProjection) {\n        return coordinate;\n    }\n    return transform(coordinate, userProjection, destProjection);\n}\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @returns {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n    if (!userProjection) {\n        return extent;\n    }\n    return transformExtent(extent, sourceProjection, userProjection);\n}\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @returns {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n    if (!userProjection) {\n        return extent;\n    }\n    return transformExtent(extent, userProjection, destProjection);\n}\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n    // Add transformations that don't alter coordinates to convert within set of\n    // projections with equal meaning.\n    addEquivalentProjections(EPSG3857_PROJECTIONS);\n    addEquivalentProjections(EPSG4326_PROJECTIONS);\n    // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n    // coordinates and back.\n    addEquivalentTransforms(EPSG4326_PROJECTIONS, EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326);\n}\naddCommon();\n//# sourceMappingURL=proj.js.map","import React, { useEffect, useContext, useState, useRef } from \"react\";\nimport Overlay from \"ol/Overlay.js\";\nimport { Select } from \"ol/interaction\";\nimport { click, pointerMove } from \"ol/events/condition.js\";\nimport { MapContext } from \"./MapContext\";\nimport { fromLonLat } from \"ol/proj\";\n\nexport default function InfoWindow({\n  interaction = \"singleclick\",\n  autoPan = false,\n  ignoreTypes = [],\n  renderer = function() {}\n}) {\n  const context = useContext(MapContext);\n  const overlayRef = useRef(null);\n  const layer = useRef(null);\n  const [features, setFeatures] = useState([]);\n  const [selectedFeature, selectFeature] = useState(null);\n  const select = useRef(false);\n\n  function showInfoWindow(evt) {\n    if (evt.selected.length > 0) {\n      let feature = evt.selected[0];\n      // we only work on clustered nodes for now\n      if (feature.values_.hasOwnProperty(\"features\")) {\n        setFeatures(feature.values_.features);\n        selectFeature(feature.values_.features[0].values_.data);\n        layer.current.setPosition(feature.getGeometry().getCoordinates());\n      } else if (Array.isArray(feature.values_.data)) {\n        selectFeature(feature.values_.data);\n        layer.current.setPosition(\n          fromLonLat(feature.values_.data[feature.values_.data.length / 2])\n        );\n      } else {\n        selectFeature(feature.values_.data);\n        layer.current.setPosition(feature.getGeometry().getCoordinates());\n      }\n    } else {\n      layer.current.setPosition(undefined);\n      select.current.getFeatures().clear();\n    }\n  }\n\n  function getConditions() {\n    switch (interaction) {\n      case \"hover\":\n        return { condition: pointerMove };\n      case \"click\":\n        return { condition: click };\n      default:\n        return null;\n    }\n  }\n\n  // setup the interaction only once, whenever the map changes\n  useEffect(() => {\n    if (context.map) {\n      // setup the interaction\n      const config = getConditions();\n      config.filter = feature => {\n        // use our internal setting of featuretype to ignore\n        let featuretype = feature.values_.featureType;\n        if (feature.values_.hasOwnProperty(\"features\")) {\n          if (feature.values_.features.length === 1) {\n            featuretype = feature.values_.features[0].values_.featureType;\n          } else {\n            featuretype = \"cluster\";\n          }\n        }\n        const show = !ignoreTypes.includes(featuretype);\n        return show;\n      };\n      select.current = new Select(config);\n      context.map.addInteraction(select.current);\n      console.log(\"InfoWindow adding hover interaction\");\n      select.current.on(\"select\", showInfoWindow);\n      return () => {\n        select.current.un(\"select\", showInfoWindow);\n        context.map.removeInteraction(select.current);\n      };\n    }\n  }, [context.map]);\n\n  // add the rendered component\n  useEffect(() => {\n    if (context.map) {\n      console.log(\"overlayRefs.current\", overlayRef.current);\n      layer.current = new Overlay({\n        element: overlayRef.current.querySelector(\".grove-info-window\"),\n        autoPan: !!autoPan,\n        autoPanAnimation: {\n          duration: autoPan\n        }\n      });\n\n      console.log(\"InfoWindow adding overlay layer\");\n      context.map.addOverlay(layer.current);\n\n      return () => {\n        console.log(\"InfoWindow cleaning up overlay layer effect\");\n        context.map.getOverlays().remove(layer.current);\n      };\n    }\n  }, [context.map]);\n\n  return (\n    <div ref={overlayRef}>\n      <div className=\"ol-popup ol-popup-layer grove-info-window\">\n        {renderer({ feature: selectedFeature, features: features })}\n      </div>\n    </div>\n  );\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Feature\n */\nimport { assert } from './asserts.js';\nimport { listen, unlistenByKey } from './events.js';\nimport EventType from './events/EventType.js';\nimport BaseObject, { getChangeEventType } from './Object.js';\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} Geometry\n */\nvar Feature = /** @class */ (function (_super) {\n    __extends(Feature, _super);\n    /**\n     * @param {Geometry|Object<string, *>=} opt_geometryOrProperties\n     *     You may pass a Geometry object directly, or an object literal containing\n     *     properties. If you pass an object literal, you may include a Geometry\n     *     associated with a `geometry` key.\n     */\n    function Feature(opt_geometryOrProperties) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {number|string|undefined}\n         */\n        _this.id_ = undefined;\n        /**\n         * @type {string}\n         * @private\n         */\n        _this.geometryName_ = 'geometry';\n        /**\n         * User provided style.\n         * @private\n         * @type {import(\"./style/Style.js\").StyleLike}\n         */\n        _this.style_ = null;\n        /**\n         * @private\n         * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n         */\n        _this.styleFunction_ = undefined;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.geometryChangeKey_ = null;\n        _this.addEventListener(getChangeEventType(_this.geometryName_), _this.handleGeometryChanged_);\n        if (opt_geometryOrProperties) {\n            if (typeof /** @type {?} */ (opt_geometryOrProperties).getSimplifiedGeometry === 'function') {\n                var geometry = /** @type {Geometry} */ (opt_geometryOrProperties);\n                _this.setGeometry(geometry);\n            }\n            else {\n                /** @type {Object<string, *>} */\n                var properties = opt_geometryOrProperties;\n                _this.setProperties(properties);\n            }\n        }\n        return _this;\n    }\n    /**\n     * Clone this feature. If the original feature has a geometry it\n     * is also cloned. The feature id is not set in the clone.\n     * @return {Feature} The clone.\n     * @api\n     */\n    Feature.prototype.clone = function () {\n        var clone = new Feature(this.getProperties());\n        clone.setGeometryName(this.getGeometryName());\n        var geometry = this.getGeometry();\n        if (geometry) {\n            clone.setGeometry(geometry.clone());\n        }\n        var style = this.getStyle();\n        if (style) {\n            clone.setStyle(style);\n        }\n        return clone;\n    };\n    /**\n     * Get the feature's default geometry.  A feature may have any number of named\n     * geometries.  The \"default\" geometry (the one that is rendered by default) is\n     * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n     * @return {Geometry|undefined} The default geometry for the feature.\n     * @api\n     * @observable\n     */\n    Feature.prototype.getGeometry = function () {\n        return (\n        /** @type {Geometry|undefined} */ (this.get(this.geometryName_)));\n    };\n    /**\n     * Get the feature identifier.  This is a stable identifier for the feature and\n     * is either set when reading data from a remote source or set explicitly by\n     * calling {@link module:ol/Feature~Feature#setId}.\n     * @return {number|string|undefined} Id.\n     * @api\n     */\n    Feature.prototype.getId = function () {\n        return this.id_;\n    };\n    /**\n     * Get the name of the feature's default geometry.  By default, the default\n     * geometry is named `geometry`.\n     * @return {string} Get the property name associated with the default geometry\n     *     for this feature.\n     * @api\n     */\n    Feature.prototype.getGeometryName = function () {\n        return this.geometryName_;\n    };\n    /**\n     * Get the feature's style. Will return what was provided to the\n     * {@link module:ol/Feature~Feature#setStyle} method.\n     * @return {import(\"./style/Style.js\").StyleLike} The feature style.\n     * @api\n     */\n    Feature.prototype.getStyle = function () {\n        return this.style_;\n    };\n    /**\n     * Get the feature's style function.\n     * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n     * representing the current style of this feature.\n     * @api\n     */\n    Feature.prototype.getStyleFunction = function () {\n        return this.styleFunction_;\n    };\n    /**\n     * @private\n     */\n    Feature.prototype.handleGeometryChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    Feature.prototype.handleGeometryChanged_ = function () {\n        if (this.geometryChangeKey_) {\n            unlistenByKey(this.geometryChangeKey_);\n            this.geometryChangeKey_ = null;\n        }\n        var geometry = this.getGeometry();\n        if (geometry) {\n            this.geometryChangeKey_ = listen(geometry, EventType.CHANGE, this.handleGeometryChange_, this);\n        }\n        this.changed();\n    };\n    /**\n     * Set the default geometry for the feature.  This will update the property\n     * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n     * @param {Geometry|undefined} geometry The new geometry.\n     * @api\n     * @observable\n     */\n    Feature.prototype.setGeometry = function (geometry) {\n        this.set(this.geometryName_, geometry);\n    };\n    /**\n     * Set the style for the feature.  This can be a single style object, an array\n     * of styles, or a function that takes a resolution and returns an array of\n     * styles. If it is `null` the feature has no style (a `null` style).\n     * @param {import(\"./style/Style.js\").StyleLike} style Style for this feature.\n     * @api\n     * @fires module:ol/events/Event~BaseEvent#event:change\n     */\n    Feature.prototype.setStyle = function (style) {\n        this.style_ = style;\n        this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n        this.changed();\n    };\n    /**\n     * Set the feature id.  The feature id is considered stable and may be used when\n     * requesting features or comparing identifiers returned from a remote source.\n     * The feature id can be used with the\n     * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n     * @param {number|string|undefined} id The feature id.\n     * @api\n     * @fires module:ol/events/Event~BaseEvent#event:change\n     */\n    Feature.prototype.setId = function (id) {\n        this.id_ = id;\n        this.changed();\n    };\n    /**\n     * Set the property name to be used when getting the feature's default geometry.\n     * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n     * this name will be returned.\n     * @param {string} name The property name of the default geometry.\n     * @api\n     */\n    Feature.prototype.setGeometryName = function (name) {\n        this.removeEventListener(getChangeEventType(this.geometryName_), this.handleGeometryChanged_);\n        this.geometryName_ = name;\n        this.addEventListener(getChangeEventType(this.geometryName_), this.handleGeometryChanged_);\n        this.handleGeometryChanged_();\n    };\n    return Feature;\n}(BaseObject));\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n    if (typeof obj === 'function') {\n        return obj;\n    }\n    else {\n        /**\n         * @type {Array<import(\"./style/Style.js\").default>}\n         */\n        var styles_1;\n        if (Array.isArray(obj)) {\n            styles_1 = obj;\n        }\n        else {\n            assert(typeof /** @type {?} */ (obj).getZIndex === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n            var style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n            styles_1 = [style];\n        }\n        return function () {\n            return styles_1;\n        };\n    }\n}\nexport default Feature;\n//# sourceMappingURL=Feature.js.map","/**\n * @module ol/geom/flat/transform\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(flatCoordinates, offset, end, stride, transform, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var x = flatCoordinates[j];\n        var y = flatCoordinates[j + 1];\n        dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n        dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(flatCoordinates, offset, end, stride, angle, anchor, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var cos = Math.cos(angle);\n    var sin = Math.sin(angle);\n    var anchorX = anchor[0];\n    var anchorY = anchor[1];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var deltaX = flatCoordinates[j] - anchorX;\n        var deltaY = flatCoordinates[j + 1] - anchorY;\n        dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n        dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(flatCoordinates, offset, end, stride, sx, sy, anchor, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var anchorX = anchor[0];\n    var anchorY = anchor[1];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var deltaX = flatCoordinates[j] - anchorX;\n        var deltaY = flatCoordinates[j + 1] - anchorY;\n        dest[i++] = anchorX + sx * deltaX;\n        dest[i++] = anchorY + sy * deltaY;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(flatCoordinates, offset, end, stride, deltaX, deltaY, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        dest[i++] = flatCoordinates[j] + deltaX;\n        dest[i++] = flatCoordinates[j + 1] + deltaY;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n//# sourceMappingURL=transform.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Geometry\n */\nimport { abstract } from '../util.js';\nimport BaseObject from '../Object.js';\nimport { createEmpty, getHeight, returnOrUpdate } from '../extent.js';\nimport { transform2D } from './flat/transform.js';\nimport { get as getProjection, getTransform } from '../proj.js';\nimport Units from '../proj/Units.js';\nimport { create as createTransform, compose as composeTransform } from '../transform.js';\nimport { memoizeOne } from '../functions.js';\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nvar Geometry = /** @class */ (function (_super) {\n    __extends(Geometry, _super);\n    function Geometry() {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.extent_ = createEmpty();\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.extentRevision_ = -1;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.simplifiedGeometryRevision = 0;\n        /**\n         * Get a transformed and simplified version of the geometry.\n         * @abstract\n         * @param {number} revision The geometry revision.\n         * @param {number} squaredTolerance Squared tolerance.\n         * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n         * @return {Geometry} Simplified geometry.\n         */\n        _this.simplifyTransformedInternal = memoizeOne(function (revision, squaredTolerance, opt_transform) {\n            if (!opt_transform) {\n                return this.getSimplifiedGeometry(squaredTolerance);\n            }\n            var clone = this.clone();\n            clone.applyTransform(opt_transform);\n            return clone.getSimplifiedGeometry(squaredTolerance);\n        });\n        return _this;\n    }\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    Geometry.prototype.simplifyTransformed = function (squaredTolerance, opt_transform) {\n        return this.simplifyTransformedInternal(this.getRevision(), squaredTolerance, opt_transform);\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @abstract\n     * @return {!Geometry} Clone.\n     */\n    Geometry.prototype.clone = function () {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    Geometry.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        return abstract();\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @return {boolean} Contains (x, y).\n     */\n    Geometry.prototype.containsXY = function (x, y) {\n        var coord = this.getClosestPoint([x, y]);\n        return coord[0] === x && coord[1] === y;\n    };\n    /**\n     * Return the closest point of the geometry to the passed point as\n     * {@link module:ol/coordinate~Coordinate coordinate}.\n     * @param {import(\"../coordinate.js\").Coordinate} point Point.\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_closestPoint Closest point.\n     * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n     * @api\n     */\n    Geometry.prototype.getClosestPoint = function (point, opt_closestPoint) {\n        var closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n        this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n        return closestPoint;\n    };\n    /**\n     * Returns true if this geometry includes the specified coordinate. If the\n     * coordinate is on the boundary of the geometry, returns false.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains coordinate.\n     * @api\n     */\n    Geometry.prototype.intersectsCoordinate = function (coordinate) {\n        return this.containsXY(coordinate[0], coordinate[1]);\n    };\n    /**\n     * @abstract\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @protected\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     */\n    Geometry.prototype.computeExtent = function (extent) {\n        return abstract();\n    };\n    /**\n     * Get the extent of the geometry.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    Geometry.prototype.getExtent = function (opt_extent) {\n        if (this.extentRevision_ != this.getRevision()) {\n            this.extent_ = this.computeExtent(this.extent_);\n            this.extentRevision_ = this.getRevision();\n        }\n        return returnOrUpdate(this.extent_, opt_extent);\n    };\n    /**\n     * Rotate the geometry around a given coordinate. This modifies the geometry\n     * coordinates in place.\n     * @abstract\n     * @param {number} angle Rotation angle in radians.\n     * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n     * @api\n     */\n    Geometry.prototype.rotate = function (angle, anchor) {\n        abstract();\n    };\n    /**\n     * Scale the geometry (with an optional origin).  This modifies the geometry\n     * coordinates in place.\n     * @abstract\n     * @param {number} sx The scaling factor in the x-direction.\n     * @param {number=} opt_sy The scaling factor in the y-direction (defaults to\n     *     sx).\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\n     *     of the geometry extent).\n     * @api\n     */\n    Geometry.prototype.scale = function (sx, opt_sy, opt_anchor) {\n        abstract();\n    };\n    /**\n     * Create a simplified version of this geometry.  For linestrings, this uses\n     * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n     * algorithm.  For polygons, a quantization-based\n     * simplification is used to preserve topology.\n     * @param {number} tolerance The tolerance distance for simplification.\n     * @return {Geometry} A new, simplified version of the original geometry.\n     * @api\n     */\n    Geometry.prototype.simplify = function (tolerance) {\n        return this.getSimplifiedGeometry(tolerance * tolerance);\n    };\n    /**\n     * Create a simplified version of this geometry using the Douglas Peucker\n     * algorithm.\n     * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n     * @abstract\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {Geometry} Simplified geometry.\n     */\n    Geometry.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        return abstract();\n    };\n    /**\n     * Get the type of this geometry.\n     * @abstract\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     */\n    Geometry.prototype.getType = function () {\n        return abstract();\n    };\n    /**\n     * Apply a transform function to each coordinate of the geometry.\n     * The geometry is modified in place.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     * @abstract\n     * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n     */\n    Geometry.prototype.applyTransform = function (transformFn) {\n        abstract();\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @abstract\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     */\n    Geometry.prototype.intersectsExtent = function (extent) {\n        return abstract();\n    };\n    /**\n     * Translate the geometry.  This modifies the geometry coordinates in place.  If\n     * instead you want a new geometry, first `clone()` this geometry.\n     * @abstract\n     * @param {number} deltaX Delta X.\n     * @param {number} deltaY Delta Y.\n     * @api\n     */\n    Geometry.prototype.translate = function (deltaX, deltaY) {\n        abstract();\n    };\n    /**\n     * Transform each coordinate of the geometry from one coordinate reference\n     * system to another. The geometry is modified in place.\n     * For example, a line will be transformed to a line and a circle to a circle.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     *\n     * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n     *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n     * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n     *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n     * @return {Geometry} This geometry.  Note that original geometry is\n     *     modified in place.\n     * @api\n     */\n    Geometry.prototype.transform = function (source, destination) {\n        /** @type {import(\"../proj/Projection.js\").default} */\n        var sourceProj = getProjection(source);\n        var transformFn = sourceProj.getUnits() == Units.TILE_PIXELS ?\n            function (inCoordinates, outCoordinates, stride) {\n                var pixelExtent = sourceProj.getExtent();\n                var projectedExtent = sourceProj.getWorldExtent();\n                var scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n                composeTransform(tmpTransform, projectedExtent[0], projectedExtent[3], scale, -scale, 0, 0, 0);\n                transform2D(inCoordinates, 0, inCoordinates.length, stride, tmpTransform, outCoordinates);\n                return getTransform(sourceProj, destination)(inCoordinates, outCoordinates, stride);\n            } :\n            getTransform(sourceProj, destination);\n        this.applyTransform(transformFn);\n        return this;\n    };\n    return Geometry;\n}(BaseObject));\nexport default Geometry;\n//# sourceMappingURL=Geometry.js.map","/**\n * @module ol/geom/GeometryLayout\n */\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n    XY: 'XY',\n    XYZ: 'XYZ',\n    XYM: 'XYM',\n    XYZM: 'XYZM'\n};\n//# sourceMappingURL=GeometryLayout.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/SimpleGeometry\n */\nimport { abstract } from '../util.js';\nimport { createOrUpdateFromFlatCoordinates, getCenter } from '../extent.js';\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport { rotate, scale, translate, transform2D } from './flat/transform.js';\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nvar SimpleGeometry = /** @class */ (function (_super) {\n    __extends(SimpleGeometry, _super);\n    function SimpleGeometry() {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {GeometryLayout}\n         */\n        _this.layout = GeometryLayout.XY;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.stride = 2;\n        /**\n         * @protected\n         * @type {Array<number>}\n         */\n        _this.flatCoordinates = null;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    SimpleGeometry.prototype.computeExtent = function (extent) {\n        return createOrUpdateFromFlatCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, extent);\n    };\n    /**\n     * @abstract\n     * @return {Array<*>} Coordinates.\n     */\n    SimpleGeometry.prototype.getCoordinates = function () {\n        return abstract();\n    };\n    /**\n     * Return the first coordinate of the geometry.\n     * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n     * @api\n     */\n    SimpleGeometry.prototype.getFirstCoordinate = function () {\n        return this.flatCoordinates.slice(0, this.stride);\n    };\n    /**\n     * @return {Array<number>} Flat coordinates.\n     */\n    SimpleGeometry.prototype.getFlatCoordinates = function () {\n        return this.flatCoordinates;\n    };\n    /**\n     * Return the last coordinate of the geometry.\n     * @return {import(\"../coordinate.js\").Coordinate} Last point.\n     * @api\n     */\n    SimpleGeometry.prototype.getLastCoordinate = function () {\n        return this.flatCoordinates.slice(this.flatCoordinates.length - this.stride);\n    };\n    /**\n     * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n     * @return {GeometryLayout} Layout.\n     * @api\n     */\n    SimpleGeometry.prototype.getLayout = function () {\n        return this.layout;\n    };\n    /**\n     * @inheritDoc\n     */\n    SimpleGeometry.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        if (this.simplifiedGeometryRevision !== this.getRevision()) {\n            this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n            this.simplifiedGeometryRevision = this.getRevision();\n        }\n        // If squaredTolerance is negative or if we know that simplification will not\n        // have any effect then just return this.\n        if (squaredTolerance < 0 ||\n            (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n                squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)) {\n            return this;\n        }\n        var simplifiedGeometry = this.getSimplifiedGeometryInternal(squaredTolerance);\n        var simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n        if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n            return simplifiedGeometry;\n        }\n        else {\n            // Simplification did not actually remove any coordinates.  We now know\n            // that any calls to getSimplifiedGeometry with a squaredTolerance less\n            // than or equal to the current squaredTolerance will also not have any\n            // effect.  This allows us to short circuit simplification (saving CPU\n            // cycles) and prevents the cache of simplified geometries from filling\n            // up with useless identical copies of this geometry (saving memory).\n            this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n            return this;\n        }\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {SimpleGeometry} Simplified geometry.\n     * @protected\n     */\n    SimpleGeometry.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        return this;\n    };\n    /**\n     * @return {number} Stride.\n     */\n    SimpleGeometry.prototype.getStride = function () {\n        return this.stride;\n    };\n    /**\n     * @param {GeometryLayout} layout Layout.\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     */\n    SimpleGeometry.prototype.setFlatCoordinates = function (layout, flatCoordinates) {\n        this.stride = getStrideForLayout(layout);\n        this.layout = layout;\n        this.flatCoordinates = flatCoordinates;\n    };\n    /**\n     * @abstract\n     * @param {!Array<*>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     */\n    SimpleGeometry.prototype.setCoordinates = function (coordinates, opt_layout) {\n        abstract();\n    };\n    /**\n     * @param {GeometryLayout|undefined} layout Layout.\n     * @param {Array<*>} coordinates Coordinates.\n     * @param {number} nesting Nesting.\n     * @protected\n     */\n    SimpleGeometry.prototype.setLayout = function (layout, coordinates, nesting) {\n        /** @type {number} */\n        var stride;\n        if (layout) {\n            stride = getStrideForLayout(layout);\n        }\n        else {\n            for (var i = 0; i < nesting; ++i) {\n                if (coordinates.length === 0) {\n                    this.layout = GeometryLayout.XY;\n                    this.stride = 2;\n                    return;\n                }\n                else {\n                    coordinates = /** @type {Array} */ (coordinates[0]);\n                }\n            }\n            stride = coordinates.length;\n            layout = getLayoutForStride(stride);\n        }\n        this.layout = layout;\n        this.stride = stride;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    SimpleGeometry.prototype.applyTransform = function (transformFn) {\n        if (this.flatCoordinates) {\n            transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n            this.changed();\n        }\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    SimpleGeometry.prototype.rotate = function (angle, anchor) {\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            rotate(flatCoordinates, 0, flatCoordinates.length, stride, angle, anchor, flatCoordinates);\n            this.changed();\n        }\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    SimpleGeometry.prototype.scale = function (sx, opt_sy, opt_anchor) {\n        var sy = opt_sy;\n        if (sy === undefined) {\n            sy = sx;\n        }\n        var anchor = opt_anchor;\n        if (!anchor) {\n            anchor = getCenter(this.getExtent());\n        }\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            scale(flatCoordinates, 0, flatCoordinates.length, stride, sx, sy, anchor, flatCoordinates);\n            this.changed();\n        }\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    SimpleGeometry.prototype.translate = function (deltaX, deltaY) {\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            translate(flatCoordinates, 0, flatCoordinates.length, stride, deltaX, deltaY, flatCoordinates);\n            this.changed();\n        }\n    };\n    return SimpleGeometry;\n}(Geometry));\n/**\n * @param {number} stride Stride.\n * @return {GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n    var layout;\n    if (stride == 2) {\n        layout = GeometryLayout.XY;\n    }\n    else if (stride == 3) {\n        layout = GeometryLayout.XYZ;\n    }\n    else if (stride == 4) {\n        layout = GeometryLayout.XYZM;\n    }\n    return (\n    /** @type {GeometryLayout} */ (layout));\n}\n/**\n * @param {GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n    var stride;\n    if (layout == GeometryLayout.XY) {\n        stride = 2;\n    }\n    else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n        stride = 3;\n    }\n    else if (layout == GeometryLayout.XYZM) {\n        stride = 4;\n    }\n    return /** @type {number} */ (stride);\n}\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n    var flatCoordinates = simpleGeometry.getFlatCoordinates();\n    if (!flatCoordinates) {\n        return null;\n    }\n    else {\n        var stride = simpleGeometry.getStride();\n        return transform2D(flatCoordinates, 0, flatCoordinates.length, stride, transform, opt_dest);\n    }\n}\nexport default SimpleGeometry;\n//# sourceMappingURL=SimpleGeometry.js.map","/**\n * @module ol/geom/flat/deflate\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n    for (var i = 0, ii = coordinate.length; i < ii; ++i) {\n        flatCoordinates[offset++] = coordinate[i];\n    }\n    return offset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(flatCoordinates, offset, coordinates, stride) {\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        var coordinate = coordinates[i];\n        for (var j = 0; j < stride; ++j) {\n            flatCoordinates[offset++] = coordinate[j];\n        }\n    }\n    return offset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>=} opt_ends Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(flatCoordinates, offset, coordinatess, stride, opt_ends) {\n    var ends = opt_ends ? opt_ends : [];\n    var i = 0;\n    for (var j = 0, jj = coordinatess.length; j < jj; ++j) {\n        var end = deflateCoordinates(flatCoordinates, offset, coordinatess[j], stride);\n        ends[i++] = end;\n        offset = end;\n    }\n    ends.length = i;\n    return ends;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>=} opt_endss Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(flatCoordinates, offset, coordinatesss, stride, opt_endss) {\n    var endss = opt_endss ? opt_endss : [];\n    var i = 0;\n    for (var j = 0, jj = coordinatesss.length; j < jj; ++j) {\n        var ends = deflateCoordinatesArray(flatCoordinates, offset, coordinatesss[j], stride, endss[i]);\n        endss[i++] = ends;\n        offset = ends[ends.length - 1];\n    }\n    endss.length = i;\n    return endss;\n}\n//# sourceMappingURL=deflate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Point\n */\nimport { createOrUpdateFromCoordinate, containsXY } from '../extent.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { deflateCoordinate } from './flat/deflate.js';\nimport { squaredDistance as squaredDx } from '../math.js';\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nvar Point = /** @class */ (function (_super) {\n    __extends(Point, _super);\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    function Point(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        _this.setCoordinates(coordinates, opt_layout);\n        return _this;\n    }\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!Point} Clone.\n     * @override\n     * @api\n     */\n    Point.prototype.clone = function () {\n        var point = new Point(this.flatCoordinates.slice(), this.layout);\n        return point;\n    };\n    /**\n     * @inheritDoc\n     */\n    Point.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        var flatCoordinates = this.flatCoordinates;\n        var squaredDistance = squaredDx(x, y, flatCoordinates[0], flatCoordinates[1]);\n        if (squaredDistance < minSquaredDistance) {\n            var stride = this.stride;\n            for (var i = 0; i < stride; ++i) {\n                closestPoint[i] = flatCoordinates[i];\n            }\n            closestPoint.length = stride;\n            return squaredDistance;\n        }\n        else {\n            return minSquaredDistance;\n        }\n    };\n    /**\n     * Return the coordinate of the point.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n     * @override\n     * @api\n     */\n    Point.prototype.getCoordinates = function () {\n        return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n    };\n    /**\n     * @inheritDoc\n     */\n    Point.prototype.computeExtent = function (extent) {\n        return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Point.prototype.getType = function () {\n        return GeometryType.POINT;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Point.prototype.intersectsExtent = function (extent) {\n        return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Point.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 0);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinate(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return Point;\n}(SimpleGeometry));\nexport default Point;\n//# sourceMappingURL=Point.js.map","/**\n * @module ol/style/TextPlacement\n */\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n    POINT: 'point',\n    LINE: 'line'\n};\n//# sourceMappingURL=TextPlacement.js.map","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport TextPlacement from './TextPlacement.js';\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nvar DEFAULT_FILL_COLOR = '#333';\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS 'font' value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is '10px sans-serif'\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {import(\"./TextPlacement.js\").default|string} [placement='point'] Text placement.\n * @property {number} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string} [text] Text content.\n * @property {string} [textAlign] Text alignment. Possible values: 'left', 'right', 'center', 'end' or 'start'.\n * Default is 'center' for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {string} [textBaseline='middle'] Text base line. Possible values: 'bottom', 'top', 'middle', 'alphabetic',\n * 'hanging', 'ideographic'.\n * @property {import(\"./Fill.js\").default} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nvar Text = /** @class */ (function () {\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Text(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.font_ = options.font;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.rotation_ = options.rotation;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        this.rotateWithView_ = options.rotateWithView;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.scale_ = options.scale;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.text_ = options.text;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.textAlign_ = options.textAlign;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.textBaseline_ = options.textBaseline;\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        this.fill_ = options.fill !== undefined ? options.fill :\n            new Fill({ color: DEFAULT_FILL_COLOR });\n        /**\n         * @private\n         * @type {number}\n         */\n        this.maxAngle_ = options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n        /**\n         * @private\n         * @type {import(\"./TextPlacement.js\").default|string}\n         */\n        this.placement_ = options.placement !== undefined ? options.placement : TextPlacement.POINT;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.overflow_ = !!options.overflow;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        this.backgroundFill_ = options.backgroundFill ? options.backgroundFill : null;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        this.backgroundStroke_ = options.backgroundStroke ? options.backgroundStroke : null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.padding_ = options.padding === undefined ? null : options.padding;\n    }\n    /**\n     * Clones the style.\n     * @return {Text} The cloned style.\n     * @api\n     */\n    Text.prototype.clone = function () {\n        return new Text({\n            font: this.getFont(),\n            placement: this.getPlacement(),\n            maxAngle: this.getMaxAngle(),\n            overflow: this.getOverflow(),\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView(),\n            scale: this.getScale(),\n            text: this.getText(),\n            textAlign: this.getTextAlign(),\n            textBaseline: this.getTextBaseline(),\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            offsetX: this.getOffsetX(),\n            offsetY: this.getOffsetY(),\n            backgroundFill: this.getBackgroundFill() ? this.getBackgroundFill().clone() : undefined,\n            backgroundStroke: this.getBackgroundStroke() ? this.getBackgroundStroke().clone() : undefined,\n            padding: this.getPadding()\n        });\n    };\n    /**\n     * Get the `overflow` configuration.\n     * @return {boolean} Let text overflow the length of the path they follow.\n     * @api\n     */\n    Text.prototype.getOverflow = function () {\n        return this.overflow_;\n    };\n    /**\n     * Get the font name.\n     * @return {string|undefined} Font.\n     * @api\n     */\n    Text.prototype.getFont = function () {\n        return this.font_;\n    };\n    /**\n     * Get the maximum angle between adjacent characters.\n     * @return {number} Angle in radians.\n     * @api\n     */\n    Text.prototype.getMaxAngle = function () {\n        return this.maxAngle_;\n    };\n    /**\n     * Get the label placement.\n     * @return {import(\"./TextPlacement.js\").default|string} Text placement.\n     * @api\n     */\n    Text.prototype.getPlacement = function () {\n        return this.placement_;\n    };\n    /**\n     * Get the x-offset for the text.\n     * @return {number} Horizontal text offset.\n     * @api\n     */\n    Text.prototype.getOffsetX = function () {\n        return this.offsetX_;\n    };\n    /**\n     * Get the y-offset for the text.\n     * @return {number} Vertical text offset.\n     * @api\n     */\n    Text.prototype.getOffsetY = function () {\n        return this.offsetY_;\n    };\n    /**\n     * Get the fill style for the text.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    Text.prototype.getFill = function () {\n        return this.fill_;\n    };\n    /**\n     * Determine whether the text rotates with the map.\n     * @return {boolean|undefined} Rotate with map.\n     * @api\n     */\n    Text.prototype.getRotateWithView = function () {\n        return this.rotateWithView_;\n    };\n    /**\n     * Get the text rotation.\n     * @return {number|undefined} Rotation.\n     * @api\n     */\n    Text.prototype.getRotation = function () {\n        return this.rotation_;\n    };\n    /**\n     * Get the text scale.\n     * @return {number|undefined} Scale.\n     * @api\n     */\n    Text.prototype.getScale = function () {\n        return this.scale_;\n    };\n    /**\n     * Get the stroke style for the text.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    Text.prototype.getStroke = function () {\n        return this.stroke_;\n    };\n    /**\n     * Get the text to be rendered.\n     * @return {string|undefined} Text.\n     * @api\n     */\n    Text.prototype.getText = function () {\n        return this.text_;\n    };\n    /**\n     * Get the text alignment.\n     * @return {string|undefined} Text align.\n     * @api\n     */\n    Text.prototype.getTextAlign = function () {\n        return this.textAlign_;\n    };\n    /**\n     * Get the text baseline.\n     * @return {string|undefined} Text baseline.\n     * @api\n     */\n    Text.prototype.getTextBaseline = function () {\n        return this.textBaseline_;\n    };\n    /**\n     * Get the background fill style for the text.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    Text.prototype.getBackgroundFill = function () {\n        return this.backgroundFill_;\n    };\n    /**\n     * Get the background stroke style for the text.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    Text.prototype.getBackgroundStroke = function () {\n        return this.backgroundStroke_;\n    };\n    /**\n     * Get the padding for the text.\n     * @return {Array<number>} Padding.\n     * @api\n     */\n    Text.prototype.getPadding = function () {\n        return this.padding_;\n    };\n    /**\n     * Set the `overflow` property.\n     *\n     * @param {boolean} overflow Let text overflow the path that it follows.\n     * @api\n     */\n    Text.prototype.setOverflow = function (overflow) {\n        this.overflow_ = overflow;\n    };\n    /**\n     * Set the font.\n     *\n     * @param {string|undefined} font Font.\n     * @api\n     */\n    Text.prototype.setFont = function (font) {\n        this.font_ = font;\n    };\n    /**\n     * Set the maximum angle between adjacent characters.\n     *\n     * @param {number} maxAngle Angle in radians.\n     * @api\n     */\n    Text.prototype.setMaxAngle = function (maxAngle) {\n        this.maxAngle_ = maxAngle;\n    };\n    /**\n     * Set the x offset.\n     *\n     * @param {number} offsetX Horizontal text offset.\n     * @api\n     */\n    Text.prototype.setOffsetX = function (offsetX) {\n        this.offsetX_ = offsetX;\n    };\n    /**\n     * Set the y offset.\n     *\n     * @param {number} offsetY Vertical text offset.\n     * @api\n     */\n    Text.prototype.setOffsetY = function (offsetY) {\n        this.offsetY_ = offsetY;\n    };\n    /**\n     * Set the text placement.\n     *\n     * @param {import(\"./TextPlacement.js\").default|string} placement Placement.\n     * @api\n     */\n    Text.prototype.setPlacement = function (placement) {\n        this.placement_ = placement;\n    };\n    /**\n     * Set whether to rotate the text with the view.\n     *\n     * @param {boolean} rotateWithView Rotate with map.\n     * @api\n     */\n    Text.prototype.setRotateWithView = function (rotateWithView) {\n        this.rotateWithView_ = rotateWithView;\n    };\n    /**\n     * Set the fill.\n     *\n     * @param {import(\"./Fill.js\").default} fill Fill style.\n     * @api\n     */\n    Text.prototype.setFill = function (fill) {\n        this.fill_ = fill;\n    };\n    /**\n     * Set the rotation.\n     *\n     * @param {number|undefined} rotation Rotation.\n     * @api\n     */\n    Text.prototype.setRotation = function (rotation) {\n        this.rotation_ = rotation;\n    };\n    /**\n     * Set the scale.\n     *\n     * @param {number|undefined} scale Scale.\n     * @api\n     */\n    Text.prototype.setScale = function (scale) {\n        this.scale_ = scale;\n    };\n    /**\n     * Set the stroke.\n     *\n     * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n     * @api\n     */\n    Text.prototype.setStroke = function (stroke) {\n        this.stroke_ = stroke;\n    };\n    /**\n     * Set the text.\n     *\n     * @param {string|undefined} text Text.\n     * @api\n     */\n    Text.prototype.setText = function (text) {\n        this.text_ = text;\n    };\n    /**\n     * Set the text alignment.\n     *\n     * @param {string|undefined} textAlign Text align.\n     * @api\n     */\n    Text.prototype.setTextAlign = function (textAlign) {\n        this.textAlign_ = textAlign;\n    };\n    /**\n     * Set the text baseline.\n     *\n     * @param {string|undefined} textBaseline Text baseline.\n     * @api\n     */\n    Text.prototype.setTextBaseline = function (textBaseline) {\n        this.textBaseline_ = textBaseline;\n    };\n    /**\n     * Set the background fill.\n     *\n     * @param {import(\"./Fill.js\").default} fill Fill style.\n     * @api\n     */\n    Text.prototype.setBackgroundFill = function (fill) {\n        this.backgroundFill_ = fill;\n    };\n    /**\n     * Set the background stroke.\n     *\n     * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n     * @api\n     */\n    Text.prototype.setBackgroundStroke = function (stroke) {\n        this.backgroundStroke_ = stroke;\n    };\n    /**\n     * Set the padding (`[top, right, bottom, left]`).\n     *\n     * @param {!Array<number>} padding Padding.\n     * @api\n     */\n    Text.prototype.setPadding = function (padding) {\n        this.padding_ = padding;\n    };\n    return Text;\n}());\nexport default Text;\n//# sourceMappingURL=Text.js.map","/**\n * @module ol/layer/Property\n */\n/**\n * @enum {string}\n */\nexport default {\n    OPACITY: 'opacity',\n    VISIBLE: 'visible',\n    EXTENT: 'extent',\n    Z_INDEX: 'zIndex',\n    MAX_RESOLUTION: 'maxResolution',\n    MIN_RESOLUTION: 'minResolution',\n    MAX_ZOOM: 'maxZoom',\n    MIN_ZOOM: 'minZoom',\n    SOURCE: 'source'\n};\n//# sourceMappingURL=Property.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Base\n */\nimport { abstract } from '../util.js';\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport { clamp } from '../math.js';\nimport { assign } from '../obj.js';\nimport { assert } from '../asserts.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nvar BaseLayer = /** @class */ (function (_super) {\n    __extends(BaseLayer, _super);\n    /**\n     * @param {Options} options Layer options.\n     */\n    function BaseLayer(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Object<string, *>}\n         */\n        var properties = assign({}, options);\n        properties[LayerProperty.OPACITY] =\n            options.opacity !== undefined ? options.opacity : 1;\n        assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n        properties[LayerProperty.VISIBLE] =\n            options.visible !== undefined ? options.visible : true;\n        properties[LayerProperty.Z_INDEX] = options.zIndex;\n        properties[LayerProperty.MAX_RESOLUTION] =\n            options.maxResolution !== undefined ? options.maxResolution : Infinity;\n        properties[LayerProperty.MIN_RESOLUTION] =\n            options.minResolution !== undefined ? options.minResolution : 0;\n        properties[LayerProperty.MIN_ZOOM] =\n            options.minZoom !== undefined ? options.minZoom : -Infinity;\n        properties[LayerProperty.MAX_ZOOM] =\n            options.maxZoom !== undefined ? options.maxZoom : Infinity;\n        /**\n         * @type {string}\n         * @private\n         */\n        _this.className_ = properties.className !== undefined ? options.className : 'ol-layer';\n        delete properties.className;\n        _this.setProperties(properties);\n        /**\n         * @type {import(\"./Layer.js\").State}\n         * @private\n         */\n        _this.state_ = null;\n        return _this;\n    }\n    /**\n     * @return {string} CSS class name.\n     */\n    BaseLayer.prototype.getClassName = function () {\n        return this.className_;\n    };\n    /**\n     * This method is not meant to be called by layers or layer renderers because the state\n     * is incorrect if the layer is included in a layer group.\n     *\n     * @param {boolean=} opt_managed Layer is managed.\n     * @return {import(\"./Layer.js\").State} Layer state.\n     */\n    BaseLayer.prototype.getLayerState = function (opt_managed) {\n        /** @type {import(\"./Layer.js\").State} */\n        var state = this.state_ || /** @type {?} */ ({\n            layer: this,\n            managed: opt_managed === undefined ? true : opt_managed,\n            hasOverlay: false\n        });\n        state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n        state.sourceState = this.getSourceState();\n        state.visible = this.getVisible();\n        state.extent = this.getExtent();\n        state.zIndex = this.getZIndex() || (state.managed === false ? Infinity : 0);\n        state.maxResolution = this.getMaxResolution();\n        state.minResolution = Math.max(this.getMinResolution(), 0);\n        state.minZoom = this.getMinZoom();\n        state.maxZoom = this.getMaxZoom();\n        this.state_ = state;\n        return state;\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be\n     *     modified in place).\n     * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n     */\n    BaseLayer.prototype.getLayersArray = function (opt_array) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer\n     *     states (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n     */\n    BaseLayer.prototype.getLayerStatesArray = function (opt_states) {\n        return abstract();\n    };\n    /**\n     * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n     * will be visible regardless of extent.\n     * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getExtent = function () {\n        return (\n        /** @type {import(\"../extent.js\").Extent|undefined} */ (this.get(LayerProperty.EXTENT)));\n    };\n    /**\n     * Return the maximum resolution of the layer.\n     * @return {number} The maximum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMaxResolution = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n    };\n    /**\n     * Return the minimum resolution of the layer.\n     * @return {number} The minimum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMinResolution = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n    };\n    /**\n     * Return the minimum zoom level of the layer.\n     * @return {number} The minimum zoom level of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMinZoom = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n    };\n    /**\n     * Return the maximum zoom level of the layer.\n     * @return {number} The maximum zoom level of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMaxZoom = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n    };\n    /**\n     * Return the opacity of the layer (between 0 and 1).\n     * @return {number} The opacity of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getOpacity = function () {\n        return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n    };\n    /**\n     * @abstract\n     * @return {import(\"../source/State.js\").default} Source state.\n     */\n    BaseLayer.prototype.getSourceState = function () {\n        return abstract();\n    };\n    /**\n     * Return the visibility of the layer (`true` or `false`).\n     * @return {boolean} The visibility of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getVisible = function () {\n        return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n    };\n    /**\n     * Return the Z-index of the layer, which is used to order layers before\n     * rendering. The default Z-index is 0.\n     * @return {number} The Z-index of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getZIndex = function () {\n        return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n    };\n    /**\n     * Set the extent at which the layer is visible.  If `undefined`, the layer\n     * will be visible at all extents.\n     * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setExtent = function (extent) {\n        this.set(LayerProperty.EXTENT, extent);\n    };\n    /**\n     * Set the maximum resolution at which the layer is visible.\n     * @param {number} maxResolution The maximum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMaxResolution = function (maxResolution) {\n        this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n    };\n    /**\n     * Set the minimum resolution at which the layer is visible.\n     * @param {number} minResolution The minimum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMinResolution = function (minResolution) {\n        this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n    };\n    /**\n     * Set the maximum zoom (exclusive) at which the layer is visible.\n     * Note that the zoom levels for layer visibility are based on the\n     * view zoom level, which may be different from a tile source zoom level.\n     * @param {number} maxZoom The maximum zoom of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMaxZoom = function (maxZoom) {\n        this.set(LayerProperty.MAX_ZOOM, maxZoom);\n    };\n    /**\n     * Set the minimum zoom (inclusive) at which the layer is visible.\n     * Note that the zoom levels for layer visibility are based on the\n     * view zoom level, which may be different from a tile source zoom level.\n     * @param {number} minZoom The minimum zoom of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMinZoom = function (minZoom) {\n        this.set(LayerProperty.MIN_ZOOM, minZoom);\n    };\n    /**\n     * Set the opacity of the layer, allowed values range from 0 to 1.\n     * @param {number} opacity The opacity of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setOpacity = function (opacity) {\n        assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n        this.set(LayerProperty.OPACITY, opacity);\n    };\n    /**\n     * Set the visibility of the layer (`true` or `false`).\n     * @param {boolean} visible The visibility of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setVisible = function (visible) {\n        this.set(LayerProperty.VISIBLE, visible);\n    };\n    /**\n     * Set Z-index of the layer, which is used to order layers before rendering.\n     * The default Z-index is 0.\n     * @param {number} zindex The z-index of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setZIndex = function (zindex) {\n        this.set(LayerProperty.Z_INDEX, zindex);\n    };\n    return BaseLayer;\n}(BaseObject));\nexport default BaseLayer;\n//# sourceMappingURL=Base.js.map","/**\n * @module ol/render/EventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered before a layer is rendered.\n     * @event module:ol/render/Event~RenderEvent#prerender\n     * @api\n     */\n    PRERENDER: 'prerender',\n    /**\n     * Triggered after a layer is rendered.\n     * @event module:ol/render/Event~RenderEvent#postrender\n     * @api\n     */\n    POSTRENDER: 'postrender',\n    /**\n     * Triggered before layers are rendered.\n     * @event module:ol/render/Event~RenderEvent#precompose\n     * @api\n     */\n    PRECOMPOSE: 'precompose',\n    /**\n     * Triggered after all layers are rendered.\n     * @event module:ol/render/Event~RenderEvent#postcompose\n     * @api\n     */\n    POSTCOMPOSE: 'postcompose',\n    /**\n     * Triggered when rendering is complete, i.e. all sources and tiles have\n     * finished loading for the current viewport, and all tiles are faded in.\n     * @event module:ol/render/Event~RenderEvent#rendercomplete\n     * @api\n     */\n    RENDERCOMPLETE: 'rendercomplete'\n};\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/source/State\n */\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n    UNDEFINED: 'undefined',\n    LOADING: 'loading',\n    READY: 'ready',\n    ERROR: 'error'\n};\n//# sourceMappingURL=State.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Layer\n */\nimport { listen, unlistenByKey } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { getChangeEventType } from '../Object.js';\nimport BaseLayer from './Base.js';\nimport LayerProperty from './Property.js';\nimport { assign } from '../obj.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\n/**\n * @typedef {function(import(\"../PluggableMap.js\").FrameState):HTMLElement} RenderFunction\n */\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../source/Source.js\").default} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n */\n/**\n * @typedef {Object} State\n * @property {import(\"./Base.js\").default} layer\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {SourceState} sourceState\n * @property {boolean} visible\n * @property {boolean} managed\n * @property {boolean} hasOverlay Set by the renderer when an overlay for points and text is used.\n * @property {import(\"../extent.js\").Extent} [extent]\n * @property {number} zIndex\n * @property {number} maxResolution\n * @property {number} minResolution\n * @property {number} minZoom\n * @property {number} maxZoom\n */\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is be added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * Please note that for performance reasons several layers might get rendered to\n * the same HTML element, which will cause {@link module:ol/Map~Map#forEachLayerAtPixel} to\n * give false positives. To avoid this, apply different `className` properties to the\n * layers at creation time.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} SourceType\n * @api\n */\nvar Layer = /** @class */ (function (_super) {\n    __extends(Layer, _super);\n    /**\n     * @param {Options} options Layer options.\n     */\n    function Layer(options) {\n        var _this = this;\n        var baseOptions = assign({}, options);\n        delete baseOptions.source;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.mapPrecomposeKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.mapRenderKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.sourceChangeKey_ = null;\n        /**\n         * @private\n         * @type {import(\"../renderer/Layer.js\").default}\n         */\n        _this.renderer_ = null;\n        // Overwrite default render method with a custom one\n        if (options.render) {\n            _this.render = options.render;\n        }\n        if (options.map) {\n            _this.setMap(options.map);\n        }\n        _this.addEventListener(getChangeEventType(LayerProperty.SOURCE), _this.handleSourcePropertyChange_);\n        var source = options.source ? /** @type {SourceType} */ (options.source) : null;\n        _this.setSource(source);\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    Layer.prototype.getLayersArray = function (opt_array) {\n        var array = opt_array ? opt_array : [];\n        array.push(this);\n        return array;\n    };\n    /**\n     * @inheritDoc\n     */\n    Layer.prototype.getLayerStatesArray = function (opt_states) {\n        var states = opt_states ? opt_states : [];\n        states.push(this.getLayerState());\n        return states;\n    };\n    /**\n     * Get the layer source.\n     * @return {SourceType} The layer source (or `null` if not yet set).\n     * @observable\n     * @api\n     */\n    Layer.prototype.getSource = function () {\n        return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n    };\n    /**\n      * @inheritDoc\n      */\n    Layer.prototype.getSourceState = function () {\n        var source = this.getSource();\n        return !source ? SourceState.UNDEFINED : source.getState();\n    };\n    /**\n     * @private\n     */\n    Layer.prototype.handleSourceChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    Layer.prototype.handleSourcePropertyChange_ = function () {\n        if (this.sourceChangeKey_) {\n            unlistenByKey(this.sourceChangeKey_);\n            this.sourceChangeKey_ = null;\n        }\n        var source = this.getSource();\n        if (source) {\n            this.sourceChangeKey_ = listen(source, EventType.CHANGE, this.handleSourceChange_, this);\n        }\n        this.changed();\n    };\n    /**\n     * In charge to manage the rendering of the layer. One layer type is\n     * bounded with one layer renderer.\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target which the renderer may (but need not) use\n     * for rendering its content.\n     * @return {HTMLElement} The rendered element.\n     */\n    Layer.prototype.render = function (frameState, target) {\n        var layerRenderer = this.getRenderer();\n        if (layerRenderer.prepareFrame(frameState)) {\n            return layerRenderer.renderFrame(frameState, target);\n        }\n    };\n    /**\n     * Sets the layer to be rendered on top of other layers on a map. The map will\n     * not manage this layer in its layers collection, and the callback in\n     * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This\n     * is useful for temporary layers. To remove an unmanaged layer from the map,\n     * use `#setMap(null)`.\n     *\n     * To add the layer to a map and have it managed by the map, use\n     * {@link module:ol/Map#addLayer} instead.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @api\n     */\n    Layer.prototype.setMap = function (map) {\n        if (this.mapPrecomposeKey_) {\n            unlistenByKey(this.mapPrecomposeKey_);\n            this.mapPrecomposeKey_ = null;\n        }\n        if (!map) {\n            this.changed();\n        }\n        if (this.mapRenderKey_) {\n            unlistenByKey(this.mapRenderKey_);\n            this.mapRenderKey_ = null;\n        }\n        if (map) {\n            this.mapPrecomposeKey_ = listen(map, RenderEventType.PRECOMPOSE, function (evt) {\n                var renderEvent = /** @type {import(\"../render/Event.js\").default} */ (evt);\n                renderEvent.frameState.layerStatesArray.push(this.getLayerState(false));\n            }, this);\n            this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n            this.changed();\n        }\n    };\n    /**\n     * Set the layer source.\n     * @param {SourceType} source The layer source.\n     * @observable\n     * @api\n     */\n    Layer.prototype.setSource = function (source) {\n        this.set(LayerProperty.SOURCE, source);\n    };\n    /**\n     * Get the renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} The layer renderer.\n     */\n    Layer.prototype.getRenderer = function () {\n        if (!this.renderer_) {\n            this.renderer_ = this.createRenderer();\n        }\n        return this.renderer_;\n    };\n    /**\n     * @return {boolean} The layer has a renderer.\n     */\n    Layer.prototype.hasRenderer = function () {\n        return !!this.renderer_;\n    };\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    Layer.prototype.createRenderer = function () {\n        return null;\n    };\n    return Layer;\n}(BaseLayer));\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n    if (!layerState.visible) {\n        return false;\n    }\n    var resolution = viewState.resolution;\n    if (resolution < layerState.minResolution || resolution >= layerState.maxResolution) {\n        return false;\n    }\n    var zoom = viewState.zoom;\n    return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\nexport default Layer;\n//# sourceMappingURL=Layer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport { assign } from '../obj.js';\nimport { createDefaultStyle, toFunction as toStyleFunction } from '../style/Style.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {import(\"../source/Vector.js\").default} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n * @property {import(\"../style/Style.js\").StyleLike} [style] Layer style. See\n * {@link module:ol/style} for default style which will be used if this is not defined.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n */\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    RENDER_ORDER: 'renderOrder'\n};\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @extends {Layer<VectorSourceType>}\n * @api\n */\nvar BaseVectorLayer = /** @class */ (function (_super) {\n    __extends(BaseVectorLayer, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function BaseVectorLayer(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var baseOptions = assign({}, options);\n        delete baseOptions.style;\n        delete baseOptions.renderBuffer;\n        delete baseOptions.updateWhileAnimating;\n        delete baseOptions.updateWhileInteracting;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.declutter_ = options.declutter !== undefined ? options.declutter : false;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.renderBuffer_ = options.renderBuffer !== undefined ?\n            options.renderBuffer : 100;\n        /**\n         * User provided style.\n         * @type {import(\"../style/Style.js\").StyleLike}\n         * @private\n         */\n        _this.style_ = null;\n        /**\n         * Style function for use within the library.\n         * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n         * @private\n         */\n        _this.styleFunction_ = undefined;\n        _this.setStyle(options.style);\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.updateWhileAnimating_ = options.updateWhileAnimating !== undefined ?\n            options.updateWhileAnimating : false;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.updateWhileInteracting_ = options.updateWhileInteracting !== undefined ?\n            options.updateWhileInteracting : false;\n        return _this;\n    }\n    /**\n     * @return {boolean} Declutter.\n     */\n    BaseVectorLayer.prototype.getDeclutter = function () {\n        return this.declutter_;\n    };\n    /**\n     * @return {number|undefined} Render buffer.\n     */\n    BaseVectorLayer.prototype.getRenderBuffer = function () {\n        return this.renderBuffer_;\n    };\n    /**\n     * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n     *     order.\n     */\n    BaseVectorLayer.prototype.getRenderOrder = function () {\n        return (\n        /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (this.get(Property.RENDER_ORDER)));\n    };\n    /**\n     * Get the style for features.  This returns whatever was passed to the `style`\n     * option at construction or to the `setStyle` method.\n     * @return {import(\"../style/Style.js\").StyleLike}\n     *     Layer style.\n     * @api\n     */\n    BaseVectorLayer.prototype.getStyle = function () {\n        return this.style_;\n    };\n    /**\n     * Get the style function.\n     * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n     * @api\n     */\n    BaseVectorLayer.prototype.getStyleFunction = function () {\n        return this.styleFunction_;\n    };\n    /**\n     * @return {boolean} Whether the rendered layer should be updated while\n     *     animating.\n     */\n    BaseVectorLayer.prototype.getUpdateWhileAnimating = function () {\n        return this.updateWhileAnimating_;\n    };\n    /**\n     * @return {boolean} Whether the rendered layer should be updated while\n     *     interacting.\n     */\n    BaseVectorLayer.prototype.getUpdateWhileInteracting = function () {\n        return this.updateWhileInteracting_;\n    };\n    /**\n     * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n     *     Render order.\n     */\n    BaseVectorLayer.prototype.setRenderOrder = function (renderOrder) {\n        this.set(Property.RENDER_ORDER, renderOrder);\n    };\n    /**\n     * Set the style for features.  This can be a single style object, an array\n     * of styles, or a function that takes a feature and resolution and returns\n     * an array of styles. If it is `undefined` the default style is used. If\n     * it is `null` the layer has no style (a `null` style), so only features\n     * that have their own styles will be rendered in the layer. See\n     * {@link module:ol/style} for information on the default style.\n     * @param {import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction|null|undefined} style Layer style.\n     * @api\n     */\n    BaseVectorLayer.prototype.setStyle = function (style) {\n        this.style_ = style !== undefined ? style : createDefaultStyle;\n        this.styleFunction_ = style === null ?\n            undefined : toStyleFunction(this.style_);\n        this.changed();\n    };\n    return BaseVectorLayer;\n}(Layer));\nexport default BaseVectorLayer;\n//# sourceMappingURL=BaseVector.js.map","/**\n * @module ol/ViewHint\n */\n/**\n * @enum {number}\n */\nexport default {\n    ANIMATING: 0,\n    INTERACTING: 1\n};\n//# sourceMappingURL=ViewHint.js.map","/**\n * @module ol/geom/flat/inflate\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>=} opt_coordinates Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(flatCoordinates, offset, end, stride, opt_coordinates) {\n    var coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        coordinates[i++] = flatCoordinates.slice(j, j + stride);\n    }\n    coordinates.length = i;\n    return coordinates;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>=} opt_coordinatess Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(flatCoordinates, offset, ends, stride, opt_coordinatess) {\n    var coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n    var i = 0;\n    for (var j = 0, jj = ends.length; j < jj; ++j) {\n        var end = ends[j];\n        coordinatess[i++] = inflateCoordinates(flatCoordinates, offset, end, stride, coordinatess[i]);\n        offset = end;\n    }\n    coordinatess.length = i;\n    return coordinatess;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>=} opt_coordinatesss\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(flatCoordinates, offset, endss, stride, opt_coordinatesss) {\n    var coordinatesss = opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n    var i = 0;\n    for (var j = 0, jj = endss.length; j < jj; ++j) {\n        var ends = endss[j];\n        coordinatesss[i++] = inflateCoordinatesArray(flatCoordinates, offset, ends, stride, coordinatesss[i]);\n        offset = ends[ends.length - 1];\n    }\n    coordinatesss.length = i;\n    return coordinatesss;\n}\n//# sourceMappingURL=inflate.js.map","/**\n * @module ol/render/VectorContext\n */\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nvar VectorContext = /** @class */ (function () {\n    function VectorContext() {\n    }\n    /**\n     * Render a geometry with a custom renderer.\n     *\n     * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {Function} renderer Renderer.\n     */\n    VectorContext.prototype.drawCustom = function (geometry, feature, renderer) { };\n    /**\n     * Render a geometry.\n     *\n     * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n     */\n    VectorContext.prototype.drawGeometry = function (geometry) { };\n    /**\n     * Set the rendering style.\n     *\n     * @param {import(\"../style/Style.js\").default} style The rendering style.\n     */\n    VectorContext.prototype.setStyle = function (style) { };\n    /**\n     * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     */\n    VectorContext.prototype.drawCircle = function (circleGeometry, feature) { };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"../style/Style.js\").default} style Style.\n     */\n    VectorContext.prototype.drawFeature = function (feature, style) { };\n    /**\n     * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     */\n    VectorContext.prototype.drawGeometryCollection = function (geometryCollectionGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawLineString = function (lineStringGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiLineString = function (multiLineStringGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiPoint = function (multiPointGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiPolygon = function (multiPolygonGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawPoint = function (pointGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawPolygon = function (polygonGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/Geometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawText = function (geometry, feature) { };\n    /**\n     * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n     * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n     */\n    VectorContext.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) { };\n    /**\n     * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n     * @param {import(\"./canvas.js\").DeclutterGroup=} opt_declutterGroup Declutter.\n     */\n    VectorContext.prototype.setImageStyle = function (imageStyle, opt_declutterGroup) { };\n    /**\n     * @param {import(\"../style/Text.js\").default} textStyle Text style.\n     * @param {import(\"./canvas.js\").DeclutterGroups=} opt_declutterGroups Declutter.\n     */\n    VectorContext.prototype.setTextStyle = function (textStyle, opt_declutterGroups) { };\n    return VectorContext;\n}());\nexport default VectorContext;\n//# sourceMappingURL=VectorContext.js.map","/**\n * @module ol/render/canvas/Instruction\n */\n/**\n * @enum {number}\n */\nvar Instruction = {\n    BEGIN_GEOMETRY: 0,\n    BEGIN_PATH: 1,\n    CIRCLE: 2,\n    CLOSE_PATH: 3,\n    CUSTOM: 4,\n    DRAW_CHARS: 5,\n    DRAW_IMAGE: 6,\n    END_GEOMETRY: 7,\n    FILL: 8,\n    MOVE_TO_LINE_TO: 9,\n    SET_FILL_STYLE: 10,\n    SET_STROKE_STYLE: 11,\n    STROKE: 12\n};\n/**\n * @type {Array<Instruction>}\n */\nexport var fillInstruction = [Instruction.FILL];\n/**\n * @type {Array<Instruction>}\n */\nexport var strokeInstruction = [Instruction.STROKE];\n/**\n * @type {Array<Instruction>}\n */\nexport var beginPathInstruction = [Instruction.BEGIN_PATH];\n/**\n * @type {Array<Instruction>}\n */\nexport var closePathInstruction = [Instruction.CLOSE_PATH];\nexport default Instruction;\n//# sourceMappingURL=Instruction.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/Builder\n */\nimport { equals, reverseSubArray } from '../../array.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { buffer, clone, coordinateRelationship } from '../../extent.js';\nimport Relationship from '../../extent/Relationship.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport { inflateCoordinates, inflateCoordinatesArray, inflateMultiCoordinatesArray } from '../../geom/flat/inflate.js';\nimport VectorContext from '../VectorContext.js';\nimport { defaultFillStyle, defaultStrokeStyle, defaultMiterLimit, defaultLineWidth, defaultLineJoin, defaultLineDashOffset, defaultLineDash, defaultLineCap } from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, import(\"../canvas.js\").TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, import(\"../canvas.js\").FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, import(\"../canvas.js\").StrokeState>} [strokeStates] The stroke states (decluttering).\n */\nvar CanvasBuilder = /** @class */ (function (_super) {\n    __extends(CanvasBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.tolerance = tolerance;\n        /**\n         * @protected\n         * @const\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.maxExtent = maxExtent;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.pixelRatio = pixelRatio;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.maxLineWidth = 0;\n        /**\n         * @protected\n         * @const\n         * @type {number}\n         */\n        _this.resolution = resolution;\n        /**\n         * @private\n         * @type {Array<*>}\n         */\n        _this.beginGeometryInstruction1_ = null;\n        /**\n         * @private\n         * @type {Array<*>}\n         */\n        _this.beginGeometryInstruction2_ = null;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.bufferedMaxExtent_ = null;\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        _this.instructions = [];\n        /**\n         * @protected\n         * @type {Array<number>}\n         */\n        _this.coordinates = [];\n        /**\n         * @private\n         * @type {import(\"../../coordinate.js\").Coordinate}\n         */\n        _this.tmpCoordinate_ = [];\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        _this.hitDetectionInstructions = [];\n        /**\n         * @protected\n         * @type {import(\"../canvas.js\").FillStrokeState}\n         */\n        _this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n        return _this;\n    }\n    /**\n     * @protected\n     * @param {Array<number>} dashArray Dash array.\n     * @return {Array<number>} Dash array with pixel ratio applied\n     */\n    CanvasBuilder.prototype.applyPixelRatio = function (dashArray) {\n        var pixelRatio = this.pixelRatio;\n        return pixelRatio == 1 ? dashArray : dashArray.map(function (dash) {\n            return dash * pixelRatio;\n        });\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @param {boolean} closed Last input coordinate equals first.\n     * @param {boolean} skipFirst Skip first coordinate.\n     * @protected\n     * @return {number} My end.\n     */\n    CanvasBuilder.prototype.appendFlatCoordinates = function (flatCoordinates, offset, end, stride, closed, skipFirst) {\n        var myEnd = this.coordinates.length;\n        var extent = this.getBufferedMaxExtent();\n        if (skipFirst) {\n            offset += stride;\n        }\n        var lastXCoord = flatCoordinates[offset];\n        var lastYCoord = flatCoordinates[offset + 1];\n        var nextCoord = this.tmpCoordinate_;\n        var skipped = true;\n        var i, lastRel, nextRel;\n        for (i = offset + stride; i < end; i += stride) {\n            nextCoord[0] = flatCoordinates[i];\n            nextCoord[1] = flatCoordinates[i + 1];\n            nextRel = coordinateRelationship(extent, nextCoord);\n            if (nextRel !== lastRel) {\n                if (skipped) {\n                    this.coordinates[myEnd++] = lastXCoord;\n                    this.coordinates[myEnd++] = lastYCoord;\n                }\n                this.coordinates[myEnd++] = nextCoord[0];\n                this.coordinates[myEnd++] = nextCoord[1];\n                skipped = false;\n            }\n            else if (nextRel === Relationship.INTERSECTING) {\n                this.coordinates[myEnd++] = nextCoord[0];\n                this.coordinates[myEnd++] = nextCoord[1];\n                skipped = false;\n            }\n            else {\n                skipped = true;\n            }\n            lastXCoord = nextCoord[0];\n            lastYCoord = nextCoord[1];\n            lastRel = nextRel;\n        }\n        // Last coordinate equals first or only one point to append:\n        if ((closed && skipped) || i === offset + stride) {\n            this.coordinates[myEnd++] = lastXCoord;\n            this.coordinates[myEnd++] = lastYCoord;\n        }\n        return myEnd;\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {Array<number>} ends Ends.\n     * @param {number} stride Stride.\n     * @param {Array<number>} builderEnds Builder ends.\n     * @return {number} Offset.\n     */\n    CanvasBuilder.prototype.drawCustomCoordinates_ = function (flatCoordinates, offset, ends, stride, builderEnds) {\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var builderEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n            builderEnds.push(builderEnd);\n            offset = end;\n        }\n        return offset;\n    };\n    /**\n     * @inheritDoc.\n     */\n    CanvasBuilder.prototype.drawCustom = function (geometry, feature, renderer) {\n        this.beginGeometry(geometry, feature);\n        var type = geometry.getType();\n        var stride = geometry.getStride();\n        var builderBegin = this.coordinates.length;\n        var flatCoordinates, builderEnd, builderEnds, builderEndss;\n        var offset;\n        if (type == GeometryType.MULTI_POLYGON) {\n            geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry);\n            flatCoordinates = geometry.getOrientedFlatCoordinates();\n            builderEndss = [];\n            var endss = geometry.getEndss();\n            offset = 0;\n            for (var i = 0, ii = endss.length; i < ii; ++i) {\n                var myEnds = [];\n                offset = this.drawCustomCoordinates_(flatCoordinates, offset, endss[i], stride, myEnds);\n                builderEndss.push(myEnds);\n            }\n            this.instructions.push([CanvasInstruction.CUSTOM,\n                builderBegin, builderEndss, geometry, renderer, inflateMultiCoordinatesArray]);\n        }\n        else if (type == GeometryType.POLYGON || type == GeometryType.MULTI_LINE_STRING) {\n            builderEnds = [];\n            flatCoordinates = (type == GeometryType.POLYGON) ?\n                /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getOrientedFlatCoordinates() :\n                geometry.getFlatCoordinates();\n            offset = this.drawCustomCoordinates_(flatCoordinates, 0, \n            /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds(), stride, builderEnds);\n            this.instructions.push([CanvasInstruction.CUSTOM,\n                builderBegin, builderEnds, geometry, renderer, inflateCoordinatesArray]);\n        }\n        else if (type == GeometryType.LINE_STRING || type == GeometryType.MULTI_POINT) {\n            flatCoordinates = geometry.getFlatCoordinates();\n            builderEnd = this.appendFlatCoordinates(flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n            this.instructions.push([CanvasInstruction.CUSTOM,\n                builderBegin, builderEnd, geometry, renderer, inflateCoordinates]);\n        }\n        else if (type == GeometryType.POINT) {\n            flatCoordinates = geometry.getFlatCoordinates();\n            this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n            builderEnd = this.coordinates.length;\n            this.instructions.push([CanvasInstruction.CUSTOM,\n                builderBegin, builderEnd, geometry, renderer]);\n        }\n        this.endGeometry(feature);\n    };\n    /**\n     * @protected\n     * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasBuilder.prototype.beginGeometry = function (geometry, feature) {\n        var extent = geometry.getExtent();\n        this.beginGeometryInstruction1_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0, extent];\n        this.instructions.push(this.beginGeometryInstruction1_);\n        this.beginGeometryInstruction2_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0, extent];\n        this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n    };\n    /**\n     * @return {SerializableInstructions} the serializable instructions.\n     */\n    CanvasBuilder.prototype.finish = function () {\n        return {\n            instructions: this.instructions,\n            hitDetectionInstructions: this.hitDetectionInstructions,\n            coordinates: this.coordinates\n        };\n    };\n    /**\n     * Reverse the hit detection instructions.\n     */\n    CanvasBuilder.prototype.reverseHitDetectionInstructions = function () {\n        var hitDetectionInstructions = this.hitDetectionInstructions;\n        // step 1 - reverse array\n        hitDetectionInstructions.reverse();\n        // step 2 - reverse instructions within geometry blocks\n        var i;\n        var n = hitDetectionInstructions.length;\n        var instruction;\n        var type;\n        var begin = -1;\n        for (i = 0; i < n; ++i) {\n            instruction = hitDetectionInstructions[i];\n            type = /** @type {CanvasInstruction} */ (instruction[0]);\n            if (type == CanvasInstruction.END_GEOMETRY) {\n                begin = i;\n            }\n            else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n                instruction[2] = i;\n                reverseSubArray(this.hitDetectionInstructions, begin, i);\n                begin = -1;\n            }\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasBuilder.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) {\n        var state = this.state;\n        if (fillStyle) {\n            var fillStyleColor = fillStyle.getColor();\n            state.fillStyle = asColorLike(fillStyleColor ?\n                fillStyleColor : defaultFillStyle);\n        }\n        else {\n            state.fillStyle = undefined;\n        }\n        if (strokeStyle) {\n            var strokeStyleColor = strokeStyle.getColor();\n            state.strokeStyle = asColorLike(strokeStyleColor ?\n                strokeStyleColor : defaultStrokeStyle);\n            var strokeStyleLineCap = strokeStyle.getLineCap();\n            state.lineCap = strokeStyleLineCap !== undefined ?\n                strokeStyleLineCap : defaultLineCap;\n            var strokeStyleLineDash = strokeStyle.getLineDash();\n            state.lineDash = strokeStyleLineDash ?\n                strokeStyleLineDash.slice() : defaultLineDash;\n            var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n            state.lineDashOffset = strokeStyleLineDashOffset ?\n                strokeStyleLineDashOffset : defaultLineDashOffset;\n            var strokeStyleLineJoin = strokeStyle.getLineJoin();\n            state.lineJoin = strokeStyleLineJoin !== undefined ?\n                strokeStyleLineJoin : defaultLineJoin;\n            var strokeStyleWidth = strokeStyle.getWidth();\n            state.lineWidth = strokeStyleWidth !== undefined ?\n                strokeStyleWidth : defaultLineWidth;\n            var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n            state.miterLimit = strokeStyleMiterLimit !== undefined ?\n                strokeStyleMiterLimit : defaultMiterLimit;\n            if (state.lineWidth > this.maxLineWidth) {\n                this.maxLineWidth = state.lineWidth;\n                // invalidate the buffered max extent cache\n                this.bufferedMaxExtent_ = null;\n            }\n        }\n        else {\n            state.strokeStyle = undefined;\n            state.lineCap = undefined;\n            state.lineDash = null;\n            state.lineDashOffset = undefined;\n            state.lineJoin = undefined;\n            state.lineWidth = undefined;\n            state.miterLimit = undefined;\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @return {Array<*>} Fill instruction.\n     */\n    CanvasBuilder.prototype.createFill = function (state) {\n        var fillStyle = state.fillStyle;\n        /** @type {Array<*>} */\n        var fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n        if (typeof fillStyle !== 'string') {\n            // Fill is a pattern or gradient - align it!\n            fillInstruction.push(true);\n        }\n        return fillInstruction;\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     */\n    CanvasBuilder.prototype.applyStroke = function (state) {\n        this.instructions.push(this.createStroke(state));\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @return {Array<*>} Stroke instruction.\n     */\n    CanvasBuilder.prototype.createStroke = function (state) {\n        return [\n            CanvasInstruction.SET_STROKE_STYLE,\n            state.strokeStyle, state.lineWidth * this.pixelRatio, state.lineCap,\n            state.lineJoin, state.miterLimit,\n            this.applyPixelRatio(state.lineDash), state.lineDashOffset * this.pixelRatio\n        ];\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n     */\n    CanvasBuilder.prototype.updateFillStyle = function (state, createFill) {\n        var fillStyle = state.fillStyle;\n        if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n            if (fillStyle !== undefined) {\n                this.instructions.push(createFill.call(this, state));\n            }\n            state.currentFillStyle = fillStyle;\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n     */\n    CanvasBuilder.prototype.updateStrokeStyle = function (state, applyStroke) {\n        var strokeStyle = state.strokeStyle;\n        var lineCap = state.lineCap;\n        var lineDash = state.lineDash;\n        var lineDashOffset = state.lineDashOffset;\n        var lineJoin = state.lineJoin;\n        var lineWidth = state.lineWidth;\n        var miterLimit = state.miterLimit;\n        if (state.currentStrokeStyle != strokeStyle ||\n            state.currentLineCap != lineCap ||\n            (lineDash != state.currentLineDash && !equals(state.currentLineDash, lineDash)) ||\n            state.currentLineDashOffset != lineDashOffset ||\n            state.currentLineJoin != lineJoin ||\n            state.currentLineWidth != lineWidth ||\n            state.currentMiterLimit != miterLimit) {\n            if (strokeStyle !== undefined) {\n                applyStroke.call(this, state);\n            }\n            state.currentStrokeStyle = strokeStyle;\n            state.currentLineCap = lineCap;\n            state.currentLineDash = lineDash;\n            state.currentLineDashOffset = lineDashOffset;\n            state.currentLineJoin = lineJoin;\n            state.currentLineWidth = lineWidth;\n            state.currentMiterLimit = miterLimit;\n        }\n    };\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasBuilder.prototype.endGeometry = function (feature) {\n        this.beginGeometryInstruction1_[2] = this.instructions.length;\n        this.beginGeometryInstruction1_ = null;\n        this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n        this.beginGeometryInstruction2_ = null;\n        var endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n        this.instructions.push(endGeometryInstruction);\n        this.hitDetectionInstructions.push(endGeometryInstruction);\n    };\n    /**\n     * Get the buffered rendering extent.  Rendering will be clipped to the extent\n     * provided to the constructor.  To account for symbolizers that may intersect\n     * this extent, we calculate a buffered extent (e.g. based on stroke width).\n     * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n     * @protected\n     */\n    CanvasBuilder.prototype.getBufferedMaxExtent = function () {\n        if (!this.bufferedMaxExtent_) {\n            this.bufferedMaxExtent_ = clone(this.maxExtent);\n            if (this.maxLineWidth > 0) {\n                var width = this.resolution * (this.maxLineWidth + 1) / 2;\n                buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n            }\n        }\n        return this.bufferedMaxExtent_;\n    };\n    return CanvasBuilder;\n}(VectorContext));\nexport default CanvasBuilder;\n//# sourceMappingURL=Builder.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasInstruction from './Instruction.js';\nimport CanvasBuilder from './Builder.js';\nvar CanvasImageBuilder = /** @class */ (function (_super) {\n    __extends(CanvasImageBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasImageBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        var _this = _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n        /**\n         * @private\n         * @type {import(\"../canvas.js\").DeclutterGroups}\n         */\n        _this.declutterGroups_ = null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n         */\n        _this.hitDetectionImage_ = null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n         */\n        _this.image_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.anchorX_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.anchorY_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.height_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.opacity_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.originX_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.originY_ = undefined;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        _this.rotateWithView_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.rotation_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.scale_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.width_ = undefined;\n        return _this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} My end.\n     */\n    CanvasImageBuilder.prototype.drawCoordinates_ = function (flatCoordinates, offset, end, stride) {\n        return this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasImageBuilder.prototype.drawPoint = function (pointGeometry, feature) {\n        if (!this.image_) {\n            return;\n        }\n        this.beginGeometry(pointGeometry, feature);\n        var flatCoordinates = pointGeometry.getFlatCoordinates();\n        var stride = pointGeometry.getStride();\n        var myBegin = this.coordinates.length;\n        var myEnd = this.drawCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n        this.instructions.push([\n            CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_, this.anchorY_, this.declutterGroups_, this.height_, this.opacity_,\n            this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n            this.scale_ * this.pixelRatio, this.width_\n        ]);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_, this.anchorY_, this.declutterGroups_, this.height_, this.opacity_,\n            this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n            this.scale_, this.width_\n        ]);\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasImageBuilder.prototype.drawMultiPoint = function (multiPointGeometry, feature) {\n        if (!this.image_) {\n            return;\n        }\n        this.beginGeometry(multiPointGeometry, feature);\n        var flatCoordinates = multiPointGeometry.getFlatCoordinates();\n        var stride = multiPointGeometry.getStride();\n        var myBegin = this.coordinates.length;\n        var myEnd = this.drawCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n        this.instructions.push([\n            CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_, this.anchorY_, this.declutterGroups_, this.height_, this.opacity_,\n            this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n            this.scale_ * this.pixelRatio, this.width_\n        ]);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_, this.anchorY_, this.declutterGroups_, this.height_, this.opacity_,\n            this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n            this.scale_, this.width_\n        ]);\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasImageBuilder.prototype.finish = function () {\n        this.reverseHitDetectionInstructions();\n        // FIXME this doesn't really protect us against further calls to draw*Geometry\n        this.anchorX_ = undefined;\n        this.anchorY_ = undefined;\n        this.hitDetectionImage_ = null;\n        this.image_ = null;\n        this.height_ = undefined;\n        this.scale_ = undefined;\n        this.opacity_ = undefined;\n        this.originX_ = undefined;\n        this.originY_ = undefined;\n        this.rotateWithView_ = undefined;\n        this.rotation_ = undefined;\n        this.width_ = undefined;\n        return _super.prototype.finish.call(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasImageBuilder.prototype.setImageStyle = function (imageStyle, declutterGroups) {\n        var anchor = imageStyle.getAnchor();\n        var size = imageStyle.getSize();\n        var hitDetectionImage = imageStyle.getHitDetectionImage(1);\n        var image = imageStyle.getImage(1);\n        var origin = imageStyle.getOrigin();\n        this.anchorX_ = anchor[0];\n        this.anchorY_ = anchor[1];\n        this.declutterGroups_ = /** @type {import(\"../canvas.js\").DeclutterGroups} */ (declutterGroups);\n        this.hitDetectionImage_ = hitDetectionImage;\n        this.image_ = image;\n        this.height_ = size[1];\n        this.opacity_ = imageStyle.getOpacity();\n        this.originX_ = origin[0];\n        this.originY_ = origin[1];\n        this.rotateWithView_ = imageStyle.getRotateWithView();\n        this.rotation_ = imageStyle.getRotation();\n        this.scale_ = imageStyle.getScale();\n        this.width_ = size[0];\n    };\n    return CanvasImageBuilder;\n}(CanvasBuilder));\nexport default CanvasImageBuilder;\n//# sourceMappingURL=ImageBuilder.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasInstruction, { strokeInstruction, beginPathInstruction } from './Instruction.js';\nimport CanvasBuilder from './Builder.js';\nvar CanvasLineStringBuilder = /** @class */ (function (_super) {\n    __extends(CanvasLineStringBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasLineStringBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        return _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} end.\n     */\n    CanvasLineStringBuilder.prototype.drawFlatCoordinates_ = function (flatCoordinates, offset, end, stride) {\n        var myBegin = this.coordinates.length;\n        var myEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n        var moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n        this.instructions.push(moveToLineToInstruction);\n        this.hitDetectionInstructions.push(moveToLineToInstruction);\n        return end;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasLineStringBuilder.prototype.drawLineString = function (lineStringGeometry, feature) {\n        var state = this.state;\n        var strokeStyle = state.strokeStyle;\n        var lineWidth = state.lineWidth;\n        if (strokeStyle === undefined || lineWidth === undefined) {\n            return;\n        }\n        this.updateStrokeStyle(state, this.applyStroke);\n        this.beginGeometry(lineStringGeometry, feature);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.SET_STROKE_STYLE,\n            state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n            state.miterLimit, state.lineDash, state.lineDashOffset\n        ], beginPathInstruction);\n        var flatCoordinates = lineStringGeometry.getFlatCoordinates();\n        var stride = lineStringGeometry.getStride();\n        this.drawFlatCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n        this.hitDetectionInstructions.push(strokeInstruction);\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasLineStringBuilder.prototype.drawMultiLineString = function (multiLineStringGeometry, feature) {\n        var state = this.state;\n        var strokeStyle = state.strokeStyle;\n        var lineWidth = state.lineWidth;\n        if (strokeStyle === undefined || lineWidth === undefined) {\n            return;\n        }\n        this.updateStrokeStyle(state, this.applyStroke);\n        this.beginGeometry(multiLineStringGeometry, feature);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.SET_STROKE_STYLE,\n            state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n            state.miterLimit, state.lineDash, state.lineDashOffset\n        ], beginPathInstruction);\n        var ends = multiLineStringGeometry.getEnds();\n        var flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n        var stride = multiLineStringGeometry.getStride();\n        var offset = 0;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            offset = this.drawFlatCoordinates_(flatCoordinates, offset, ends[i], stride);\n        }\n        this.hitDetectionInstructions.push(strokeInstruction);\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasLineStringBuilder.prototype.finish = function () {\n        var state = this.state;\n        if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n            this.instructions.push(strokeInstruction);\n        }\n        this.reverseHitDetectionInstructions();\n        this.state = null;\n        return _super.prototype.finish.call(this);\n    };\n    /**\n     * @inheritDoc.\n     */\n    CanvasLineStringBuilder.prototype.applyStroke = function (state) {\n        if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n            this.instructions.push(strokeInstruction);\n            state.lastStroke = this.coordinates.length;\n        }\n        state.lastStroke = 0;\n        _super.prototype.applyStroke.call(this, state);\n        this.instructions.push(beginPathInstruction);\n    };\n    return CanvasLineStringBuilder;\n}(CanvasBuilder));\nexport default CanvasLineStringBuilder;\n//# sourceMappingURL=LineStringBuilder.js.map","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\nimport { squaredSegmentDistance, squaredDistance } from '../../math.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>=} opt_simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(flatCoordinates, offset, end, stride, squaredTolerance, highQuality, opt_simplifiedFlatCoordinates) {\n    var simplifiedFlatCoordinates = opt_simplifiedFlatCoordinates !== undefined ?\n        opt_simplifiedFlatCoordinates : [];\n    if (!highQuality) {\n        end = radialDistance(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n        flatCoordinates = simplifiedFlatCoordinates;\n        offset = 0;\n        stride = 2;\n    }\n    simplifiedFlatCoordinates.length = douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n    return simplifiedFlatCoordinates;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    var n = (end - offset) / stride;\n    if (n < 3) {\n        for (; offset < end; offset += stride) {\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + 1];\n        }\n        return simplifiedOffset;\n    }\n    /** @type {Array<number>} */\n    var markers = new Array(n);\n    markers[0] = 1;\n    markers[n - 1] = 1;\n    /** @type {Array<number>} */\n    var stack = [offset, end - stride];\n    var index = 0;\n    while (stack.length > 0) {\n        var last = stack.pop();\n        var first = stack.pop();\n        var maxSquaredDistance = 0;\n        var x1 = flatCoordinates[first];\n        var y1 = flatCoordinates[first + 1];\n        var x2 = flatCoordinates[last];\n        var y2 = flatCoordinates[last + 1];\n        for (var i = first + stride; i < last; i += stride) {\n            var x = flatCoordinates[i];\n            var y = flatCoordinates[i + 1];\n            var squaredDistance_1 = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n            if (squaredDistance_1 > maxSquaredDistance) {\n                index = i;\n                maxSquaredDistance = squaredDistance_1;\n            }\n        }\n        if (maxSquaredDistance > squaredTolerance) {\n            markers[(index - offset) / stride] = 1;\n            if (first + stride < index) {\n                stack.push(first, index);\n            }\n            if (index + stride < last) {\n                stack.push(index, last);\n            }\n        }\n    }\n    for (var i = 0; i < n; ++i) {\n        if (markers[i]) {\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + i * stride];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + i * stride + 1];\n        }\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(flatCoordinates, offset, ends, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        simplifiedOffset = douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset);\n        simplifiedEnds.push(simplifiedOffset);\n        offset = end;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(flatCoordinates, offset, endss, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        var simplifiedEnds = [];\n        simplifiedOffset = douglasPeuckerArray(flatCoordinates, offset, ends, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n        simplifiedEndss.push(simplifiedEnds);\n        offset = ends[ends.length - 1];\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    if (end <= offset + stride) {\n        // zero or one point, no simplification possible, so copy and return\n        for (; offset < end; offset += stride) {\n            simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + 1];\n        }\n        return simplifiedOffset;\n    }\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    // copy first point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n    var x2 = x1;\n    var y2 = y1;\n    for (offset += stride; offset < end; offset += stride) {\n        x2 = flatCoordinates[offset];\n        y2 = flatCoordinates[offset + 1];\n        if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n            // copy point at offset\n            simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n            simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n            x1 = x2;\n            y1 = y2;\n        }\n    }\n    if (x2 != x1 || y2 != y1) {\n        // copy last point\n        simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n        simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n    return tolerance * Math.round(value / tolerance);\n}\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(flatCoordinates, offset, end, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    // do nothing if the line is empty\n    if (offset == end) {\n        return simplifiedOffset;\n    }\n    // snap the first coordinate (P1)\n    var x1 = snap(flatCoordinates[offset], tolerance);\n    var y1 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // add the first coordinate to the output\n    simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n    // find the next coordinate that does not snap to the same value as the first\n    // coordinate (P2)\n    var x2, y2;\n    do {\n        x2 = snap(flatCoordinates[offset], tolerance);\n        y2 = snap(flatCoordinates[offset + 1], tolerance);\n        offset += stride;\n        if (offset == end) {\n            // all coordinates snap to the same value, the line collapses to a point\n            // push the last snapped value anyway to ensure that the output contains\n            // at least two points\n            // FIXME should we really return at least two points anyway?\n            simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n            simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n            return simplifiedOffset;\n        }\n    } while (x2 == x1 && y2 == y1);\n    while (offset < end) {\n        // snap the next coordinate (P3)\n        var x3 = snap(flatCoordinates[offset], tolerance);\n        var y3 = snap(flatCoordinates[offset + 1], tolerance);\n        offset += stride;\n        // skip P3 if it is equal to P2\n        if (x3 == x2 && y3 == y2) {\n            continue;\n        }\n        // calculate the delta between P1 and P2\n        var dx1 = x2 - x1;\n        var dy1 = y2 - y1;\n        // calculate the delta between P3 and P1\n        var dx2 = x3 - x1;\n        var dy2 = y3 - y1;\n        // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n        // P1 in the same direction then P2 is on the straight line between P1 and\n        // P3\n        if ((dx1 * dy2 == dy1 * dx2) &&\n            ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n            ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))) {\n            // discard P2 and set P2 = P3\n            x2 = x3;\n            y2 = y3;\n            continue;\n        }\n        // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n        // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n        // and continue with P1 = P2 and P2 = P3\n        simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n        simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n        x1 = x2;\n        y1 = y2;\n        x2 = x3;\n        y2 = y3;\n    }\n    // add the last point (P2)\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(flatCoordinates, offset, ends, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        simplifiedOffset = quantize(flatCoordinates, offset, end, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset);\n        simplifiedEnds.push(simplifiedOffset);\n        offset = end;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(flatCoordinates, offset, endss, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        var simplifiedEnds = [];\n        simplifiedOffset = quantizeArray(flatCoordinates, offset, ends, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n        simplifiedEndss.push(simplifiedEnds);\n        offset = ends[ends.length - 1];\n    }\n    return simplifiedOffset;\n}\n//# sourceMappingURL=simplify.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport { snap } from '../../geom/flat/simplify.js';\nimport { defaultFillStyle } from '../canvas.js';\nimport CanvasInstruction, { fillInstruction, strokeInstruction, beginPathInstruction, closePathInstruction } from './Instruction.js';\nimport CanvasBuilder from './Builder.js';\nvar CanvasPolygonBuilder = /** @class */ (function (_super) {\n    __extends(CanvasPolygonBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasPolygonBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        return _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {Array<number>} ends Ends.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} End.\n     */\n    CanvasPolygonBuilder.prototype.drawFlatCoordinatess_ = function (flatCoordinates, offset, ends, stride) {\n        var state = this.state;\n        var fill = state.fillStyle !== undefined;\n        var stroke = state.strokeStyle !== undefined;\n        var numEnds = ends.length;\n        this.instructions.push(beginPathInstruction);\n        this.hitDetectionInstructions.push(beginPathInstruction);\n        for (var i = 0; i < numEnds; ++i) {\n            var end = ends[i];\n            var myBegin = this.coordinates.length;\n            var myEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, true, !stroke);\n            var moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n            this.instructions.push(moveToLineToInstruction);\n            this.hitDetectionInstructions.push(moveToLineToInstruction);\n            if (stroke) {\n                // Performance optimization: only call closePath() when we have a stroke.\n                // Otherwise the ring is closed already (see appendFlatCoordinates above).\n                this.instructions.push(closePathInstruction);\n                this.hitDetectionInstructions.push(closePathInstruction);\n            }\n            offset = end;\n        }\n        if (fill) {\n            this.instructions.push(fillInstruction);\n            this.hitDetectionInstructions.push(fillInstruction);\n        }\n        if (stroke) {\n            this.instructions.push(strokeInstruction);\n            this.hitDetectionInstructions.push(strokeInstruction);\n        }\n        return offset;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasPolygonBuilder.prototype.drawCircle = function (circleGeometry, feature) {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        var strokeStyle = state.strokeStyle;\n        if (fillStyle === undefined && strokeStyle === undefined) {\n            return;\n        }\n        this.setFillStrokeStyles_();\n        this.beginGeometry(circleGeometry, feature);\n        if (state.fillStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_FILL_STYLE,\n                defaultFillStyle\n            ]);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_STROKE_STYLE,\n                state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n                state.miterLimit, state.lineDash, state.lineDashOffset\n            ]);\n        }\n        var flatCoordinates = circleGeometry.getFlatCoordinates();\n        var stride = circleGeometry.getStride();\n        var myBegin = this.coordinates.length;\n        this.appendFlatCoordinates(flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n        var circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n        this.instructions.push(beginPathInstruction, circleInstruction);\n        this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n        if (state.fillStyle !== undefined) {\n            this.instructions.push(fillInstruction);\n            this.hitDetectionInstructions.push(fillInstruction);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.instructions.push(strokeInstruction);\n            this.hitDetectionInstructions.push(strokeInstruction);\n        }\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasPolygonBuilder.prototype.drawPolygon = function (polygonGeometry, feature) {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        var strokeStyle = state.strokeStyle;\n        if (fillStyle === undefined && strokeStyle === undefined) {\n            return;\n        }\n        this.setFillStrokeStyles_();\n        this.beginGeometry(polygonGeometry, feature);\n        if (state.fillStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_FILL_STYLE,\n                defaultFillStyle\n            ]);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_STROKE_STYLE,\n                state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n                state.miterLimit, state.lineDash, state.lineDashOffset\n            ]);\n        }\n        var ends = polygonGeometry.getEnds();\n        var flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n        var stride = polygonGeometry.getStride();\n        this.drawFlatCoordinatess_(flatCoordinates, 0, ends, stride);\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasPolygonBuilder.prototype.drawMultiPolygon = function (multiPolygonGeometry, feature) {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        var strokeStyle = state.strokeStyle;\n        if (fillStyle === undefined && strokeStyle === undefined) {\n            return;\n        }\n        this.setFillStrokeStyles_();\n        this.beginGeometry(multiPolygonGeometry, feature);\n        if (state.fillStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_FILL_STYLE,\n                defaultFillStyle\n            ]);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_STROKE_STYLE,\n                state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n                state.miterLimit, state.lineDash, state.lineDashOffset\n            ]);\n        }\n        var endss = multiPolygonGeometry.getEndss();\n        var flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n        var stride = multiPolygonGeometry.getStride();\n        var offset = 0;\n        for (var i = 0, ii = endss.length; i < ii; ++i) {\n            offset = this.drawFlatCoordinatess_(flatCoordinates, offset, endss[i], stride);\n        }\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasPolygonBuilder.prototype.finish = function () {\n        this.reverseHitDetectionInstructions();\n        this.state = null;\n        // We want to preserve topology when drawing polygons.  Polygons are\n        // simplified using quantization and point elimination. However, we might\n        // have received a mix of quantized and non-quantized geometries, so ensure\n        // that all are quantized by quantizing all coordinates in the batch.\n        var tolerance = this.tolerance;\n        if (tolerance !== 0) {\n            var coordinates = this.coordinates;\n            for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n                coordinates[i] = snap(coordinates[i], tolerance);\n            }\n        }\n        return _super.prototype.finish.call(this);\n    };\n    /**\n     * @private\n     */\n    CanvasPolygonBuilder.prototype.setFillStrokeStyles_ = function () {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        if (fillStyle !== undefined) {\n            this.updateFillStyle(state, this.createFill);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.updateStrokeStyle(state, this.applyStroke);\n        }\n    };\n    return CanvasPolygonBuilder;\n}(CanvasBuilder));\nexport default CanvasPolygonBuilder;\n//# sourceMappingURL=PolygonBuilder.js.map","/**\n * @module ol/geom/flat/straightchunk\n */\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n    var chunkStart = offset;\n    var chunkEnd = offset;\n    var chunkM = 0;\n    var m = 0;\n    var start = offset;\n    var acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n    for (i = offset; i < end; i += stride) {\n        var x2 = flatCoordinates[i];\n        var y2 = flatCoordinates[i + 1];\n        if (x1 !== undefined) {\n            x23 = x2 - x1;\n            y23 = y2 - y1;\n            m23 = Math.sqrt(x23 * x23 + y23 * y23);\n            if (x12 !== undefined) {\n                m += m12;\n                acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n                if (acos > maxAngle) {\n                    if (m > chunkM) {\n                        chunkM = m;\n                        chunkStart = start;\n                        chunkEnd = i;\n                    }\n                    m = 0;\n                    start = i - stride;\n                }\n            }\n            m12 = m23;\n            x12 = x23;\n            y12 = y23;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    m += m23;\n    return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n//# sourceMappingURL=straightchunk.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/TextBuilder\n */\nimport { getUid } from '../../util.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { intersects } from '../../extent.js';\nimport { matchingChunk } from '../../geom/flat/straightchunk.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport { labelCache, defaultTextAlign, defaultPadding, defaultLineCap, defaultLineDashOffset, defaultLineDash, defaultLineJoin, defaultFillStyle, checkFont, defaultFont, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline } from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\nimport CanvasBuilder from './Builder.js';\nimport TextPlacement from '../../style/TextPlacement.js';\n/**\n * @const\n * @enum {number}\n */\nexport var TEXT_ALIGN = {\n    'left': 0,\n    'end': 0,\n    'center': 0.5,\n    'right': 1,\n    'start': 1,\n    'top': 0,\n    'middle': 0.5,\n    'hanging': 0.2,\n    'alphabetic': 0.8,\n    'ideographic': 0.8,\n    'bottom': 1\n};\nvar CanvasTextBuilder = /** @class */ (function (_super) {\n    __extends(CanvasTextBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasTextBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        var _this = _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n        /**\n         * @private\n         * @type {import(\"../canvas.js\").DeclutterGroups}\n         */\n        _this.declutterGroups_;\n        /**\n         * @private\n         * @type {Array<HTMLCanvasElement>}\n         */\n        _this.labels_ = null;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.text_ = '';\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetY_ = 0;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        _this.textRotateWithView_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textRotation_ = 0;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.textFillState_ = null;\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").FillState>}\n         */\n        _this.fillStates = {};\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.textStrokeState_ = null;\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n         */\n        _this.strokeStates = {};\n        /**\n         * @private\n         * @type {import(\"../canvas.js\").TextState}\n         */\n        _this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").TextState>}\n         */\n        _this.textStates = {};\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.textKey_ = '';\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.fillKey_ = '';\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.strokeKey_ = '';\n        labelCache.prune();\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    CanvasTextBuilder.prototype.finish = function () {\n        var instructions = _super.prototype.finish.call(this);\n        instructions.textStates = this.textStates;\n        instructions.fillStates = this.fillStates;\n        instructions.strokeStates = this.strokeStates;\n        return instructions;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasTextBuilder.prototype.drawText = function (geometry, feature) {\n        var fillState = this.textFillState_;\n        var strokeState = this.textStrokeState_;\n        var textState = this.textState_;\n        if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n            return;\n        }\n        var begin = this.coordinates.length;\n        var geometryType = geometry.getType();\n        var flatCoordinates = null;\n        var end = 2;\n        var stride = 2;\n        var i, ii;\n        if (textState.placement === TextPlacement.LINE) {\n            if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n                return;\n            }\n            var ends = void 0;\n            flatCoordinates = geometry.getFlatCoordinates();\n            stride = geometry.getStride();\n            if (geometryType == GeometryType.LINE_STRING) {\n                ends = [flatCoordinates.length];\n            }\n            else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n                ends = geometry.getEnds();\n            }\n            else if (geometryType == GeometryType.POLYGON) {\n                ends = geometry.getEnds().slice(0, 1);\n            }\n            else if (geometryType == GeometryType.MULTI_POLYGON) {\n                var endss = geometry.getEndss();\n                ends = [];\n                for (i = 0, ii = endss.length; i < ii; ++i) {\n                    ends.push(endss[i][0]);\n                }\n            }\n            this.beginGeometry(geometry, feature);\n            var textAlign = textState.textAlign;\n            var flatOffset = 0;\n            var flatEnd = void 0;\n            for (var o = 0, oo = ends.length; o < oo; ++o) {\n                if (textAlign == undefined) {\n                    var range = matchingChunk(textState.maxAngle, flatCoordinates, flatOffset, ends[o], stride);\n                    flatOffset = range[0];\n                    flatEnd = range[1];\n                }\n                else {\n                    flatEnd = ends[o];\n                }\n                for (i = flatOffset; i < flatEnd; i += stride) {\n                    this.coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n                }\n                end = this.coordinates.length;\n                flatOffset = ends[o];\n                var declutterGroup = this.declutterGroups_ ?\n                    (o === 0 ? this.declutterGroups_[0] : [].concat(this.declutterGroups_[0])) :\n                    null;\n                this.drawChars_(begin, end, declutterGroup);\n                begin = end;\n            }\n            this.endGeometry(feature);\n        }\n        else {\n            var geometryWidths = null;\n            if (!textState.overflow) {\n                geometryWidths = [];\n            }\n            switch (geometryType) {\n                case GeometryType.POINT:\n                case GeometryType.MULTI_POINT:\n                    flatCoordinates = geometry.getFlatCoordinates();\n                    end = flatCoordinates.length;\n                    break;\n                case GeometryType.LINE_STRING:\n                    flatCoordinates = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry).getFlatMidpoint();\n                    break;\n                case GeometryType.CIRCLE:\n                    flatCoordinates = /** @type {import(\"../../geom/Circle.js\").default} */ (geometry).getCenter();\n                    break;\n                case GeometryType.MULTI_LINE_STRING:\n                    flatCoordinates = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getFlatMidpoints();\n                    end = flatCoordinates.length;\n                    break;\n                case GeometryType.POLYGON:\n                    flatCoordinates = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getFlatInteriorPoint();\n                    if (!textState.overflow) {\n                        geometryWidths.push(flatCoordinates[2] / this.resolution);\n                    }\n                    stride = 3;\n                    break;\n                case GeometryType.MULTI_POLYGON:\n                    var interiorPoints = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getFlatInteriorPoints();\n                    flatCoordinates = [];\n                    for (i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n                        if (!textState.overflow) {\n                            geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n                        }\n                        flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n                    }\n                    end = flatCoordinates.length;\n                    if (end == 0) {\n                        return;\n                    }\n                    break;\n                default:\n            }\n            end = this.appendFlatCoordinates(flatCoordinates, 0, end, stride, false, false);\n            this.saveTextStates_();\n            if (textState.backgroundFill || textState.backgroundStroke) {\n                this.setFillStrokeStyle(textState.backgroundFill, textState.backgroundStroke);\n                if (textState.backgroundFill) {\n                    this.updateFillStyle(this.state, this.createFill);\n                    this.hitDetectionInstructions.push(this.createFill(this.state));\n                }\n                if (textState.backgroundStroke) {\n                    this.updateStrokeStyle(this.state, this.applyStroke);\n                    this.hitDetectionInstructions.push(this.createStroke(this.state));\n                }\n            }\n            this.beginGeometry(geometry, feature);\n            // The image is unknown at this stage so we pass null; it will be computed at render time.\n            // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n            // render time.\n            var pixelRatio_1 = this.pixelRatio;\n            this.instructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n                null, NaN, NaN, this.declutterGroups_, NaN, 1, 0, 0,\n                this.textRotateWithView_, this.textRotation_, 1, NaN,\n                textState.padding == defaultPadding ?\n                    defaultPadding : textState.padding.map(function (p) {\n                    return p * pixelRatio_1;\n                }),\n                !!textState.backgroundFill, !!textState.backgroundStroke,\n                this.text_, this.textKey_, this.strokeKey_, this.fillKey_,\n                this.textOffsetX_, this.textOffsetY_, geometryWidths\n            ]);\n            this.hitDetectionInstructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n                null, NaN, NaN, this.declutterGroups_, NaN, 1, 0, 0,\n                this.textRotateWithView_, this.textRotation_, 1 / this.pixelRatio, NaN,\n                textState.padding,\n                !!textState.backgroundFill, !!textState.backgroundStroke,\n                this.text_, this.textKey_, this.strokeKey_, this.fillKey_,\n                this.textOffsetX_, this.textOffsetY_, geometryWidths\n            ]);\n            this.endGeometry(feature);\n        }\n    };\n    /**\n     * @private\n     */\n    CanvasTextBuilder.prototype.saveTextStates_ = function () {\n        var strokeState = this.textStrokeState_;\n        var textState = this.textState_;\n        var fillState = this.textFillState_;\n        var strokeKey = this.strokeKey_;\n        if (strokeState) {\n            if (!(strokeKey in this.strokeStates)) {\n                this.strokeStates[strokeKey] = {\n                    strokeStyle: strokeState.strokeStyle,\n                    lineCap: strokeState.lineCap,\n                    lineDashOffset: strokeState.lineDashOffset,\n                    lineWidth: strokeState.lineWidth,\n                    lineJoin: strokeState.lineJoin,\n                    miterLimit: strokeState.miterLimit,\n                    lineDash: strokeState.lineDash\n                };\n            }\n        }\n        var textKey = this.textKey_;\n        if (!(textKey in this.textStates)) {\n            this.textStates[textKey] = {\n                font: textState.font,\n                textAlign: textState.textAlign || defaultTextAlign,\n                textBaseline: textState.textBaseline || defaultTextBaseline,\n                scale: textState.scale\n            };\n        }\n        var fillKey = this.fillKey_;\n        if (fillState) {\n            if (!(fillKey in this.fillStates)) {\n                this.fillStates[fillKey] = {\n                    fillStyle: fillState.fillStyle\n                };\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {number} begin Begin.\n     * @param {number} end End.\n     * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n     */\n    CanvasTextBuilder.prototype.drawChars_ = function (begin, end, declutterGroup) {\n        var strokeState = this.textStrokeState_;\n        var textState = this.textState_;\n        var strokeKey = this.strokeKey_;\n        var textKey = this.textKey_;\n        var fillKey = this.fillKey_;\n        this.saveTextStates_();\n        var pixelRatio = this.pixelRatio;\n        var baseline = TEXT_ALIGN[textState.textBaseline];\n        var offsetY = this.textOffsetY_ * pixelRatio;\n        var text = this.text_;\n        var textScale = textState.scale;\n        var strokeWidth = strokeState ? strokeState.lineWidth * textScale / 2 : 0;\n        this.instructions.push([CanvasInstruction.DRAW_CHARS,\n            begin, end, baseline, declutterGroup,\n            textState.overflow, fillKey, textState.maxAngle,\n            pixelRatio,\n            offsetY, strokeKey, strokeWidth * pixelRatio, text, textKey, 1\n        ]);\n        this.hitDetectionInstructions.push([CanvasInstruction.DRAW_CHARS,\n            begin, end, baseline, declutterGroup,\n            textState.overflow, fillKey, textState.maxAngle,\n            1,\n            offsetY, strokeKey, strokeWidth, text, textKey, 1 / pixelRatio\n        ]);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasTextBuilder.prototype.setTextStyle = function (textStyle, declutterGroups) {\n        var textState, fillState, strokeState;\n        if (!textStyle) {\n            this.text_ = '';\n        }\n        else {\n            this.declutterGroups_ = /** @type {import(\"../canvas.js\").DeclutterGroups} */ (declutterGroups);\n            var textFillStyle = textStyle.getFill();\n            if (!textFillStyle) {\n                fillState = this.textFillState_ = null;\n            }\n            else {\n                fillState = this.textFillState_;\n                if (!fillState) {\n                    fillState = this.textFillState_ = /** @type {import(\"../canvas.js\").FillState} */ ({});\n                }\n                fillState.fillStyle = asColorLike(textFillStyle.getColor() || defaultFillStyle);\n            }\n            var textStrokeStyle = textStyle.getStroke();\n            if (!textStrokeStyle) {\n                strokeState = this.textStrokeState_ = null;\n            }\n            else {\n                strokeState = this.textStrokeState_;\n                if (!strokeState) {\n                    strokeState = this.textStrokeState_ = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n                }\n                var lineDash = textStrokeStyle.getLineDash();\n                var lineDashOffset = textStrokeStyle.getLineDashOffset();\n                var lineWidth = textStrokeStyle.getWidth();\n                var miterLimit = textStrokeStyle.getMiterLimit();\n                strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n                strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n                strokeState.lineDashOffset =\n                    lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n                strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n                strokeState.lineWidth =\n                    lineWidth === undefined ? defaultLineWidth : lineWidth;\n                strokeState.miterLimit =\n                    miterLimit === undefined ? defaultMiterLimit : miterLimit;\n                strokeState.strokeStyle = asColorLike(textStrokeStyle.getColor() || defaultStrokeStyle);\n            }\n            textState = this.textState_;\n            var font = textStyle.getFont() || defaultFont;\n            checkFont(font);\n            var textScale = textStyle.getScale();\n            textState.overflow = textStyle.getOverflow();\n            textState.font = font;\n            textState.maxAngle = textStyle.getMaxAngle();\n            textState.placement = textStyle.getPlacement();\n            textState.textAlign = textStyle.getTextAlign();\n            textState.textBaseline = textStyle.getTextBaseline() || defaultTextBaseline;\n            textState.backgroundFill = textStyle.getBackgroundFill();\n            textState.backgroundStroke = textStyle.getBackgroundStroke();\n            textState.padding = textStyle.getPadding() || defaultPadding;\n            textState.scale = textScale === undefined ? 1 : textScale;\n            var textOffsetX = textStyle.getOffsetX();\n            var textOffsetY = textStyle.getOffsetY();\n            var textRotateWithView = textStyle.getRotateWithView();\n            var textRotation = textStyle.getRotation();\n            this.text_ = textStyle.getText() || '';\n            this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n            this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n            this.textRotateWithView_ = textRotateWithView === undefined ? false : textRotateWithView;\n            this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n            this.strokeKey_ = strokeState ?\n                (typeof strokeState.strokeStyle == 'string' ? strokeState.strokeStyle : getUid(strokeState.strokeStyle)) +\n                    strokeState.lineCap + strokeState.lineDashOffset + '|' + strokeState.lineWidth +\n                    strokeState.lineJoin + strokeState.miterLimit + '[' + strokeState.lineDash.join() + ']' :\n                '';\n            this.textKey_ = textState.font + textState.scale + (textState.textAlign || '?');\n            this.fillKey_ = fillState ?\n                (typeof fillState.fillStyle == 'string' ? fillState.fillStyle : ('|' + getUid(fillState.fillStyle))) :\n                '';\n        }\n    };\n    return CanvasTextBuilder;\n}(CanvasBuilder));\nexport default CanvasTextBuilder;\n//# sourceMappingURL=TextBuilder.js.map","/**\n * @module ol/render/canvas/BuilderGroup\n */\nimport { createEmpty } from '../../extent.js';\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n/**\n * @type {Object<import(\"./BuilderType\").default, typeof Builder>}\n */\nvar BATCH_CONSTRUCTORS = {\n    'Circle': PolygonBuilder,\n    'Default': Builder,\n    'Image': ImageBuilder,\n    'LineString': LineStringBuilder,\n    'Polygon': PolygonBuilder,\n    'Text': TextBuilder\n};\nvar BuilderGroup = /** @class */ (function () {\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {boolean} declutter Decluttering enabled.\n     */\n    function BuilderGroup(tolerance, maxExtent, resolution, pixelRatio, declutter) {\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this.declutter_ = declutter;\n        /**\n         * @type {import(\"../canvas.js\").DeclutterGroups}\n         * @private\n         */\n        this.declutterGroups_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.tolerance_ = tolerance;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        this.maxExtent_ = maxExtent;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.resolution_ = resolution;\n        /**\n         * @private\n         * @type {!Object<string, !Object<import(\"./BuilderType\").default, Builder>>}\n         */\n        this.buildersByZIndex_ = {};\n    }\n    /**\n     * @param {boolean} group Group with previous builder.\n     * @return {import(\"../canvas\").DeclutterGroups} The resulting instruction groups.\n     */\n    BuilderGroup.prototype.addDeclutter = function (group) {\n        var declutter = null;\n        if (this.declutter_) {\n            if (group) {\n                declutter = this.declutterGroups_;\n                /** @type {number} */ (declutter[0][4])++;\n            }\n            else {\n                declutter = this.declutterGroups_ = [createEmpty()];\n                declutter[0].push(1);\n            }\n        }\n        return declutter;\n    };\n    /**\n     * @return {!Object<string, !Object<import(\"./BuilderType\").default, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n     */\n    BuilderGroup.prototype.finish = function () {\n        var builderInstructions = {};\n        for (var zKey in this.buildersByZIndex_) {\n            builderInstructions[zKey] = builderInstructions[zKey] || {};\n            var builders = this.buildersByZIndex_[zKey];\n            for (var builderKey in builders) {\n                var builderInstruction = builders[builderKey].finish();\n                builderInstructions[zKey][builderKey] = builderInstruction;\n            }\n        }\n        return builderInstructions;\n    };\n    /**\n     * @param {number|undefined} zIndex Z index.\n     * @param {import(\"./BuilderType.js\").default} builderType Replay type.\n     * @return {import(\"../VectorContext.js\").default} Replay.\n     */\n    BuilderGroup.prototype.getBuilder = function (zIndex, builderType) {\n        var zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n        var replays = this.buildersByZIndex_[zIndexKey];\n        if (replays === undefined) {\n            replays = {};\n            this.buildersByZIndex_[zIndexKey] = replays;\n        }\n        var replay = replays[builderType];\n        if (replay === undefined) {\n            var Constructor = BATCH_CONSTRUCTORS[builderType];\n            replay = new Constructor(this.tolerance_, this.maxExtent_, this.resolution_, this.pixelRatio_);\n            replays[builderType] = replay;\n        }\n        return replay;\n    };\n    return BuilderGroup;\n}());\nexport default BuilderGroup;\n//# sourceMappingURL=BuilderGroup.js.map","/**\n * @module ol/render/canvas/BuilderType\n */\n/**\n * @enum {string}\n */\nexport default {\n    CIRCLE: 'Circle',\n    DEFAULT: 'Default',\n    IMAGE: 'Image',\n    LINE_STRING: 'LineString',\n    POLYGON: 'Polygon',\n    TEXT: 'Text'\n};\n//# sourceMappingURL=BuilderType.js.map","/**\n * @module ol/geom/flat/length\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    var length = 0;\n    for (var i = offset + stride; i < end; i += stride) {\n        var x2 = flatCoordinates[i];\n        var y2 = flatCoordinates[i + 1];\n        length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n        x1 = x2;\n        y1 = y2;\n    }\n    return length;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n    var perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n    var dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n    var dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n    perimeter += Math.sqrt(dx * dx + dy * dy);\n    return perimeter;\n}\n//# sourceMappingURL=length.js.map","/**\n * @module ol/geom/flat/textpath\n */\nimport { lerp } from '../../math.js';\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @return {Array<Array<*>>} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(flatCoordinates, offset, end, stride, text, startM, maxAngle, scale, measureAndCacheTextWidth, font, cache) {\n    var result = [];\n    // Keep text upright\n    var reverse = flatCoordinates[offset] > flatCoordinates[end - stride];\n    var numChars = text.length;\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    offset += stride;\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    var segmentM = 0;\n    var segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n    var angleChanged = false;\n    var index, previousAngle;\n    for (var i = 0; i < numChars; ++i) {\n        index = reverse ? numChars - i - 1 : i;\n        var char = text[index];\n        var charLength = scale * measureAndCacheTextWidth(font, char, cache);\n        var charM = startM + charLength / 2;\n        while (offset < end - stride && segmentM + segmentLength < charM) {\n            x1 = x2;\n            y1 = y2;\n            offset += stride;\n            x2 = flatCoordinates[offset];\n            y2 = flatCoordinates[offset + 1];\n            segmentM += segmentLength;\n            segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n        }\n        var segmentPos = charM - segmentM;\n        var angle = Math.atan2(y2 - y1, x2 - x1);\n        if (reverse) {\n            angle += angle > 0 ? -Math.PI : Math.PI;\n        }\n        if (previousAngle !== undefined) {\n            var delta = angle - previousAngle;\n            angleChanged = angleChanged || delta !== 0;\n            delta += (delta > Math.PI) ? -2 * Math.PI : (delta < -Math.PI) ? 2 * Math.PI : 0;\n            if (Math.abs(delta) > maxAngle) {\n                return null;\n            }\n        }\n        previousAngle = angle;\n        var interpolate = segmentPos / segmentLength;\n        var x = lerp(x1, x2, interpolate);\n        var y = lerp(y1, y2, interpolate);\n        result[index] = [x, y, charLength / 2, angle, char];\n        startM += charLength;\n    }\n    return angleChanged ? result : [[result[0][0], result[0][1], result[0][2], result[0][3], text]];\n}\n//# sourceMappingURL=textpath.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/Executor\n */\nimport { equals } from '../../array.js';\nimport { createEmpty, createOrUpdate, createOrUpdateEmpty, extend, intersects } from '../../extent.js';\nimport { lineStringLength } from '../../geom/flat/length.js';\nimport { drawTextOnPath } from '../../geom/flat/textpath.js';\nimport { transform2D } from '../../geom/flat/transform.js';\nimport { drawImage, defaultPadding, defaultTextBaseline } from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\nimport { TEXT_ALIGN } from './TextBuilder.js';\nimport { create as createTransform, compose as composeTransform, apply as applyTransform, setFromArray as transformSetFromArray } from '../../transform.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport { labelCache, defaultTextAlign, measureTextHeight, measureAndCacheTextWidth, measureTextWidths } from '../canvas.js';\nimport Disposable from '../../Disposable.js';\nimport RBush from 'rbush';\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, import(\"../canvas.js\").TextState>} textStates The text states (decluttering).\n * @property {!Object<string, import(\"../canvas.js\").FillState>} fillStates The fill states (decluttering).\n * @property {!Object<string, import(\"../canvas.js\").StrokeState>} strokeStates The stroke states (decluttering).\n */\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nvar tmpExtent = createEmpty();\n/**\n * @type {!import(\"../../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p4 = [];\nvar Executor = /** @class */ (function (_super) {\n    __extends(Executor, _super);\n    /**\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {boolean} overlaps The replay can have overlapping geometries.\n     * @param {SerializableInstructions} instructions The serializable instructions\n     */\n    function Executor(resolution, pixelRatio, overlaps, instructions) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {boolean}\n         */\n        _this.overlaps = overlaps;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.pixelRatio = pixelRatio;\n        /**\n         * @protected\n         * @const\n         * @type {number}\n         */\n        _this.resolution = resolution;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.alignFill_;\n        /**\n         * @type {Array<*>}\n         */\n        _this.declutterItems = [];\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        _this.instructions = instructions.instructions;\n        /**\n         * @protected\n         * @type {Array<number>}\n         */\n        _this.coordinates = instructions.coordinates;\n        /**\n         * @private\n         * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n         */\n        _this.coordinateCache_ = {};\n        /**\n         * @private\n         * @type {!import(\"../../transform.js\").Transform}\n         */\n        _this.renderedTransform_ = createTransform();\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        _this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.pixelCoordinates_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.viewRotation_ = 0;\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").FillState>}\n         */\n        _this.fillStates = instructions.fillStates || {};\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n         */\n        _this.strokeStates = instructions.strokeStates || {};\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").TextState>}\n         */\n        _this.textStates = instructions.textStates || {};\n        /**\n         * @private\n         * @type {Object<string, Object<string, number>>}\n         */\n        _this.widths_ = {};\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    Executor.prototype.disposeInternal = function () {\n        labelCache.release(this);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @param {string} text Text.\n     * @param {string} textKey Text style key.\n     * @param {string} fillKey Fill style key.\n     * @param {string} strokeKey Stroke style key.\n     * @return {HTMLCanvasElement} Image.\n     */\n    Executor.prototype.getTextImage = function (text, textKey, fillKey, strokeKey) {\n        var label;\n        var key = strokeKey + textKey + text + fillKey + this.pixelRatio;\n        if (!labelCache.containsKey(key)) {\n            var strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n            var fillState = fillKey ? this.fillStates[fillKey] : null;\n            var textState = this.textStates[textKey];\n            var pixelRatio = this.pixelRatio;\n            var scale = textState.scale * pixelRatio;\n            var align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n            var strokeWidth = strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n            var lines = text.split('\\n');\n            var numLines = lines.length;\n            var widths = [];\n            var width = measureTextWidths(textState.font, lines, widths);\n            var lineHeight = measureTextHeight(textState.font);\n            var height = lineHeight * numLines;\n            var renderWidth = width + strokeWidth;\n            var context = createCanvasContext2D(\n            // make canvas 2 pixels wider to account for italic text width measurement errors\n            Math.ceil((renderWidth + 2) * scale), Math.ceil((height + strokeWidth) * scale));\n            label = context.canvas;\n            labelCache.set(key, label);\n            if (scale != 1) {\n                context.scale(scale, scale);\n            }\n            context.font = textState.font;\n            if (strokeKey) {\n                context.strokeStyle = strokeState.strokeStyle;\n                context.lineWidth = strokeWidth;\n                context.lineCap = strokeState.lineCap;\n                context.lineJoin = strokeState.lineJoin;\n                context.miterLimit = strokeState.miterLimit;\n                if (context.setLineDash && strokeState.lineDash.length) {\n                    context.setLineDash(strokeState.lineDash);\n                    context.lineDashOffset = strokeState.lineDashOffset;\n                }\n            }\n            if (fillKey) {\n                context.fillStyle = fillState.fillStyle;\n            }\n            context.textBaseline = 'middle';\n            context.textAlign = 'center';\n            var leftRight = (0.5 - align);\n            var x = align * renderWidth + leftRight * strokeWidth;\n            var i = void 0;\n            if (strokeKey) {\n                for (i = 0; i < numLines; ++i) {\n                    context.strokeText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n                }\n            }\n            if (fillKey) {\n                for (i = 0; i < numLines; ++i) {\n                    context.fillText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n                }\n            }\n        }\n        return labelCache.get(key, this);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n     * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n     * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n     * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n     * @param {Array<*>} fillInstruction Fill instruction.\n     * @param {Array<*>} strokeInstruction Stroke instruction.\n     */\n    Executor.prototype.replayTextBackground_ = function (context, p1, p2, p3, p4, fillInstruction, strokeInstruction) {\n        context.beginPath();\n        context.moveTo.apply(context, p1);\n        context.lineTo.apply(context, p2);\n        context.lineTo.apply(context, p3);\n        context.lineTo.apply(context, p4);\n        context.lineTo.apply(context, p1);\n        if (fillInstruction) {\n            this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n            this.fill_(context);\n        }\n        if (strokeInstruction) {\n            this.setStrokeStyle_(context, /** @type {Array<*>} */ (strokeInstruction));\n            context.stroke();\n        }\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n     * @param {number} anchorX Anchor X.\n     * @param {number} anchorY Anchor Y.\n     * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n     * @param {number} height Height.\n     * @param {number} opacity Opacity.\n     * @param {number} originX Origin X.\n     * @param {number} originY Origin Y.\n     * @param {number} rotation Rotation.\n     * @param {number} scale Scale.\n     * @param {boolean} snapToPixel Snap to pixel.\n     * @param {number} width Width.\n     * @param {Array<number>} padding Padding.\n     * @param {Array<*>} fillInstruction Fill instruction.\n     * @param {Array<*>} strokeInstruction Stroke instruction.\n     */\n    Executor.prototype.replayImage_ = function (context, x, y, image, anchorX, anchorY, declutterGroup, height, opacity, originX, originY, rotation, scale, snapToPixel, width, padding, fillInstruction, strokeInstruction) {\n        var fillStroke = fillInstruction || strokeInstruction;\n        anchorX *= scale;\n        anchorY *= scale;\n        x -= anchorX;\n        y -= anchorY;\n        var w = (width + originX > image.width) ? image.width - originX : width;\n        var h = (height + originY > image.height) ? image.height - originY : height;\n        var boxW = padding[3] + w * scale + padding[1];\n        var boxH = padding[0] + h * scale + padding[2];\n        var boxX = x - padding[3];\n        var boxY = y - padding[0];\n        if (fillStroke || rotation !== 0) {\n            p1[0] = p4[0] = boxX;\n            p1[1] = p2[1] = boxY;\n            p2[0] = p3[0] = boxX + boxW;\n            p3[1] = p4[1] = boxY + boxH;\n        }\n        var transform = null;\n        if (rotation !== 0) {\n            var centerX = x + anchorX;\n            var centerY = y + anchorY;\n            transform = composeTransform(tmpTransform, centerX, centerY, 1, 1, rotation, -centerX, -centerY);\n            applyTransform(tmpTransform, p1);\n            applyTransform(tmpTransform, p2);\n            applyTransform(tmpTransform, p3);\n            applyTransform(tmpTransform, p4);\n            createOrUpdate(Math.min(p1[0], p2[0], p3[0], p4[0]), Math.min(p1[1], p2[1], p3[1], p4[1]), Math.max(p1[0], p2[0], p3[0], p4[0]), Math.max(p1[1], p2[1], p3[1], p4[1]), tmpExtent);\n        }\n        else {\n            createOrUpdate(boxX, boxY, boxX + boxW, boxY + boxH, tmpExtent);\n        }\n        var canvas = context.canvas;\n        var strokePadding = strokeInstruction ? (strokeInstruction[2] * scale / 2) : 0;\n        var intersects = tmpExtent[0] - strokePadding <= canvas.width && tmpExtent[2] + strokePadding >= 0 &&\n            tmpExtent[1] - strokePadding <= canvas.height && tmpExtent[3] + strokePadding >= 0;\n        if (snapToPixel) {\n            x = Math.round(x);\n            y = Math.round(y);\n        }\n        if (declutterGroup) {\n            if (!intersects && declutterGroup[4] == 1) {\n                return;\n            }\n            extend(declutterGroup, tmpExtent);\n            var declutterArgs = intersects ?\n                [context, transform ? transform.slice(0) : null, opacity, image, originX, originY, w, h, x, y, scale] :\n                null;\n            if (declutterArgs) {\n                if (fillStroke) {\n                    declutterArgs.push(fillInstruction, strokeInstruction, p1, p2, p3, p4);\n                }\n                declutterGroup.push(declutterArgs);\n            }\n        }\n        else if (intersects) {\n            if (fillStroke) {\n                this.replayTextBackground_(context, p1, p2, p3, p4, \n                /** @type {Array<*>} */ (fillInstruction), \n                /** @type {Array<*>} */ (strokeInstruction));\n            }\n            drawImage(context, transform, opacity, image, originX, originY, w, h, x, y, scale);\n        }\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     */\n    Executor.prototype.fill_ = function (context) {\n        if (this.alignFill_) {\n            var origin_1 = applyTransform(this.renderedTransform_, [0, 0]);\n            var repeatSize = 512 * this.pixelRatio;\n            context.save();\n            context.translate(origin_1[0] % repeatSize, origin_1[1] % repeatSize);\n            context.rotate(this.viewRotation_);\n        }\n        context.fill();\n        if (this.alignFill_) {\n            context.restore();\n        }\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {Array<*>} instruction Instruction.\n     */\n    Executor.prototype.setStrokeStyle_ = function (context, instruction) {\n        context.strokeStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n        context.lineWidth = /** @type {number} */ (instruction[2]);\n        context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n        context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n        context.miterLimit = /** @type {number} */ (instruction[5]);\n        if (context.setLineDash) {\n            context.lineDashOffset = /** @type {number} */ (instruction[7]);\n            context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {number} opacity Layer opacity.\n     * @param {?} declutterTree Declutter tree.\n     * @return {?} Declutter tree.\n     */\n    Executor.prototype.renderDeclutter = function (declutterGroup, feature, opacity, declutterTree) {\n        if (declutterGroup && declutterGroup.length > 5) {\n            var groupCount = declutterGroup[4];\n            if (groupCount == 1 || groupCount == declutterGroup.length - 5) {\n                /** @type {import(\"../../structs/RBush.js\").Entry} */\n                var box = {\n                    minX: /** @type {number} */ (declutterGroup[0]),\n                    minY: /** @type {number} */ (declutterGroup[1]),\n                    maxX: /** @type {number} */ (declutterGroup[2]),\n                    maxY: /** @type {number} */ (declutterGroup[3]),\n                    value: feature\n                };\n                if (!declutterTree) {\n                    declutterTree = new RBush(9);\n                }\n                if (!declutterTree.collides(box)) {\n                    declutterTree.insert(box);\n                    for (var j = 5, jj = declutterGroup.length; j < jj; ++j) {\n                        var declutterData = /** @type {Array} */ (declutterGroup[j]);\n                        var context = declutterData[0];\n                        var currentAlpha = context.globalAlpha;\n                        if (currentAlpha !== opacity) {\n                            context.globalAlpha = opacity;\n                        }\n                        if (declutterData.length > 11) {\n                            this.replayTextBackground_(declutterData[0], declutterData[13], declutterData[14], declutterData[15], declutterData[16], declutterData[11], declutterData[12]);\n                        }\n                        drawImage.apply(undefined, declutterData);\n                        if (currentAlpha !== opacity) {\n                            context.globalAlpha = currentAlpha;\n                        }\n                    }\n                }\n                declutterGroup.length = 5;\n                createOrUpdateEmpty(declutterGroup);\n            }\n        }\n        return declutterTree;\n    };\n    /**\n     * @private\n     * @param {string} text The text to draw.\n     * @param {string} textKey The key of the text state.\n     * @param {string} strokeKey The key for the stroke state.\n     * @param {string} fillKey The key for the fill state.\n     * @return {{label: HTMLCanvasElement, anchorX: number, anchorY: number}} The text image and its anchor.\n     */\n    Executor.prototype.drawTextImageWithPointPlacement_ = function (text, textKey, strokeKey, fillKey) {\n        var textState = this.textStates[textKey];\n        var label = this.getTextImage(text, textKey, fillKey, strokeKey);\n        var strokeState = this.strokeStates[strokeKey];\n        var pixelRatio = this.pixelRatio;\n        var align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n        var baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n        var strokeWidth = strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n        // Remove the 2 pixels we added in getTextImage() for the anchor\n        var width = label.width / pixelRatio - 2 * textState.scale;\n        var anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n        var anchorY = baseline * label.height / pixelRatio + 2 * (0.5 - baseline) * strokeWidth;\n        return {\n            label: label,\n            anchorX: anchorX,\n            anchorY: anchorY\n        };\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {Array<*>} instructions Instructions array.\n     * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n     * @param {function(import(\"../../Feature.js\").FeatureLike): T|undefined} featureCallback Feature callback.\n     * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check features that intersect this\n     *     extent.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    Executor.prototype.execute_ = function (context, transform, instructions, snapToPixel, featureCallback, opt_hitExtent) {\n        this.declutterItems.length = 0;\n        /** @type {Array<number>} */\n        var pixelCoordinates;\n        if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n            pixelCoordinates = this.pixelCoordinates_;\n        }\n        else {\n            if (!this.pixelCoordinates_) {\n                this.pixelCoordinates_ = [];\n            }\n            pixelCoordinates = transform2D(this.coordinates, 0, this.coordinates.length, 2, transform, this.pixelCoordinates_);\n            transformSetFromArray(this.renderedTransform_, transform);\n        }\n        var i = 0; // instruction index\n        var ii = instructions.length; // end of instructions\n        var d = 0; // data index\n        var dd; // end of per-instruction data\n        var anchorX, anchorY, prevX, prevY, roundX, roundY, declutterGroup, declutterGroups, image, text, textKey;\n        var strokeKey, fillKey;\n        var pendingFill = 0;\n        var pendingStroke = 0;\n        var lastFillInstruction = null;\n        var lastStrokeInstruction = null;\n        var coordinateCache = this.coordinateCache_;\n        var viewRotation = this.viewRotation_;\n        var state = /** @type {import(\"../../render.js\").State} */ ({\n            context: context,\n            pixelRatio: this.pixelRatio,\n            resolution: this.resolution,\n            rotation: viewRotation\n        });\n        // When the batch size gets too big, performance decreases. 200 is a good\n        // balance between batch size and number of fill/stroke instructions.\n        var batchSize = this.instructions != instructions || this.overlaps ? 0 : 200;\n        var /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n        var x, y;\n        while (i < ii) {\n            var instruction = instructions[i];\n            var type = /** @type {CanvasInstruction} */ (instruction[0]);\n            switch (type) {\n                case CanvasInstruction.BEGIN_GEOMETRY:\n                    feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n                    if (!feature.getGeometry()) {\n                        i = /** @type {number} */ (instruction[2]);\n                    }\n                    else if (opt_hitExtent !== undefined && !intersects(opt_hitExtent, instruction[3])) {\n                        i = /** @type {number} */ (instruction[2]) + 1;\n                    }\n                    else {\n                        ++i;\n                    }\n                    break;\n                case CanvasInstruction.BEGIN_PATH:\n                    if (pendingFill > batchSize) {\n                        this.fill_(context);\n                        pendingFill = 0;\n                    }\n                    if (pendingStroke > batchSize) {\n                        context.stroke();\n                        pendingStroke = 0;\n                    }\n                    if (!pendingFill && !pendingStroke) {\n                        context.beginPath();\n                        prevX = prevY = NaN;\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.CIRCLE:\n                    d = /** @type {number} */ (instruction[1]);\n                    var x1 = pixelCoordinates[d];\n                    var y1 = pixelCoordinates[d + 1];\n                    var x2 = pixelCoordinates[d + 2];\n                    var y2 = pixelCoordinates[d + 3];\n                    var dx = x2 - x1;\n                    var dy = y2 - y1;\n                    var r = Math.sqrt(dx * dx + dy * dy);\n                    context.moveTo(x1 + r, y1);\n                    context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n                    ++i;\n                    break;\n                case CanvasInstruction.CLOSE_PATH:\n                    context.closePath();\n                    ++i;\n                    break;\n                case CanvasInstruction.CUSTOM:\n                    d = /** @type {number} */ (instruction[1]);\n                    dd = instruction[2];\n                    var geometry = /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (instruction[3]);\n                    var renderer = instruction[4];\n                    var fn = instruction.length == 6 ? instruction[5] : undefined;\n                    state.geometry = geometry;\n                    state.feature = feature;\n                    if (!(i in coordinateCache)) {\n                        coordinateCache[i] = [];\n                    }\n                    var coords = coordinateCache[i];\n                    if (fn) {\n                        fn(pixelCoordinates, d, dd, 2, coords);\n                    }\n                    else {\n                        coords[0] = pixelCoordinates[d];\n                        coords[1] = pixelCoordinates[d + 1];\n                        coords.length = 2;\n                    }\n                    renderer(coords, state);\n                    ++i;\n                    break;\n                case CanvasInstruction.DRAW_IMAGE:\n                    d = /** @type {number} */ (instruction[1]);\n                    dd = /** @type {number} */ (instruction[2]);\n                    image = /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (instruction[3]);\n                    // Remaining arguments in DRAW_IMAGE are in alphabetical order\n                    anchorX = /** @type {number} */ (instruction[4]);\n                    anchorY = /** @type {number} */ (instruction[5]);\n                    declutterGroups = featureCallback ? null : instruction[6];\n                    var height = /** @type {number} */ (instruction[7]);\n                    var opacity = /** @type {number} */ (instruction[8]);\n                    var originX = /** @type {number} */ (instruction[9]);\n                    var originY = /** @type {number} */ (instruction[10]);\n                    var rotateWithView = /** @type {boolean} */ (instruction[11]);\n                    var rotation = /** @type {number} */ (instruction[12]);\n                    var scale = /** @type {number} */ (instruction[13]);\n                    var width = /** @type {number} */ (instruction[14]);\n                    if (!image && instruction.length >= 19) {\n                        // create label images\n                        text = /** @type {string} */ (instruction[18]);\n                        textKey = /** @type {string} */ (instruction[19]);\n                        strokeKey = /** @type {string} */ (instruction[20]);\n                        fillKey = /** @type {string} */ (instruction[21]);\n                        var labelWithAnchor = this.drawTextImageWithPointPlacement_(text, textKey, strokeKey, fillKey);\n                        image = instruction[3] = labelWithAnchor.label;\n                        var textOffsetX = /** @type {number} */ (instruction[22]);\n                        anchorX = instruction[4] = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n                        var textOffsetY = /** @type {number} */ (instruction[23]);\n                        anchorY = instruction[5] = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n                        height = instruction[7] = image.height;\n                        width = instruction[14] = image.width;\n                    }\n                    var geometryWidths = void 0;\n                    if (instruction.length > 24) {\n                        geometryWidths = /** @type {number} */ (instruction[24]);\n                    }\n                    var padding = void 0, backgroundFill = void 0, backgroundStroke = void 0;\n                    if (instruction.length > 16) {\n                        padding = /** @type {Array<number>} */ (instruction[15]);\n                        backgroundFill = /** @type {boolean} */ (instruction[16]);\n                        backgroundStroke = /** @type {boolean} */ (instruction[17]);\n                    }\n                    else {\n                        padding = defaultPadding;\n                        backgroundFill = backgroundStroke = false;\n                    }\n                    if (rotateWithView) {\n                        rotation += viewRotation;\n                    }\n                    var widthIndex = 0;\n                    var declutterGroupIndex = 0;\n                    for (; d < dd; d += 2) {\n                        if (geometryWidths && geometryWidths[widthIndex++] < width / this.pixelRatio) {\n                            continue;\n                        }\n                        if (declutterGroups) {\n                            var index = Math.floor(declutterGroupIndex);\n                            if (declutterGroups.length < index + 1) {\n                                declutterGroup = createEmpty();\n                                declutterGroup.push(declutterGroups[0][4]);\n                                declutterGroups.push(declutterGroup);\n                            }\n                            declutterGroup = declutterGroups[index];\n                        }\n                        this.replayImage_(context, pixelCoordinates[d], pixelCoordinates[d + 1], image, anchorX, anchorY, declutterGroup, height, opacity, originX, originY, rotation, scale, snapToPixel, width, padding, backgroundFill ? /** @type {Array<*>} */ (lastFillInstruction) : null, backgroundStroke ? /** @type {Array<*>} */ (lastStrokeInstruction) : null);\n                        if (declutterGroup) {\n                            if (declutterGroupIndex === Math.floor(declutterGroupIndex)) {\n                                this.declutterItems.push(this, declutterGroup, feature);\n                            }\n                            declutterGroupIndex += 1 / declutterGroup[4];\n                        }\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.DRAW_CHARS:\n                    var begin = /** @type {number} */ (instruction[1]);\n                    var end = /** @type {number} */ (instruction[2]);\n                    var baseline = /** @type {number} */ (instruction[3]);\n                    declutterGroup = featureCallback ? null : instruction[4];\n                    var overflow = /** @type {number} */ (instruction[5]);\n                    fillKey = /** @type {string} */ (instruction[6]);\n                    var maxAngle = /** @type {number} */ (instruction[7]);\n                    var measurePixelRatio = /** @type {number} */ (instruction[8]);\n                    var offsetY = /** @type {number} */ (instruction[9]);\n                    strokeKey = /** @type {string} */ (instruction[10]);\n                    var strokeWidth = /** @type {number} */ (instruction[11]);\n                    text = /** @type {string} */ (instruction[12]);\n                    textKey = /** @type {string} */ (instruction[13]);\n                    var pixelRatioScale = /** @type {number} */ (instruction[14]);\n                    var textState = this.textStates[textKey];\n                    var font = textState.font;\n                    var textScale = textState.scale * measurePixelRatio;\n                    var cachedWidths = void 0;\n                    if (font in this.widths_) {\n                        cachedWidths = this.widths_[font];\n                    }\n                    else {\n                        cachedWidths = this.widths_[font] = {};\n                    }\n                    var pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n                    var textLength = textScale * measureAndCacheTextWidth(font, text, cachedWidths);\n                    if (overflow || textLength <= pathLength) {\n                        var textAlign = this.textStates[textKey].textAlign;\n                        var startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n                        var parts = drawTextOnPath(pixelCoordinates, begin, end, 2, text, startM, maxAngle, textScale, measureAndCacheTextWidth, font, cachedWidths);\n                        if (parts) {\n                            var c = void 0, cc = void 0, chars = void 0, label = void 0, part = void 0;\n                            if (strokeKey) {\n                                for (c = 0, cc = parts.length; c < cc; ++c) {\n                                    part = parts[c]; // x, y, anchorX, rotation, chunk\n                                    chars = /** @type {string} */ (part[4]);\n                                    label = this.getTextImage(chars, textKey, '', strokeKey);\n                                    anchorX = /** @type {number} */ (part[2]) + strokeWidth;\n                                    anchorY = baseline * label.height + (0.5 - baseline) * 2 * strokeWidth - offsetY;\n                                    this.replayImage_(context, \n                                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label, anchorX, anchorY, declutterGroup, label.height, 1, 0, 0, \n                                    /** @type {number} */ (part[3]), pixelRatioScale, false, label.width, defaultPadding, null, null);\n                                }\n                            }\n                            if (fillKey) {\n                                for (c = 0, cc = parts.length; c < cc; ++c) {\n                                    part = parts[c]; // x, y, anchorX, rotation, chunk\n                                    chars = /** @type {string} */ (part[4]);\n                                    label = this.getTextImage(chars, textKey, fillKey, '');\n                                    anchorX = /** @type {number} */ (part[2]);\n                                    anchorY = baseline * label.height - offsetY;\n                                    this.replayImage_(context, \n                                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label, anchorX, anchorY, declutterGroup, label.height, 1, 0, 0, \n                                    /** @type {number} */ (part[3]), pixelRatioScale, false, label.width, defaultPadding, null, null);\n                                }\n                            }\n                        }\n                    }\n                    this.declutterItems.push(this, declutterGroup, feature);\n                    ++i;\n                    break;\n                case CanvasInstruction.END_GEOMETRY:\n                    if (featureCallback !== undefined) {\n                        feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n                        var result = featureCallback(feature);\n                        if (result) {\n                            return result;\n                        }\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.FILL:\n                    if (batchSize) {\n                        pendingFill++;\n                    }\n                    else {\n                        this.fill_(context);\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.MOVE_TO_LINE_TO:\n                    d = /** @type {number} */ (instruction[1]);\n                    dd = /** @type {number} */ (instruction[2]);\n                    x = pixelCoordinates[d];\n                    y = pixelCoordinates[d + 1];\n                    roundX = (x + 0.5) | 0;\n                    roundY = (y + 0.5) | 0;\n                    if (roundX !== prevX || roundY !== prevY) {\n                        context.moveTo(x, y);\n                        prevX = roundX;\n                        prevY = roundY;\n                    }\n                    for (d += 2; d < dd; d += 2) {\n                        x = pixelCoordinates[d];\n                        y = pixelCoordinates[d + 1];\n                        roundX = (x + 0.5) | 0;\n                        roundY = (y + 0.5) | 0;\n                        if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n                            context.lineTo(x, y);\n                            prevX = roundX;\n                            prevY = roundY;\n                        }\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.SET_FILL_STYLE:\n                    lastFillInstruction = instruction;\n                    this.alignFill_ = instruction[2];\n                    if (pendingFill) {\n                        this.fill_(context);\n                        pendingFill = 0;\n                        if (pendingStroke) {\n                            context.stroke();\n                            pendingStroke = 0;\n                        }\n                    }\n                    context.fillStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n                    ++i;\n                    break;\n                case CanvasInstruction.SET_STROKE_STYLE:\n                    lastStrokeInstruction = instruction;\n                    if (pendingStroke) {\n                        context.stroke();\n                        pendingStroke = 0;\n                    }\n                    this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n                    ++i;\n                    break;\n                case CanvasInstruction.STROKE:\n                    if (batchSize) {\n                        pendingStroke++;\n                    }\n                    else {\n                        context.stroke();\n                    }\n                    ++i;\n                    break;\n                default:\n                    ++i; // consume the instruction anyway, to avoid an infinite loop\n                    break;\n            }\n        }\n        if (pendingFill) {\n            this.fill_(context);\n        }\n        if (pendingStroke) {\n            context.stroke();\n        }\n        return undefined;\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n     */\n    Executor.prototype.execute = function (context, transform, viewRotation, snapToPixel) {\n        this.viewRotation_ = viewRotation;\n        this.execute_(context, transform, this.instructions, snapToPixel, undefined, undefined);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {function(import(\"../../Feature.js\").FeatureLike): T=} opt_featureCallback\n     *     Feature callback.\n     * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check features that intersect this\n     *     extent.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    Executor.prototype.executeHitDetection = function (context, transform, viewRotation, opt_featureCallback, opt_hitExtent) {\n        this.viewRotation_ = viewRotation;\n        return this.execute_(context, transform, this.hitDetectionInstructions, true, opt_featureCallback, opt_hitExtent);\n    };\n    return Executor;\n}(Disposable));\nexport default Executor;\n//# sourceMappingURL=Executor.js.map","/**\n * @module ol/render/canvas/ExecutorGroup\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { numberSafeCompareFunction } from '../../array.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport { buffer, createEmpty, extendCoordinate } from '../../extent.js';\nimport { transform2D } from '../../geom/flat/transform.js';\nimport { isEmpty } from '../../obj.js';\nimport BuilderType from './BuilderType.js';\nimport { create as createTransform, compose as composeTransform } from '../../transform.js';\nimport Executor from './Executor.js';\nimport Disposable from '../../Disposable.js';\n/**\n * @const\n * @type {Array<BuilderType>}\n */\nvar ORDER = [\n    BuilderType.POLYGON,\n    BuilderType.CIRCLE,\n    BuilderType.LINE_STRING,\n    BuilderType.IMAGE,\n    BuilderType.TEXT,\n    BuilderType.DEFAULT\n];\nvar ExecutorGroup = /** @class */ (function (_super) {\n    __extends(ExecutorGroup, _super);\n    /**\n     * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n     * `maxExtent` was set on the Buillder for this executor group, the same `maxExtent`\n     * should be set here, unless the target context does not exceet that extent (which\n     * can be the case when rendering to tiles).\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {boolean} overlaps The executor group can have overlapping geometries.\n     * @param {!Object<string, !Object<BuilderType, import(\"./Builder.js\").SerializableInstructions>>} allInstructions\n     * The serializable instructions.\n     * @param {number=} opt_renderBuffer Optional rendering buffer.\n     */\n    function ExecutorGroup(maxExtent, resolution, pixelRatio, overlaps, allInstructions, opt_renderBuffer) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.maxExtent_ = maxExtent;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.overlaps_ = overlaps;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.resolution_ = resolution;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.renderBuffer_ = opt_renderBuffer;\n        /**\n         * @private\n         * @type {!Object<string, !Object<BuilderType, import(\"./Executor\").default>>}\n         */\n        _this.executorsByZIndex_ = {};\n        /**\n         * @private\n         * @type {CanvasRenderingContext2D}\n         */\n        _this.hitDetectionContext_ = null;\n        /**\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.hitDetectionTransform_ = createTransform();\n        _this.createExecutors_(allInstructions);\n        return _this;\n    }\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     */\n    ExecutorGroup.prototype.clip = function (context, transform) {\n        var flatClipCoords = this.getClipCoords(transform);\n        context.beginPath();\n        context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n        context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n        context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n        context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n        context.clip();\n    };\n    /**\n     * Create executors and populate them using the provided instructions.\n     * @private\n     * @param {!Object<string, !Object<BuilderType, import(\"./Builder.js\").SerializableInstructions>>} allInstructions The serializable instructions\n     */\n    ExecutorGroup.prototype.createExecutors_ = function (allInstructions) {\n        for (var zIndex in allInstructions) {\n            var executors = this.executorsByZIndex_[zIndex];\n            if (executors === undefined) {\n                this.executorsByZIndex_[zIndex] = executors = {};\n            }\n            var instructionByZindex = allInstructions[zIndex];\n            for (var builderType in instructionByZindex) {\n                var instructions = instructionByZindex[builderType];\n                executors[builderType] = new Executor(this.resolution_, this.pixelRatio_, this.overlaps_, instructions);\n            }\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    ExecutorGroup.prototype.disposeInternal = function () {\n        for (var z in this.executorsByZIndex_) {\n            var executors = this.executorsByZIndex_[z];\n            for (var key in executors) {\n                executors[key].disposeInternal();\n            }\n        }\n        if (this.hitDetectionContext_) {\n            var canvas = this.hitDetectionContext_.canvas;\n            canvas.width = canvas.height = 0;\n        }\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @param {Array<BuilderType>} executors Executors.\n     * @return {boolean} Has executors of the provided types.\n     */\n    ExecutorGroup.prototype.hasExecutors = function (executors) {\n        for (var zIndex in this.executorsByZIndex_) {\n            var candidates = this.executorsByZIndex_[zIndex];\n            for (var i = 0, ii = executors.length; i < ii; ++i) {\n                if (executors[i] in candidates) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} resolution Resolution.\n     * @param {number} rotation Rotation.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(import(\"../../Feature.js\").FeatureLike): T} callback Feature callback.\n     * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    ExecutorGroup.prototype.forEachFeatureAtCoordinate = function (coordinate, resolution, rotation, hitTolerance, callback, declutteredFeatures) {\n        hitTolerance = Math.round(hitTolerance);\n        var contextSize = hitTolerance * 2 + 1;\n        var transform = composeTransform(this.hitDetectionTransform_, hitTolerance + 0.5, hitTolerance + 0.5, 1 / resolution, -1 / resolution, -rotation, -coordinate[0], -coordinate[1]);\n        if (!this.hitDetectionContext_) {\n            this.hitDetectionContext_ = createCanvasContext2D(contextSize, contextSize);\n        }\n        var context = this.hitDetectionContext_;\n        if (context.canvas.width !== contextSize || context.canvas.height !== contextSize) {\n            context.canvas.width = contextSize;\n            context.canvas.height = contextSize;\n        }\n        else {\n            context.clearRect(0, 0, contextSize, contextSize);\n        }\n        /**\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        var hitExtent;\n        if (this.renderBuffer_ !== undefined) {\n            hitExtent = createEmpty();\n            extendCoordinate(hitExtent, coordinate);\n            buffer(hitExtent, resolution * (this.renderBuffer_ + hitTolerance), hitExtent);\n        }\n        var mask = getCircleArray(hitTolerance);\n        var builderType;\n        /**\n         * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n         * @return {?} Callback result.\n         */\n        function featureCallback(feature) {\n            var imageData = context.getImageData(0, 0, contextSize, contextSize).data;\n            for (var i_1 = 0; i_1 < contextSize; i_1++) {\n                for (var j_1 = 0; j_1 < contextSize; j_1++) {\n                    if (mask[i_1][j_1]) {\n                        if (imageData[(j_1 * contextSize + i_1) * 4 + 3] > 0) {\n                            var result_1 = void 0;\n                            if (!(declutteredFeatures && (builderType == BuilderType.IMAGE || builderType == BuilderType.TEXT)) ||\n                                declutteredFeatures.indexOf(feature) !== -1) {\n                                result_1 = callback(feature);\n                            }\n                            if (result_1) {\n                                return result_1;\n                            }\n                            else {\n                                context.clearRect(0, 0, contextSize, contextSize);\n                                return undefined;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        /** @type {Array<number>} */\n        var zs = Object.keys(this.executorsByZIndex_).map(Number);\n        zs.sort(numberSafeCompareFunction);\n        var i, j, executors, executor, result;\n        for (i = zs.length - 1; i >= 0; --i) {\n            var zIndexKey = zs[i].toString();\n            executors = this.executorsByZIndex_[zIndexKey];\n            for (j = ORDER.length - 1; j >= 0; --j) {\n                builderType = ORDER[j];\n                executor = executors[builderType];\n                if (executor !== undefined) {\n                    result = executor.executeHitDetection(context, transform, rotation, featureCallback, hitExtent);\n                    if (result) {\n                        return result;\n                    }\n                }\n            }\n        }\n        return undefined;\n    };\n    /**\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @return {Array<number>} Clip coordinates.\n     */\n    ExecutorGroup.prototype.getClipCoords = function (transform) {\n        var maxExtent = this.maxExtent_;\n        if (!maxExtent) {\n            return null;\n        }\n        var minX = maxExtent[0];\n        var minY = maxExtent[1];\n        var maxX = maxExtent[2];\n        var maxY = maxExtent[3];\n        var flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n        transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n        return flatClipCoords;\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    ExecutorGroup.prototype.isEmpty = function () {\n        return isEmpty(this.executorsByZIndex_);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n     * @param {Array<BuilderType>=} opt_builderTypes Ordered replay types to replay.\n     *     Default is {@link module:ol/render/replay~ORDER}\n     * @param {Object<string, import(\"../canvas.js\").DeclutterGroup>=} opt_declutterReplays Declutter replays.\n     */\n    ExecutorGroup.prototype.execute = function (context, transform, viewRotation, snapToPixel, opt_builderTypes, opt_declutterReplays) {\n        /** @type {Array<number>} */\n        var zs = Object.keys(this.executorsByZIndex_).map(Number);\n        zs.sort(numberSafeCompareFunction);\n        // setup clipping so that the parts of over-simplified geometries are not\n        // visible outside the current extent when panning\n        if (this.maxExtent_) {\n            context.save();\n            this.clip(context, transform);\n        }\n        var builderTypes = opt_builderTypes ? opt_builderTypes : ORDER;\n        var i, ii, j, jj, replays, replay;\n        for (i = 0, ii = zs.length; i < ii; ++i) {\n            var zIndexKey = zs[i].toString();\n            replays = this.executorsByZIndex_[zIndexKey];\n            for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n                var builderType = builderTypes[j];\n                replay = replays[builderType];\n                if (replay !== undefined) {\n                    if (opt_declutterReplays &&\n                        (builderType == BuilderType.IMAGE || builderType == BuilderType.TEXT)) {\n                        var declutter = opt_declutterReplays[zIndexKey];\n                        if (!declutter) {\n                            opt_declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n                        }\n                        else {\n                            declutter.push(replay, transform.slice(0));\n                        }\n                    }\n                    else {\n                        replay.execute(context, transform, viewRotation, snapToPixel);\n                    }\n                }\n            }\n        }\n        if (this.maxExtent_) {\n            context.restore();\n        }\n    };\n    return ExecutorGroup;\n}(Disposable));\n/**\n * This cache is used for storing calculated pixel circles for increasing performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<Array<(boolean|undefined)>>>}\n */\nvar circleArrayCache = {\n    0: [[true]]\n};\n/**\n * This method fills a row in the array from the given coordinate to the\n * middle with `true`.\n * @param {Array<Array<(boolean|undefined)>>} array The array that will be altered.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n */\nfunction fillCircleArrayRowToMiddle(array, x, y) {\n    var i;\n    var radius = Math.floor(array.length / 2);\n    if (x >= radius) {\n        for (i = radius; i < x; i++) {\n            array[i][y] = true;\n        }\n    }\n    else if (x < radius) {\n        for (i = x + 1; i < radius; i++) {\n            array[i][y] = true;\n        }\n    }\n}\n/**\n * This methods creates a circle inside a fitting array. Points inside the\n * circle are marked by true, points on the outside are undefined.\n * It uses the midpoint circle algorithm.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @returns {Array<Array<(boolean|undefined)>>} An array with marked circle points.\n */\nexport function getCircleArray(radius) {\n    if (circleArrayCache[radius] !== undefined) {\n        return circleArrayCache[radius];\n    }\n    var arraySize = radius * 2 + 1;\n    var arr = new Array(arraySize);\n    for (var i = 0; i < arraySize; i++) {\n        arr[i] = new Array(arraySize);\n    }\n    var x = radius;\n    var y = 0;\n    var error = 0;\n    while (x >= y) {\n        fillCircleArrayRowToMiddle(arr, radius + x, radius + y);\n        fillCircleArrayRowToMiddle(arr, radius + y, radius + x);\n        fillCircleArrayRowToMiddle(arr, radius - y, radius + x);\n        fillCircleArrayRowToMiddle(arr, radius - x, radius + y);\n        fillCircleArrayRowToMiddle(arr, radius - x, radius - y);\n        fillCircleArrayRowToMiddle(arr, radius - y, radius - x);\n        fillCircleArrayRowToMiddle(arr, radius + y, radius - x);\n        fillCircleArrayRowToMiddle(arr, radius + x, radius - y);\n        y++;\n        error += 1 + 2 * y;\n        if (2 * (error - x) + 1 > 0) {\n            x -= 1;\n            error += 1 - 2 * x;\n        }\n    }\n    circleArrayCache[radius] = arr;\n    return arr;\n}\n/**\n * @param {!Object<string, Array<*>>} declutterReplays Declutter replays.\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} opacity Opacity.\n * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n * @param {Array<import(\"../../PluggableMap.js\").DeclutterItems>} declutterItems Declutter items.\n */\nexport function replayDeclutter(declutterReplays, context, rotation, opacity, snapToPixel, declutterItems) {\n    var zs = Object.keys(declutterReplays).map(Number).sort(numberSafeCompareFunction);\n    for (var z = 0, zz = zs.length; z < zz; ++z) {\n        var executorData = declutterReplays[zs[z].toString()];\n        var currentExecutor = void 0;\n        for (var i = 0, ii = executorData.length; i < ii;) {\n            var executor = executorData[i++];\n            if (executor !== currentExecutor) {\n                currentExecutor = executor;\n                declutterItems.push({\n                    items: executor.declutterItems,\n                    opacity: opacity\n                });\n            }\n            var transform = executorData[i++];\n            executor.execute(context, transform, rotation, snapToPixel);\n        }\n    }\n}\nexport default ExecutorGroup;\n//# sourceMappingURL=ExecutorGroup.js.map","/**\n * @module ol/render/Event\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Event from '../events/Event.js';\nvar RenderEvent = /** @class */ (function (_super) {\n    __extends(RenderEvent, _super);\n    /**\n     * @param {import(\"./EventType.js\").default} type Type.\n     * @param {import(\"../transform.js\").Transform=} opt_inversePixelTransform Transform for\n     *     CSS pixels to rendered pixels.\n     * @param {import(\"../PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     * @param {?CanvasRenderingContext2D=} opt_context Context.\n     */\n    function RenderEvent(type, opt_inversePixelTransform, opt_frameState, opt_context) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n         * to rendered pixels on this event's `context`.\n         * @type {import(\"../transform.js\").Transform|undefined}\n         * @api\n         */\n        _this.inversePixelTransform = opt_inversePixelTransform;\n        /**\n         * An object representing the current render frame state.\n         * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n         * @api\n         */\n        _this.frameState = opt_frameState;\n        /**\n         * Canvas context. Only available when a Canvas renderer is used, null\n         * otherwise.\n         * @type {CanvasRenderingContext2D|null|undefined}\n         * @api\n         */\n        _this.context = opt_context;\n        return _this;\n    }\n    return RenderEvent;\n}(Event));\nexport default RenderEvent;\n//# sourceMappingURL=Event.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Layer\n */\nimport { abstract } from '../util.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport EventType from '../events/EventType.js';\nimport SourceState from '../source/State.js';\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nvar LayerRenderer = /** @class */ (function (_super) {\n    __extends(LayerRenderer, _super);\n    /**\n     * @param {LayerType} layer Layer.\n     */\n    function LayerRenderer(layer) {\n        var _this = _super.call(this) || this;\n        /** @private */\n        _this.boundHandleImageChange_ = _this.handleImageChange_.bind(_this);\n        /**\n         * @private\n         * @type {LayerType}\n         */\n        _this.layer_ = layer;\n        return _this;\n    }\n    /**\n     * Determine whether render should be called.\n     * @abstract\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {boolean} Layer is ready to be rendered.\n     */\n    LayerRenderer.prototype.prepareFrame = function (frameState) {\n        return abstract();\n    };\n    /**\n     * Render the layer.\n     * @abstract\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target that may be used to render content to.\n     * @return {HTMLElement} The rendered element.\n     */\n    LayerRenderer.prototype.renderFrame = function (frameState, target) {\n        return abstract();\n    };\n    /**\n     * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n     * @param {number} zoom Zoom level.\n     * @param {import(\"../Tile.js\").default} tile Tile.\n     */\n    LayerRenderer.prototype.loadedTileCallback = function (tiles, zoom, tile) {\n        if (!tiles[zoom]) {\n            tiles[zoom] = {};\n        }\n        tiles[zoom][tile.tileCoord.toString()] = tile;\n    };\n    /**\n     * Create a function that adds loaded tiles to the tile lookup.\n     * @param {import(\"../source/Tile.js\").default} source Tile source.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n     * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n     * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n     *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n     * @protected\n     */\n    LayerRenderer.prototype.createLoadedTileFinder = function (source, projection, tiles) {\n        return (\n        /**\n         * @param {number} zoom Zoom level.\n         * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n         * @return {boolean} The tile range is fully loaded.\n         * @this {LayerRenderer}\n         */\n        function (zoom, tileRange) {\n            var callback = this.loadedTileCallback.bind(this, tiles, zoom);\n            return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n        }).bind(this);\n    };\n    /**\n     * @abstract\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default): T} callback Feature callback.\n     * @param {Array<import(\"../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n     * @return {T|void} Callback result.\n     * @template T\n     */\n    LayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, declutteredFeatures) { };\n    /**\n     * @abstract\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n     *    location, null will be returned.  If there is data, but pixel values cannot be\n     *    returned, and empty array will be returned.\n     */\n    LayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\n        return abstract();\n    };\n    /**\n     * @return {LayerType} Layer.\n     */\n    LayerRenderer.prototype.getLayer = function () {\n        return this.layer_;\n    };\n    /**\n     * Perform action necessary to get the layer rendered after new fonts have loaded\n     * @abstract\n     */\n    LayerRenderer.prototype.handleFontsChanged = function () { };\n    /**\n     * Handle changes in image state.\n     * @param {import(\"../events/Event.js\").default} event Image change event.\n     * @private\n     */\n    LayerRenderer.prototype.handleImageChange_ = function (event) {\n        var image = /** @type {import(\"../Image.js\").default} */ (event.target);\n        if (image.getState() === ImageState.LOADED) {\n            this.renderIfReadyAndVisible();\n        }\n    };\n    /**\n     * Load the image if not already loaded, and register the image change\n     * listener if needed.\n     * @param {import(\"../ImageBase.js\").default} image Image.\n     * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n     * @protected\n     */\n    LayerRenderer.prototype.loadImage = function (image) {\n        var imageState = image.getState();\n        if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n            image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n        }\n        if (imageState == ImageState.IDLE) {\n            image.load();\n            imageState = image.getState();\n        }\n        return imageState == ImageState.LOADED;\n    };\n    /**\n     * @protected\n     */\n    LayerRenderer.prototype.renderIfReadyAndVisible = function () {\n        var layer = this.getLayer();\n        if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n            layer.changed();\n        }\n    };\n    return LayerRenderer;\n}(Observable));\nexport default LayerRenderer;\n//# sourceMappingURL=Layer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/Layer\n */\nimport { getBottomLeft, getBottomRight, getTopLeft, getTopRight } from '../../extent.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport { rotateAtOffset } from '../../render/canvas.js';\nimport LayerRenderer from '../Layer.js';\nimport { create as createTransform, apply as applyTransform, compose as composeTransform, toString as transformToString } from '../../transform.js';\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n */\nvar CanvasLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasLayerRenderer, _super);\n    /**\n     * @param {LayerType} layer Layer.\n     */\n    function CanvasLayerRenderer(layer) {\n        var _this = _super.call(this, layer) || this;\n        /**\n         * @protected\n         * @type {HTMLElement}\n         */\n        _this.container = null;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.renderedResolution;\n        /**\n         * A temporary transform.  The values in this transform should only be used in a\n         * function that sets the values.\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.tempTransform_ = createTransform();\n        /**\n         * The transform for rendered pixels to viewport CSS pixels.  This transform must\n         * be set when rendering a frame and may be used by other functions after rendering.\n         * @protected\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.pixelTransform = createTransform();\n        /**\n         * The transform for viewport CSS pixels to rendered pixels.  This transform must\n         * be set when rendering a frame and may be used by other functions after rendering.\n         * @protected\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.inversePixelTransform = createTransform();\n        /**\n         * @protected\n         * @type {CanvasRenderingContext2D}\n         */\n        _this.context = null;\n        /**\n         * @type {boolean}\n         */\n        _this.containerReused = false;\n        return _this;\n    }\n    /**\n     * Get a rendering container from an existing target, if compatible.\n     * @param {HTMLElement} target Potential render target.\n     * @param {import(\"../../transform\").Transform} transform Transform.\n     * @param {number} opacity Opacity.\n     */\n    CanvasLayerRenderer.prototype.useContainer = function (target, transform, opacity) {\n        var layerClassName = this.getLayer().getClassName();\n        var container, context;\n        if (target && target.style.opacity === '' && target.className === layerClassName) {\n            var canvas = target.firstElementChild;\n            if (canvas instanceof HTMLCanvasElement) {\n                context = canvas.getContext('2d');\n            }\n        }\n        if (context && context.canvas.style.transform === transformToString(transform)) {\n            // Container of the previous layer renderer can be used.\n            this.container = target;\n            this.context = context;\n            this.containerReused = true;\n        }\n        else if (this.containerReused) {\n            // Previously reused container cannot be used any more.\n            this.container = null;\n            this.context = null;\n            this.containerReused = false;\n        }\n        if (!this.container) {\n            container = document.createElement('div');\n            container.className = layerClassName;\n            var style = container.style;\n            style.position = 'absolute';\n            style.width = '100%';\n            style.height = '100%';\n            context = createCanvasContext2D();\n            var canvas = context.canvas;\n            container.appendChild(canvas);\n            style = canvas.style;\n            style.position = 'absolute';\n            style.transformOrigin = 'top left';\n            this.container = container;\n            this.context = context;\n        }\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.clip = function (context, frameState, extent) {\n        var pixelRatio = frameState.pixelRatio;\n        var halfWidth = (frameState.size[0] * pixelRatio) / 2;\n        var halfHeight = (frameState.size[1] * pixelRatio) / 2;\n        var rotation = frameState.viewState.rotation;\n        var topLeft = getTopLeft(extent);\n        var topRight = getTopRight(extent);\n        var bottomRight = getBottomRight(extent);\n        var bottomLeft = getBottomLeft(extent);\n        applyTransform(frameState.coordinateToPixelTransform, topLeft);\n        applyTransform(frameState.coordinateToPixelTransform, topRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n        context.save();\n        rotateAtOffset(context, -rotation, halfWidth, halfHeight);\n        context.beginPath();\n        context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\n        context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\n        context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\n        context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\n        context.clip();\n        rotateAtOffset(context, rotation, halfWidth, halfHeight);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.clipUnrotated = function (context, frameState, extent) {\n        var topLeft = getTopLeft(extent);\n        var topRight = getTopRight(extent);\n        var bottomRight = getBottomRight(extent);\n        var bottomLeft = getBottomLeft(extent);\n        applyTransform(frameState.coordinateToPixelTransform, topLeft);\n        applyTransform(frameState.coordinateToPixelTransform, topRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n        var inverted = this.inversePixelTransform;\n        applyTransform(inverted, topLeft);\n        applyTransform(inverted, topRight);\n        applyTransform(inverted, bottomRight);\n        applyTransform(inverted, bottomLeft);\n        context.save();\n        context.beginPath();\n        context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n        context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n        context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n        context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n        context.clip();\n    };\n    /**\n     * @param {import(\"../../render/EventType.js\").default} type Event type.\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @private\n     */\n    CanvasLayerRenderer.prototype.dispatchRenderEvent_ = function (type, context, frameState) {\n        var layer = this.getLayer();\n        if (layer.hasListener(type)) {\n            var event_1 = new RenderEvent(type, this.inversePixelTransform, frameState, context);\n            layer.dispatchEvent(event_1);\n        }\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.preRender = function (context, frameState) {\n        this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.postRender = function (context, frameState) {\n        this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n    };\n    /**\n     * Creates a transform for rendering to an element that will be rotated after rendering.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} width Width of the rendered element (in pixels).\n     * @param {number} height Height of the rendered element (in pixels).\n     * @param {number} offsetX Offset on the x-axis in view coordinates.\n     * @protected\n     * @return {!import(\"../../transform.js\").Transform} Transform.\n     */\n    CanvasLayerRenderer.prototype.getRenderTransform = function (frameState, width, height, offsetX) {\n        var viewState = frameState.viewState;\n        var pixelRatio = frameState.pixelRatio;\n        var dx1 = width / 2;\n        var dy1 = height / 2;\n        var sx = pixelRatio / viewState.resolution;\n        var sy = -sx;\n        var dx2 = -viewState.center[0] + offsetX;\n        var dy2 = -viewState.center[1];\n        return composeTransform(this.tempTransform_, dx1, dy1, sx, sy, -viewState.rotation, dx2, dy2);\n    };\n    /**\n     * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n     *    location, null will be returned.  If there is data, but pixel values cannot be\n     *    returned, and empty array will be returned.\n     */\n    CanvasLayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\n        var renderPixel = applyTransform(this.inversePixelTransform, pixel.slice());\n        var context = this.context;\n        var data;\n        try {\n            data = context.getImageData(Math.round(renderPixel[0]), Math.round(renderPixel[1]), 1, 1).data;\n        }\n        catch (err) {\n            if (err.name === 'SecurityError') {\n                // tainted canvas, we assume there is data at the given pixel (although there might not be)\n                return new Uint8Array();\n            }\n            return data;\n        }\n        if (data[3] === 0) {\n            return null;\n        }\n        return data;\n    };\n    return CanvasLayerRenderer;\n}(LayerRenderer));\nexport default CanvasLayerRenderer;\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/renderer/vector\n */\nimport { getUid } from '../util.js';\nimport ImageState from '../ImageState.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport BuilderType from '../render/canvas/BuilderType.js';\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nvar SIMPLIFY_TOLERANCE = 0.5;\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nvar GEOMETRY_RENDERERS = {\n    'Point': renderPointGeometry,\n    'LineString': renderLineStringGeometry,\n    'Polygon': renderPolygonGeometry,\n    'MultiPoint': renderMultiPointGeometry,\n    'MultiLineString': renderMultiLineStringGeometry,\n    'MultiPolygon': renderMultiPolygonGeometry,\n    'GeometryCollection': renderGeometryCollectionGeometry,\n    'Circle': renderCircleGeometry\n};\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n    return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n    var tolerance = getTolerance(resolution, pixelRatio);\n    return tolerance * tolerance;\n}\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n    return SIMPLIFY_TOLERANCE * resolution / pixelRatio;\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderCircleGeometry(builderGroup, geometry, style, feature) {\n    var fillStyle = style.getFill();\n    var strokeStyle = style.getStroke();\n    if (fillStyle || strokeStyle) {\n        var circleReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.CIRCLE);\n        circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n        circleReplay.drawCircle(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n * @return {boolean} `true` if style is loading.\n * @template T\n */\nexport function renderFeature(replayGroup, feature, style, squaredTolerance, listener, opt_transform) {\n    var loading = false;\n    var imageStyle = style.getImage();\n    if (imageStyle) {\n        var imageState = imageStyle.getImageState();\n        if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n            imageStyle.unlistenImageChange(listener);\n        }\n        else {\n            if (imageState == ImageState.IDLE) {\n                imageStyle.load();\n            }\n            imageState = imageStyle.getImageState();\n            imageStyle.listenImageChange(listener);\n            loading = true;\n        }\n    }\n    renderFeatureInternal(replayGroup, feature, style, squaredTolerance, opt_transform);\n    return loading;\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n */\nfunction renderFeatureInternal(replayGroup, feature, style, squaredTolerance, opt_transform) {\n    var geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n        return;\n    }\n    var simplifiedGeometry = geometry.simplifyTransformed(squaredTolerance, opt_transform);\n    var renderer = style.getRenderer();\n    if (renderer) {\n        renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n    }\n    else {\n        var geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n        geometryRenderer(replayGroup, simplifiedGeometry, style, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n    if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n        var geometries = /** @type {import(\"../geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            renderGeometry(replayGroup, geometries[i], style, feature);\n        }\n        return;\n    }\n    var replay = replayGroup.getBuilder(style.getZIndex(), BuilderType.DEFAULT);\n    replay.drawCustom(/** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry), feature, style.getRenderer());\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderGeometryCollectionGeometry(replayGroup, geometry, style, feature) {\n    var geometries = geometry.getGeometriesArray();\n    var i, ii;\n    for (i = 0, ii = geometries.length; i < ii; ++i) {\n        var geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n        geometryRenderer(replayGroup, geometries[i], style, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderLineStringGeometry(builderGroup, geometry, style, feature) {\n    var strokeStyle = style.getStroke();\n    if (strokeStyle) {\n        var lineStringReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.LINE_STRING);\n        lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n        lineStringReplay.drawLineString(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderMultiLineStringGeometry(builderGroup, geometry, style, feature) {\n    var strokeStyle = style.getStroke();\n    if (strokeStyle) {\n        var lineStringReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.LINE_STRING);\n        lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n        lineStringReplay.drawMultiLineString(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderMultiPolygonGeometry(builderGroup, geometry, style, feature) {\n    var fillStyle = style.getFill();\n    var strokeStyle = style.getStroke();\n    if (strokeStyle || fillStyle) {\n        var polygonReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.POLYGON);\n        polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n        polygonReplay.drawMultiPolygon(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderPointGeometry(builderGroup, geometry, style, feature) {\n    var imageStyle = style.getImage();\n    if (imageStyle) {\n        if (imageStyle.getImageState() != ImageState.LOADED) {\n            return;\n        }\n        var imageReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.IMAGE);\n        imageReplay.setImageStyle(imageStyle, builderGroup.addDeclutter(false));\n        imageReplay.drawPoint(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(!!imageStyle));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderMultiPointGeometry(builderGroup, geometry, style, feature) {\n    var imageStyle = style.getImage();\n    if (imageStyle) {\n        if (imageStyle.getImageState() != ImageState.LOADED) {\n            return;\n        }\n        var imageReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.IMAGE);\n        imageReplay.setImageStyle(imageStyle, builderGroup.addDeclutter(false));\n        imageReplay.drawMultiPoint(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(!!imageStyle));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderPolygonGeometry(builderGroup, geometry, style, feature) {\n    var fillStyle = style.getFill();\n    var strokeStyle = style.getStroke();\n    if (fillStyle || strokeStyle) {\n        var polygonReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.POLYGON);\n        polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n        polygonReplay.drawPolygon(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n        textReplay.drawText(geometry, feature);\n    }\n}\n//# sourceMappingURL=vector.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport { getUid } from '../../util.js';\nimport ViewHint from '../../ViewHint.js';\nimport { buffer, createEmpty, containsExtent, getWidth, intersects as intersectsExtent } from '../../extent.js';\nimport { fromUserExtent, toUserExtent, getUserProjection, getTransformFromProjections } from '../../proj.js';\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport ExecutorGroup, { replayDeclutter } from '../../render/canvas/ExecutorGroup.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport { defaultOrder as defaultRenderOrder, getTolerance as getRenderTolerance, getSquaredTolerance as getSquaredRenderTolerance, renderFeature } from '../vector.js';\nimport { toString as transformToString, makeScale, makeInverse } from '../../transform.js';\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nvar CanvasVectorLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasVectorLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Vector.js\").default} vectorLayer Vector layer.\n     */\n    function CanvasVectorLayerRenderer(vectorLayer) {\n        var _this = _super.call(this, vectorLayer) || this;\n        /** @private */\n        _this.boundHandleStyleImageChange_ = _this.handleStyleImageChange_.bind(_this);\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.dirty_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedResolution_ = NaN;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.renderedExtent_ = createEmpty();\n        /**\n         * @private\n         * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n         */\n        _this.renderedRenderOrder_ = null;\n        /**\n         * @private\n         * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n         */\n        _this.replayGroup_ = null;\n        /**\n         * A new replay group had to be created by `prepareFrame()`\n         * @type {boolean}\n         */\n        _this.replayGroupChanged = true;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorLayerRenderer.prototype.useContainer = function (target, transform, opacity) {\n        if (opacity < 1) {\n            target = null;\n        }\n        _super.prototype.useContainer.call(this, target, transform, opacity);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorLayerRenderer.prototype.renderFrame = function (frameState, target) {\n        var pixelRatio = frameState.pixelRatio;\n        var layerState = frameState.layerStatesArray[frameState.layerIndex];\n        // set forward and inverse pixel transforms\n        makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n        makeInverse(this.inversePixelTransform, this.pixelTransform);\n        this.useContainer(target, this.pixelTransform, layerState.opacity);\n        var context = this.context;\n        var canvas = context.canvas;\n        var replayGroup = this.replayGroup_;\n        if (!replayGroup || replayGroup.isEmpty()) {\n            if (!this.containerReused && canvas.width > 0) {\n                canvas.width = 0;\n            }\n            return this.container;\n        }\n        // resize and clear\n        var width = Math.round(frameState.size[0] * pixelRatio);\n        var height = Math.round(frameState.size[1] * pixelRatio);\n        if (canvas.width != width || canvas.height != height) {\n            canvas.width = width;\n            canvas.height = height;\n            var canvasTransform = transformToString(this.pixelTransform);\n            if (canvas.style.transform !== canvasTransform) {\n                canvas.style.transform = canvasTransform;\n            }\n        }\n        else if (!this.containerReused) {\n            context.clearRect(0, 0, width, height);\n        }\n        this.preRender(context, frameState);\n        var extent = frameState.extent;\n        var viewState = frameState.viewState;\n        var projection = viewState.projection;\n        var rotation = viewState.rotation;\n        var projectionExtent = projection.getExtent();\n        var vectorSource = this.getLayer().getSource();\n        // clipped rendering if layer extent is set\n        var clipped = false;\n        if (layerState.extent) {\n            var layerExtent = fromUserExtent(layerState.extent, projection);\n            clipped = !containsExtent(layerExtent, frameState.extent) && intersectsExtent(layerExtent, frameState.extent);\n            if (clipped) {\n                this.clip(context, frameState, layerExtent);\n            }\n        }\n        var viewHints = frameState.viewHints;\n        var snapToPixel = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n        var transform = this.getRenderTransform(frameState, width, height, 0);\n        var declutterReplays = this.getLayer().getDeclutter() ? {} : null;\n        replayGroup.execute(context, transform, rotation, snapToPixel, undefined, declutterReplays);\n        if (vectorSource.getWrapX() && projection.canWrapX() && !containsExtent(projectionExtent, extent)) {\n            var startX = extent[0];\n            var worldWidth = getWidth(projectionExtent);\n            var world = 0;\n            var offsetX = void 0;\n            while (startX < projectionExtent[0]) {\n                --world;\n                offsetX = worldWidth * world;\n                var transform_1 = this.getRenderTransform(frameState, width, height, offsetX);\n                replayGroup.execute(context, transform_1, rotation, snapToPixel, undefined, declutterReplays);\n                startX += worldWidth;\n            }\n            world = 0;\n            startX = extent[2];\n            while (startX > projectionExtent[2]) {\n                ++world;\n                offsetX = worldWidth * world;\n                var transform_2 = this.getRenderTransform(frameState, width, height, offsetX);\n                replayGroup.execute(context, transform_2, rotation, snapToPixel, undefined, declutterReplays);\n                startX -= worldWidth;\n            }\n        }\n        if (declutterReplays) {\n            var viewHints_1 = frameState.viewHints;\n            var hifi = !(viewHints_1[ViewHint.ANIMATING] || viewHints_1[ViewHint.INTERACTING]);\n            replayDeclutter(declutterReplays, context, rotation, 1, hifi, frameState.declutterItems);\n        }\n        if (clipped) {\n            context.restore();\n        }\n        this.postRender(context, frameState);\n        var opacity = layerState.opacity;\n        var container = this.container;\n        if (opacity !== parseFloat(container.style.opacity)) {\n            container.style.opacity = opacity === 1 ? '' : opacity;\n        }\n        return this.container;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorLayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, declutteredFeatures) {\n        if (!this.replayGroup_) {\n            return undefined;\n        }\n        else {\n            var resolution = frameState.viewState.resolution;\n            var rotation = frameState.viewState.rotation;\n            var layer_1 = this.getLayer();\n            /** @type {!Object<string, boolean>} */\n            var features_1 = {};\n            var result = this.replayGroup_.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, \n            /**\n             * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n             * @return {?} Callback result.\n             */\n            function (feature) {\n                var key = getUid(feature);\n                if (!(key in features_1)) {\n                    features_1[key] = true;\n                    return callback(feature, layer_1);\n                }\n            }, layer_1.getDeclutter() ? declutteredFeatures : null);\n            return result;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorLayerRenderer.prototype.handleFontsChanged = function () {\n        var layer = this.getLayer();\n        if (layer.getVisible() && this.replayGroup_) {\n            layer.changed();\n        }\n    };\n    /**\n     * Handle changes in image style state.\n     * @param {import(\"../../events/Event.js\").default} event Image style change event.\n     * @private\n     */\n    CanvasVectorLayerRenderer.prototype.handleStyleImageChange_ = function (event) {\n        this.renderIfReadyAndVisible();\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorLayerRenderer.prototype.prepareFrame = function (frameState) {\n        var vectorLayer = this.getLayer();\n        var vectorSource = vectorLayer.getSource();\n        var animating = frameState.viewHints[ViewHint.ANIMATING];\n        var interacting = frameState.viewHints[ViewHint.INTERACTING];\n        var updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n        var updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n        if (!this.dirty_ && (!updateWhileAnimating && animating) ||\n            (!updateWhileInteracting && interacting)) {\n            return true;\n        }\n        var frameStateExtent = frameState.extent;\n        var viewState = frameState.viewState;\n        var projection = viewState.projection;\n        var resolution = viewState.resolution;\n        var pixelRatio = frameState.pixelRatio;\n        var vectorLayerRevision = vectorLayer.getRevision();\n        var vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n        var vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n        if (vectorLayerRenderOrder === undefined) {\n            vectorLayerRenderOrder = defaultRenderOrder;\n        }\n        var extent = buffer(frameStateExtent, vectorLayerRenderBuffer * resolution);\n        var projectionExtent = viewState.projection.getExtent();\n        if (vectorSource.getWrapX() && viewState.projection.canWrapX() &&\n            !containsExtent(projectionExtent, frameState.extent)) {\n            // For the replay group, we need an extent that intersects the real world\n            // (-180° to +180°). To support geometries in a coordinate range from -540°\n            // to +540°, we add at least 1 world width on each side of the projection\n            // extent. If the viewport is wider than the world, we need to add half of\n            // the viewport width to make sure we cover the whole viewport.\n            var worldWidth = getWidth(projectionExtent);\n            var gutter = Math.max(getWidth(extent) / 2, worldWidth);\n            extent[0] = projectionExtent[0] - gutter;\n            extent[2] = projectionExtent[2] + gutter;\n        }\n        if (!this.dirty_ &&\n            this.renderedResolution_ == resolution &&\n            this.renderedRevision_ == vectorLayerRevision &&\n            this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n            containsExtent(this.renderedExtent_, extent)) {\n            this.replayGroupChanged = false;\n            return true;\n        }\n        if (this.replayGroup_) {\n            this.replayGroup_.dispose();\n        }\n        this.replayGroup_ = null;\n        this.dirty_ = false;\n        var replayGroup = new CanvasBuilderGroup(getRenderTolerance(resolution, pixelRatio), extent, resolution, pixelRatio, vectorLayer.getDeclutter());\n        var userProjection = getUserProjection();\n        var userTransform;\n        if (userProjection) {\n            vectorSource.loadFeatures(toUserExtent(extent, projection), resolution, userProjection);\n            userTransform = getTransformFromProjections(userProjection, projection);\n        }\n        else {\n            vectorSource.loadFeatures(extent, resolution, projection);\n        }\n        var squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n        /**\n         * @param {import(\"../../Feature.js\").default} feature Feature.\n         * @this {CanvasVectorLayerRenderer}\n         */\n        var render = function (feature) {\n            var styles;\n            var styleFunction = feature.getStyleFunction() || vectorLayer.getStyleFunction();\n            if (styleFunction) {\n                styles = styleFunction(feature, resolution);\n            }\n            if (styles) {\n                var dirty = this.renderFeature(feature, squaredTolerance, styles, replayGroup, userTransform);\n                this.dirty_ = this.dirty_ || dirty;\n            }\n        }.bind(this);\n        var userExtent = toUserExtent(extent, projection);\n        if (vectorLayerRenderOrder) {\n            /** @type {Array<import(\"../../Feature.js\").default>} */\n            var features_2 = [];\n            vectorSource.forEachFeatureInExtent(userExtent, \n            /**\n             * @param {import(\"../../Feature.js\").default} feature Feature.\n             */\n            function (feature) {\n                features_2.push(feature);\n            });\n            features_2.sort(vectorLayerRenderOrder);\n            for (var i = 0, ii = features_2.length; i < ii; ++i) {\n                render(features_2[i]);\n            }\n        }\n        else {\n            vectorSource.forEachFeatureInExtent(userExtent, render);\n        }\n        var replayGroupInstructions = replayGroup.finish();\n        var executorGroup = new ExecutorGroup(extent, resolution, pixelRatio, vectorSource.getOverlaps(), replayGroupInstructions, vectorLayer.getRenderBuffer());\n        this.renderedResolution_ = resolution;\n        this.renderedRevision_ = vectorLayerRevision;\n        this.renderedRenderOrder_ = vectorLayerRenderOrder;\n        this.renderedExtent_ = extent;\n        this.replayGroup_ = executorGroup;\n        this.replayGroupChanged = true;\n        return true;\n    };\n    /**\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     * @param {number} squaredTolerance Squared render tolerance.\n     * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n     * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n     * @param {import(\"../../proj.js\").TransformFunction} opt_transform Transform from user to view projection.\n     * @return {boolean} `true` if an image is loading.\n     */\n    CanvasVectorLayerRenderer.prototype.renderFeature = function (feature, squaredTolerance, styles, builderGroup, opt_transform) {\n        if (!styles) {\n            return false;\n        }\n        var loading = false;\n        if (Array.isArray(styles)) {\n            for (var i = 0, ii = styles.length; i < ii; ++i) {\n                loading = renderFeature(builderGroup, feature, styles[i], squaredTolerance, this.boundHandleStyleImageChange_, opt_transform) || loading;\n            }\n        }\n        else {\n            loading = renderFeature(builderGroup, feature, styles, squaredTolerance, this.boundHandleStyleImageChange_, opt_transform);\n        }\n        return loading;\n    };\n    return CanvasVectorLayerRenderer;\n}(CanvasLayerRenderer));\nexport default CanvasVectorLayerRenderer;\n//# sourceMappingURL=VectorLayer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @extends {BaseVectorLayer<import(\"../source/Vector.js\").default>}\n * @api\n */\nvar VectorLayer = /** @class */ (function (_super) {\n    __extends(VectorLayer, _super);\n    /**\n     * @param {import(\"./BaseVector.js\").Options=} opt_options Options.\n     */\n    function VectorLayer(opt_options) {\n        return _super.call(this, opt_options) || this;\n    }\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    VectorLayer.prototype.createRenderer = function () {\n        return new CanvasVectorLayerRenderer(this);\n    };\n    return VectorLayer;\n}(BaseVectorLayer));\nexport default VectorLayer;\n//# sourceMappingURL=Vector.js.map","/**\n * @module ol/format/FormatType\n */\n/**\n * @enum {string}\n */\nexport default {\n    ARRAY_BUFFER: 'arraybuffer',\n    JSON: 'json',\n    TEXT: 'text',\n    XML: 'xml'\n};\n//# sourceMappingURL=FormatType.js.map","/**\n * @module ol/featureloader\n */\nimport { VOID } from './functions.js';\nimport FormatType from './format/FormatType.js';\n/**\n *\n * @type {boolean}\n * @private\n */\nvar withCredentials = false;\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * load features.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area to be loaded,\n * a `{number}` representing the resolution (map units per pixel) and an\n * {@link module:ol/proj/Projection} for the projection  as\n * arguments. `this` within the function is bound to the\n * {@link module:ol/source/Vector} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default), import(\"./extent.js\").Extent, number,\n *                    import(\"./proj/Projection.js\").default): void} FeatureLoader\n * @api\n */\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {function(this:import(\"./VectorTile.js\").default, Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default, import(\"./extent.js\").Extent): void|function(this:import(\"./source/Vector\").default, Array<import(\"./Feature.js\").default>): void} success\n *     Function called with the loaded features and optionally with the data\n *     projection. Called with the vector tile or source as `this`.\n * @param {function(this:import(\"./VectorTile.js\").default): void|function(this:import(\"./source/Vector\").default): void} failure\n *     Function called when loading failed. Called with the vector tile or\n *     source as `this`.\n * @return {FeatureLoader} The feature loader.\n */\nexport function loadFeaturesXhr(url, format, success, failure) {\n    return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @this {import(\"./source/Vector\").default|import(\"./VectorTile.js\").default}\n     */\n    function (extent, resolution, projection) {\n        var xhr = new XMLHttpRequest();\n        xhr.open('GET', typeof url === 'function' ? url(extent, resolution, projection) : url, true);\n        if (format.getType() == FormatType.ARRAY_BUFFER) {\n            xhr.responseType = 'arraybuffer';\n        }\n        xhr.withCredentials = withCredentials;\n        /**\n         * @param {Event} event Event.\n         * @private\n         */\n        xhr.onload = function (event) {\n            // status will be 0 for file:// urls\n            if (!xhr.status || xhr.status >= 200 && xhr.status < 300) {\n                var type = format.getType();\n                /** @type {Document|Node|Object|string|undefined} */\n                var source = void 0;\n                if (type == FormatType.JSON || type == FormatType.TEXT) {\n                    source = xhr.responseText;\n                }\n                else if (type == FormatType.XML) {\n                    source = xhr.responseXML;\n                    if (!source) {\n                        source = new DOMParser().parseFromString(xhr.responseText, 'application/xml');\n                    }\n                }\n                else if (type == FormatType.ARRAY_BUFFER) {\n                    source = /** @type {ArrayBuffer} */ (xhr.response);\n                }\n                if (source) {\n                    success.call(this, format.readFeatures(source, {\n                        extent: extent,\n                        featureProjection: projection\n                    }), format.readProjection(source));\n                }\n                else {\n                    failure.call(this);\n                }\n            }\n            else {\n                failure.call(this);\n            }\n        }.bind(this);\n        /**\n         * @private\n         */\n        xhr.onerror = function () {\n            failure.call(this);\n        }.bind(this);\n        xhr.send();\n    });\n}\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n    return loadFeaturesXhr(url, format, \n    /**\n     * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n     * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n     * projection.\n     * @this {import(\"./source/Vector\").default|import(\"./VectorTile.js\").default}\n     */\n    function (features, dataProjection) {\n        var sourceOrTile = /** @type {?} */ (this);\n        if (typeof sourceOrTile.addFeatures === 'function') {\n            /** @type {import(\"./source/Vector\").default} */ (sourceOrTile).addFeatures(features);\n        }\n    }, /* FIXME handle error */ VOID);\n}\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n    withCredentials = xhrWithCredentials;\n}\n//# sourceMappingURL=featureloader.js.map","/**\n * @module ol/loadingstrategy\n */\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n    return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n    return [extent];\n}\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n    return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution) {\n        var z = tileGrid.getZForResolution(resolution);\n        var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n        /** @type {Array<import(\"./extent.js\").Extent>} */\n        var extents = [];\n        /** @type {import(\"./tilecoord.js\").TileCoord} */\n        var tileCoord = [z, 0, 0];\n        for (tileCoord[1] = tileRange.minX; tileCoord[1] <= tileRange.maxX; ++tileCoord[1]) {\n            for (tileCoord[2] = tileRange.minY; tileCoord[2] <= tileRange.maxY; ++tileCoord[2]) {\n                extents.push(tileGrid.getTileCoordExtent(tileCoord));\n            }\n        }\n        return extents;\n    });\n}\n//# sourceMappingURL=loadingstrategy.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Source\n */\nimport { abstract } from '../util.js';\nimport BaseObject from '../Object.js';\nimport { get as getProjection } from '../proj.js';\nimport SourceState from './State.js';\n/**\n * A function that returns a string or an array of strings representing source\n * attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {SourceState} [state='ready']\n * @property {boolean} [wrapX=false]\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nvar Source = /** @class */ (function (_super) {\n    __extends(Source, _super);\n    /**\n     * @param {Options} options Source options.\n     */\n    function Source(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        _this.projection_ = getProjection(options.projection);\n        /**\n         * @private\n         * @type {?Attribution}\n         */\n        _this.attributions_ = adaptAttributions(options.attributions);\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.attributionsCollapsible_ = options.attributionsCollapsible !== undefined ?\n            options.attributionsCollapsible : true;\n        /**\n         * This source is currently loading data. Sources that defer loading to the\n         * map's tile queue never set this to `true`.\n         * @type {boolean}\n         */\n        _this.loading = false;\n        /**\n         * @private\n         * @type {SourceState}\n         */\n        _this.state_ = options.state !== undefined ?\n            options.state : SourceState.READY;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n        return _this;\n    }\n    /**\n     * Get the attribution function for the source.\n     * @return {?Attribution} Attribution function.\n     */\n    Source.prototype.getAttributions = function () {\n        return this.attributions_;\n    };\n    /**\n     * @return {boolean} Attributions are collapsible.\n     */\n    Source.prototype.getAttributionsCollapsible = function () {\n        return this.attributionsCollapsible_;\n    };\n    /**\n     * Get the projection of the source.\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     * @api\n     */\n    Source.prototype.getProjection = function () {\n        return this.projection_;\n    };\n    /**\n     * @abstract\n     * @return {Array<number>|undefined} Resolutions.\n     */\n    Source.prototype.getResolutions = function () {\n        return abstract();\n    };\n    /**\n     * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n     * @return {SourceState} State.\n     * @api\n     */\n    Source.prototype.getState = function () {\n        return this.state_;\n    };\n    /**\n     * @return {boolean|undefined} Wrap X.\n     */\n    Source.prototype.getWrapX = function () {\n        return this.wrapX_;\n    };\n    /**\n     * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n     * @api\n     */\n    Source.prototype.refresh = function () {\n        this.changed();\n    };\n    /**\n     * Set the attributions of the source.\n     * @param {AttributionLike|undefined} attributions Attributions.\n     *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n     *     or `undefined`.\n     * @api\n     */\n    Source.prototype.setAttributions = function (attributions) {\n        this.attributions_ = adaptAttributions(attributions);\n        this.changed();\n    };\n    /**\n     * Set the state of the source.\n     * @param {SourceState} state State.\n     * @protected\n     */\n    Source.prototype.setState = function (state) {\n        this.state_ = state;\n        this.changed();\n    };\n    return Source;\n}(BaseObject));\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n    if (!attributionLike) {\n        return null;\n    }\n    if (Array.isArray(attributionLike)) {\n        return function (frameState) {\n            return attributionLike;\n        };\n    }\n    if (typeof attributionLike === 'function') {\n        return attributionLike;\n    }\n    return function (frameState) {\n        return [attributionLike];\n    };\n}\nexport default Source;\n//# sourceMappingURL=Source.js.map","/**\n * @module ol/source/VectorEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a feature is added to the source.\n     * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n     * @api\n     */\n    ADDFEATURE: 'addfeature',\n    /**\n     * Triggered when a feature is updated.\n     * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n     * @api\n     */\n    CHANGEFEATURE: 'changefeature',\n    /**\n     * Triggered when the clear method is called on the source.\n     * @event module:ol/source/Vector.VectorSourceEvent#clear\n     * @api\n     */\n    CLEAR: 'clear',\n    /**\n     * Triggered when a feature is removed from the source.\n     * See {@link module:ol/source/Vector#clear source.clear()} for exceptions.\n     * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n     * @api\n     */\n    REMOVEFEATURE: 'removefeature'\n};\n//# sourceMappingURL=VectorEventType.js.map","/**\n * @module ol/structs/RBush\n */\nimport { getUid } from '../util.js';\nimport RBush_ from 'rbush';\nimport { createOrUpdate, equals } from '../extent.js';\nimport { isEmpty } from '../obj.js';\n/**\n * @typedef {Object} Entry\n * @property {number} minX\n * @property {number} minY\n * @property {number} maxX\n * @property {number} maxY\n * @property {Object} [value]\n */\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nvar RBush = /** @class */ (function () {\n    /**\n     * @param {number=} opt_maxEntries Max entries.\n     */\n    function RBush(opt_maxEntries) {\n        /**\n         * @private\n         */\n        this.rbush_ = new RBush_(opt_maxEntries);\n        /**\n         * A mapping between the objects added to this rbush wrapper\n         * and the objects that are actually added to the internal rbush.\n         * @private\n         * @type {Object<string, Entry>}\n         */\n        this.items_ = {};\n    }\n    /**\n     * Insert a value into the RBush.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {T} value Value.\n     */\n    RBush.prototype.insert = function (extent, value) {\n        /** @type {Entry} */\n        var item = {\n            minX: extent[0],\n            minY: extent[1],\n            maxX: extent[2],\n            maxY: extent[3],\n            value: value\n        };\n        this.rbush_.insert(item);\n        this.items_[getUid(value)] = item;\n    };\n    /**\n     * Bulk-insert values into the RBush.\n     * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n     * @param {Array<T>} values Values.\n     */\n    RBush.prototype.load = function (extents, values) {\n        var items = new Array(values.length);\n        for (var i = 0, l = values.length; i < l; i++) {\n            var extent = extents[i];\n            var value = values[i];\n            /** @type {Entry} */\n            var item = {\n                minX: extent[0],\n                minY: extent[1],\n                maxX: extent[2],\n                maxY: extent[3],\n                value: value\n            };\n            items[i] = item;\n            this.items_[getUid(value)] = item;\n        }\n        this.rbush_.load(items);\n    };\n    /**\n     * Remove a value from the RBush.\n     * @param {T} value Value.\n     * @return {boolean} Removed.\n     */\n    RBush.prototype.remove = function (value) {\n        var uid = getUid(value);\n        // get the object in which the value was wrapped when adding to the\n        // internal rbush. then use that object to do the removal.\n        var item = this.items_[uid];\n        delete this.items_[uid];\n        return this.rbush_.remove(item) !== null;\n    };\n    /**\n     * Update the extent of a value in the RBush.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {T} value Value.\n     */\n    RBush.prototype.update = function (extent, value) {\n        var item = this.items_[getUid(value)];\n        var bbox = [item.minX, item.minY, item.maxX, item.maxY];\n        if (!equals(bbox, extent)) {\n            this.remove(value);\n            this.insert(extent, value);\n        }\n    };\n    /**\n     * Return all values in the RBush.\n     * @return {Array<T>} All.\n     */\n    RBush.prototype.getAll = function () {\n        var items = this.rbush_.all();\n        return items.map(function (item) {\n            return item.value;\n        });\n    };\n    /**\n     * Return all values in the given extent.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {Array<T>} All in extent.\n     */\n    RBush.prototype.getInExtent = function (extent) {\n        /** @type {Entry} */\n        var bbox = {\n            minX: extent[0],\n            minY: extent[1],\n            maxX: extent[2],\n            maxY: extent[3]\n        };\n        var items = this.rbush_.search(bbox);\n        return items.map(function (item) {\n            return item.value;\n        });\n    };\n    /**\n     * Calls a callback function with each value in the tree.\n     * If the callback returns a truthy value, this value is returned without\n     * checking the rest of the tree.\n     * @param {function(T): *} callback Callback.\n     * @return {*} Callback return value.\n     */\n    RBush.prototype.forEach = function (callback) {\n        return this.forEach_(this.getAll(), callback);\n    };\n    /**\n     * Calls a callback function with each value in the provided extent.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(T): *} callback Callback.\n     * @return {*} Callback return value.\n     */\n    RBush.prototype.forEachInExtent = function (extent, callback) {\n        return this.forEach_(this.getInExtent(extent), callback);\n    };\n    /**\n     * @param {Array<T>} values Values.\n     * @param {function(T): *} callback Callback.\n     * @private\n     * @return {*} Callback return value.\n     */\n    RBush.prototype.forEach_ = function (values, callback) {\n        var result;\n        for (var i = 0, l = values.length; i < l; i++) {\n            result = callback(values[i]);\n            if (result) {\n                return result;\n            }\n        }\n        return result;\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    RBush.prototype.isEmpty = function () {\n        return isEmpty(this.items_);\n    };\n    /**\n     * Remove all values from the RBush.\n     */\n    RBush.prototype.clear = function () {\n        this.rbush_.clear();\n        this.items_ = {};\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     */\n    RBush.prototype.getExtent = function (opt_extent) {\n        var data = this.rbush_.toJSON();\n        return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, opt_extent);\n    };\n    /**\n     * @param {RBush} rbush R-Tree.\n     */\n    RBush.prototype.concat = function (rbush) {\n        this.rbush_.load(rbush.rbush_.all());\n        for (var i in rbush.items_) {\n            this.items_[i] = rbush.items_[i];\n        }\n    };\n    return RBush;\n}());\nexport default RBush;\n//# sourceMappingURL=RBush.js.map","/**\n * @module ol/source/Vector\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { getUid } from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport { extend } from '../array.js';\nimport { assert } from '../asserts.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport { containsExtent, equals } from '../extent.js';\nimport { xhr } from '../featureloader.js';\nimport { TRUE, VOID } from '../functions.js';\nimport { all as allStrategy } from '../loadingstrategy.js';\nimport { isEmpty, getValues } from '../obj.js';\nimport Source from './Source.js';\nimport SourceState from './State.js';\nimport VectorEventType from './VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} Geometry\n */\nvar VectorSourceEvent = /** @class */ (function (_super) {\n    __extends(VectorSourceEvent, _super);\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../Feature.js\").default<Geometry>=} opt_feature Feature.\n     */\n    function VectorSourceEvent(type, opt_feature) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The feature being added or removed.\n         * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n         * @api\n         */\n        _this.feature = opt_feature;\n        return _this;\n    }\n    return VectorSourceEvent;\n}(Event));\nexport { VectorSourceEvent };\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default>|Collection<import(\"../Feature.js\").default>} [features]\n * Features. If provided as {@link module:ol/Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          vectorSource.addFeatures(\n *              vectorSource.getFormat().readFeatures(xhr.responseText));\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy~all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader~xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy~all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} Geometry\n */\nvar VectorSource = /** @class */ (function (_super) {\n    __extends(VectorSource, _super);\n    /**\n     * @param {Options=} opt_options Vector source options.\n     */\n    function VectorSource(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            projection: undefined,\n            state: SourceState.READY,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true\n        }) || this;\n        /**\n         * @private\n         * @type {import(\"../featureloader.js\").FeatureLoader}\n         */\n        _this.loader_ = VOID;\n        /**\n         * @private\n         * @type {import(\"../format/Feature.js\").default|undefined}\n         */\n        _this.format_ = options.format;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n        /**\n         * @private\n         * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n         */\n        _this.url_ = options.url;\n        if (options.loader !== undefined) {\n            _this.loader_ = options.loader;\n        }\n        else if (_this.url_ !== undefined) {\n            assert(_this.format_, 7); // `format` must be set when `url` is set\n            // create a XHR feature loader for \"url\" and \"format\"\n            _this.loader_ = xhr(_this.url_, /** @type {import(\"../format/Feature.js\").default} */ (_this.format_));\n        }\n        /**\n         * @private\n         * @type {LoadingStrategy}\n         */\n        _this.strategy_ = options.strategy !== undefined ? options.strategy : allStrategy;\n        var useSpatialIndex = options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n        /**\n         * @private\n         * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n        /**\n         * @private\n         * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n         */\n        _this.loadedExtentsRtree_ = new RBush();\n        /**\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.nullGeometryFeatures_ = {};\n        /**\n         * A lookup of features by id (the return from feature.getId()).\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.idIndex_ = {};\n        /**\n         * A lookup of features by uid (using getUid(feature)).\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.uidIndex_ = {};\n        /**\n         * @private\n         * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n         */\n        _this.featureChangeKeys_ = {};\n        /**\n         * @private\n         * @type {Collection<import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.featuresCollection_ = null;\n        var collection, features;\n        if (Array.isArray(options.features)) {\n            features = options.features;\n        }\n        else if (options.features) {\n            collection = options.features;\n            features = collection.getArray();\n        }\n        if (!useSpatialIndex && collection === undefined) {\n            collection = new Collection(features);\n        }\n        if (features !== undefined) {\n            _this.addFeaturesInternal(features);\n        }\n        if (collection !== undefined) {\n            _this.bindFeaturesCollection_(collection);\n        }\n        return _this;\n    }\n    /**\n     * Add a single feature to the source.  If you want to add a batch of features\n     * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n     * instead. A feature will not be added to the source if feature with\n     * the same id is already there. The reason for this behavior is to avoid\n     * feature duplication when using bbox or tile loading strategies.\n     * Note: this also applies if an {@link module:ol/Collection} is used for features,\n     * meaning that if a feature with a duplicate id is added in the collection, it will\n     * be removed from it right away.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n     * @api\n     */\n    VectorSource.prototype.addFeature = function (feature) {\n        this.addFeatureInternal(feature);\n        this.changed();\n    };\n    /**\n     * Add a feature without firing a `change` event.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n     * @protected\n     */\n    VectorSource.prototype.addFeatureInternal = function (feature) {\n        var featureKey = getUid(feature);\n        if (!this.addToIndex_(featureKey, feature)) {\n            if (this.featuresCollection_) {\n                this.featuresCollection_.remove(feature);\n            }\n            return;\n        }\n        this.setupChangeEvents_(featureKey, feature);\n        var geometry = feature.getGeometry();\n        if (geometry) {\n            var extent = geometry.getExtent();\n            if (this.featuresRtree_) {\n                this.featuresRtree_.insert(extent, feature);\n            }\n        }\n        else {\n            this.nullGeometryFeatures_[featureKey] = feature;\n        }\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, feature));\n    };\n    /**\n     * @param {string} featureKey Unique identifier for the feature.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n     * @private\n     */\n    VectorSource.prototype.setupChangeEvents_ = function (featureKey, feature) {\n        this.featureChangeKeys_[featureKey] = [\n            listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n            listen(feature, ObjectEventType.PROPERTYCHANGE, this.handleFeatureChange_, this)\n        ];\n    };\n    /**\n     * @param {string} featureKey Unique identifier for the feature.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n     * @return {boolean} The feature is \"valid\", in the sense that it is also a\n     *     candidate for insertion into the Rtree.\n     * @private\n     */\n    VectorSource.prototype.addToIndex_ = function (featureKey, feature) {\n        var valid = true;\n        var id = feature.getId();\n        if (id !== undefined) {\n            if (!(id.toString() in this.idIndex_)) {\n                this.idIndex_[id.toString()] = feature;\n            }\n            else {\n                valid = false;\n            }\n        }\n        if (valid) {\n            assert(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source\n            this.uidIndex_[featureKey] = feature;\n        }\n        return valid;\n    };\n    /**\n     * Add a batch of features to the source.\n     * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n     * @api\n     */\n    VectorSource.prototype.addFeatures = function (features) {\n        this.addFeaturesInternal(features);\n        this.changed();\n    };\n    /**\n     * Add features without firing a `change` event.\n     * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n     * @protected\n     */\n    VectorSource.prototype.addFeaturesInternal = function (features) {\n        var extents = [];\n        var newFeatures = [];\n        var geometryFeatures = [];\n        for (var i = 0, length_1 = features.length; i < length_1; i++) {\n            var feature = features[i];\n            var featureKey = getUid(feature);\n            if (this.addToIndex_(featureKey, feature)) {\n                newFeatures.push(feature);\n            }\n        }\n        for (var i = 0, length_2 = newFeatures.length; i < length_2; i++) {\n            var feature = newFeatures[i];\n            var featureKey = getUid(feature);\n            this.setupChangeEvents_(featureKey, feature);\n            var geometry = feature.getGeometry();\n            if (geometry) {\n                var extent = geometry.getExtent();\n                extents.push(extent);\n                geometryFeatures.push(feature);\n            }\n            else {\n                this.nullGeometryFeatures_[featureKey] = feature;\n            }\n        }\n        if (this.featuresRtree_) {\n            this.featuresRtree_.load(extents, geometryFeatures);\n        }\n        for (var i = 0, length_3 = newFeatures.length; i < length_3; i++) {\n            this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i]));\n        }\n    };\n    /**\n     * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n     * @private\n     */\n    VectorSource.prototype.bindFeaturesCollection_ = function (collection) {\n        var modifyingCollection = false;\n        this.addEventListener(VectorEventType.ADDFEATURE, \n        /**\n         * @param {VectorSourceEvent<Geometry>} evt The vector source event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                collection.push(evt.feature);\n                modifyingCollection = false;\n            }\n        });\n        this.addEventListener(VectorEventType.REMOVEFEATURE, \n        /**\n         * @param {VectorSourceEvent<Geometry>} evt The vector source event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                collection.remove(evt.feature);\n                modifyingCollection = false;\n            }\n        });\n        collection.addEventListener(CollectionEventType.ADD, \n        /**\n         * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                this.addFeature(/** @type {import(\"../Feature.js\").default<Geometry>} */ (evt.element));\n                modifyingCollection = false;\n            }\n        }.bind(this));\n        collection.addEventListener(CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                this.removeFeature(/** @type {import(\"../Feature.js\").default<Geometry>} */ (evt.element));\n                modifyingCollection = false;\n            }\n        }.bind(this));\n        this.featuresCollection_ = collection;\n    };\n    /**\n     * Remove all features from the source.\n     * @param {boolean=} opt_fast Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#removefeature} events.\n     * @api\n     */\n    VectorSource.prototype.clear = function (opt_fast) {\n        if (opt_fast) {\n            for (var featureId in this.featureChangeKeys_) {\n                var keys = this.featureChangeKeys_[featureId];\n                keys.forEach(unlistenByKey);\n            }\n            if (!this.featuresCollection_) {\n                this.featureChangeKeys_ = {};\n                this.idIndex_ = {};\n                this.uidIndex_ = {};\n            }\n        }\n        else {\n            if (this.featuresRtree_) {\n                this.featuresRtree_.forEach(this.removeFeatureInternal.bind(this));\n                for (var id in this.nullGeometryFeatures_) {\n                    this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n                }\n            }\n        }\n        if (this.featuresCollection_) {\n            this.featuresCollection_.clear();\n        }\n        if (this.featuresRtree_) {\n            this.featuresRtree_.clear();\n        }\n        this.nullGeometryFeatures_ = {};\n        var clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n        this.dispatchEvent(clearEvent);\n        this.changed();\n    };\n    /**\n     * Iterate through all features on the source, calling the provided callback\n     * with each one.  If the callback returns any \"truthy\" value, iteration will\n     * stop and the function will return the same value.\n     * Note: this function only iterate through the feature that have a defined geometry.\n     *\n     * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n     *     on the source.  Return a truthy value to stop iteration.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeature = function (callback) {\n        if (this.featuresRtree_) {\n            return this.featuresRtree_.forEach(callback);\n        }\n        else if (this.featuresCollection_) {\n            this.featuresCollection_.forEach(callback);\n        }\n    };\n    /**\n     * Iterate through all features whose geometries contain the provided\n     * coordinate, calling the callback with each feature.  If the callback returns\n     * a \"truthy\" value, iteration will stop and the function will return the same\n     * value.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n     *     whose goemetry contains the provided coordinate.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     */\n    VectorSource.prototype.forEachFeatureAtCoordinateDirect = function (coordinate, callback) {\n        var extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n        return this.forEachFeatureInExtent(extent, function (feature) {\n            var geometry = feature.getGeometry();\n            if (geometry.intersectsCoordinate(coordinate)) {\n                return callback(feature);\n            }\n            else {\n                return undefined;\n            }\n        });\n    };\n    /**\n     * Iterate through all features whose bounding box intersects the provided\n     * extent (note that the feature's geometry may not intersect the extent),\n     * calling the callback with each feature.  If the callback returns a \"truthy\"\n     * value, iteration will stop and the function will return the same value.\n     *\n     * If you are interested in features whose geometry intersects an extent, call\n     * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n     *\n     * When `useSpatialIndex` is set to false, this method will loop through all\n     * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n     *     whose bounding box intersects the provided extent.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeatureInExtent = function (extent, callback) {\n        if (this.featuresRtree_) {\n            return this.featuresRtree_.forEachInExtent(extent, callback);\n        }\n        else if (this.featuresCollection_) {\n            this.featuresCollection_.forEach(callback);\n        }\n    };\n    /**\n     * Iterate through all features whose geometry intersects the provided extent,\n     * calling the callback with each feature.  If the callback returns a \"truthy\"\n     * value, iteration will stop and the function will return the same value.\n     *\n     * If you only want to test for bounding box intersection, call the\n     * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n     *     whose geometry intersects the provided extent.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeatureIntersectingExtent = function (extent, callback) {\n        return this.forEachFeatureInExtent(extent, \n        /**\n         * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n         * @return {T|undefined} The return value from the last call to the callback.\n         */\n        function (feature) {\n            var geometry = feature.getGeometry();\n            if (geometry.intersectsExtent(extent)) {\n                var result = callback(feature);\n                if (result) {\n                    return result;\n                }\n            }\n        });\n    };\n    /**\n     * Get the features collection associated with this source. Will be `null`\n     * unless the source was configured with `useSpatialIndex` set to `false`, or\n     * with an {@link module:ol/Collection} as `features`.\n     * @return {Collection<import(\"../Feature.js\").default<Geometry>>} The collection of features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesCollection = function () {\n        return this.featuresCollection_;\n    };\n    /**\n     * Get all features on the source in random order.\n     * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeatures = function () {\n        var features;\n        if (this.featuresCollection_) {\n            features = this.featuresCollection_.getArray();\n        }\n        else if (this.featuresRtree_) {\n            features = this.featuresRtree_.getAll();\n            if (!isEmpty(this.nullGeometryFeatures_)) {\n                extend(features, getValues(this.nullGeometryFeatures_));\n            }\n        }\n        return (\n        /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (features));\n    };\n    /**\n     * Get all features whose geometry intersects the provided coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesAtCoordinate = function (coordinate) {\n        var features = [];\n        this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n            features.push(feature);\n        });\n        return features;\n    };\n    /**\n     * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n     * all features intersecting the given extent in random order (so it may include\n     * features whose geometries do not intersect the extent).\n     *\n     * This method is not available when the source is configured with\n     * `useSpatialIndex` set to `false`.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesInExtent = function (extent) {\n        return this.featuresRtree_.getInExtent(extent);\n    };\n    /**\n     * Get the closest feature to the provided coordinate.\n     *\n     * This method is not available when the source is configured with\n     * `useSpatialIndex` set to `false`.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {function(import(\"../Feature.js\").default<Geometry>):boolean=} opt_filter Feature filter function.\n     *     The filter function will receive one argument, the {@link module:ol/Feature feature}\n     *     and it should return a boolean value. By default, no filtering is made.\n     * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n     * @api\n     */\n    VectorSource.prototype.getClosestFeatureToCoordinate = function (coordinate, opt_filter) {\n        // Find the closest feature using branch and bound.  We start searching an\n        // infinite extent, and find the distance from the first feature found.  This\n        // becomes the closest feature.  We then compute a smaller extent which any\n        // closer feature must intersect.  We continue searching with this smaller\n        // extent, trying to find a closer feature.  Every time we find a closer\n        // feature, we update the extent being searched so that any even closer\n        // feature must intersect it.  We continue until we run out of features.\n        var x = coordinate[0];\n        var y = coordinate[1];\n        var closestFeature = null;\n        var closestPoint = [NaN, NaN];\n        var minSquaredDistance = Infinity;\n        var extent = [-Infinity, -Infinity, Infinity, Infinity];\n        var filter = opt_filter ? opt_filter : TRUE;\n        this.featuresRtree_.forEachInExtent(extent, \n        /**\n         * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n         */\n        function (feature) {\n            if (filter(feature)) {\n                var geometry = feature.getGeometry();\n                var previousMinSquaredDistance = minSquaredDistance;\n                minSquaredDistance = geometry.closestPointXY(x, y, closestPoint, minSquaredDistance);\n                if (minSquaredDistance < previousMinSquaredDistance) {\n                    closestFeature = feature;\n                    // This is sneaky.  Reduce the extent that it is currently being\n                    // searched while the R-Tree traversal using this same extent object\n                    // is still in progress.  This is safe because the new extent is\n                    // strictly contained by the old extent.\n                    var minDistance = Math.sqrt(minSquaredDistance);\n                    extent[0] = x - minDistance;\n                    extent[1] = y - minDistance;\n                    extent[2] = x + minDistance;\n                    extent[3] = y + minDistance;\n                }\n            }\n        });\n        return closestFeature;\n    };\n    /**\n     * Get the extent of the features currently in the source.\n     *\n     * This method is not available when the source is configured with\n     * `useSpatialIndex` set to `false`.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Destination extent. If provided, no new extent\n     *     will be created. Instead, that extent's coordinates will be overwritten.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    VectorSource.prototype.getExtent = function (opt_extent) {\n        return this.featuresRtree_.getExtent(opt_extent);\n    };\n    /**\n     * Get a feature by its identifier (the value returned by feature.getId()).\n     * Note that the index treats string and numeric identifiers as the same.  So\n     * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n     *\n     * @param {string|number} id Feature identifier.\n     * @return {import(\"../Feature.js\").default<Geometry>} The feature (or `null` if not found).\n     * @api\n     */\n    VectorSource.prototype.getFeatureById = function (id) {\n        var feature = this.idIndex_[id.toString()];\n        return feature !== undefined ? feature : null;\n    };\n    /**\n     * Get a feature by its internal unique identifier (using `getUid`).\n     *\n     * @param {string} uid Feature identifier.\n     * @return {import(\"../Feature.js\").default<Geometry>} The feature (or `null` if not found).\n     */\n    VectorSource.prototype.getFeatureByUid = function (uid) {\n        var feature = this.uidIndex_[uid];\n        return feature !== undefined ? feature : null;\n    };\n    /**\n     * Get the format associated with this source.\n     *\n     * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n     * @api\n     */\n    VectorSource.prototype.getFormat = function () {\n        return this.format_;\n    };\n    /**\n     * @return {boolean} The source can have overlapping geometries.\n     */\n    VectorSource.prototype.getOverlaps = function () {\n        return this.overlaps_;\n    };\n    /**\n     * Get the url associated with this source.\n     *\n     * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n     * @api\n     */\n    VectorSource.prototype.getUrl = function () {\n        return this.url_;\n    };\n    /**\n     * @param {Event} event Event.\n     * @private\n     */\n    VectorSource.prototype.handleFeatureChange_ = function (event) {\n        var feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (event.target);\n        var featureKey = getUid(feature);\n        var geometry = feature.getGeometry();\n        if (!geometry) {\n            if (!(featureKey in this.nullGeometryFeatures_)) {\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.remove(feature);\n                }\n                this.nullGeometryFeatures_[featureKey] = feature;\n            }\n        }\n        else {\n            var extent = geometry.getExtent();\n            if (featureKey in this.nullGeometryFeatures_) {\n                delete this.nullGeometryFeatures_[featureKey];\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.insert(extent, feature);\n                }\n            }\n            else {\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.update(extent, feature);\n                }\n            }\n        }\n        var id = feature.getId();\n        if (id !== undefined) {\n            var sid = id.toString();\n            if (this.idIndex_[sid] !== feature) {\n                this.removeFromIdIndex_(feature);\n                this.idIndex_[sid] = feature;\n            }\n        }\n        else {\n            this.removeFromIdIndex_(feature);\n            this.uidIndex_[featureKey] = feature;\n        }\n        this.changed();\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature));\n    };\n    /**\n     * Returns true if the feature is contained within the source.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n     * @return {boolean} Has feature.\n     * @api\n     */\n    VectorSource.prototype.hasFeature = function (feature) {\n        var id = feature.getId();\n        if (id !== undefined) {\n            return id in this.idIndex_;\n        }\n        else {\n            return getUid(feature) in this.uidIndex_;\n        }\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    VectorSource.prototype.isEmpty = function () {\n        return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    VectorSource.prototype.loadFeatures = function (extent, resolution, projection) {\n        var loadedExtentsRtree = this.loadedExtentsRtree_;\n        var extentsToLoad = this.strategy_(extent, resolution);\n        this.loading = false;\n        var _loop_1 = function (i, ii) {\n            var extentToLoad = extentsToLoad[i];\n            var alreadyLoaded = loadedExtentsRtree.forEachInExtent(extentToLoad, \n            /**\n             * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n             * @return {boolean} Contains.\n             */\n            function (object) {\n                return containsExtent(object.extent, extentToLoad);\n            });\n            if (!alreadyLoaded) {\n                this_1.loader_.call(this_1, extentToLoad, resolution, projection);\n                loadedExtentsRtree.insert(extentToLoad, { extent: extentToLoad.slice() });\n                this_1.loading = this_1.loader_ !== VOID;\n            }\n        };\n        var this_1 = this;\n        for (var i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n            _loop_1(i, ii);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    VectorSource.prototype.refresh = function () {\n        this.clear(true);\n        this.loadedExtentsRtree_.clear();\n        _super.prototype.refresh.call(this);\n    };\n    /**\n     * Remove an extent from the list of loaded extents.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    VectorSource.prototype.removeLoadedExtent = function (extent) {\n        var loadedExtentsRtree = this.loadedExtentsRtree_;\n        var obj;\n        loadedExtentsRtree.forEachInExtent(extent, function (object) {\n            if (equals(object.extent, extent)) {\n                obj = object;\n                return true;\n            }\n        });\n        if (obj) {\n            loadedExtentsRtree.remove(obj);\n        }\n    };\n    /**\n     * Remove a single feature from the source.  If you want to remove all features\n     * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n     * instead.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n     * @api\n     */\n    VectorSource.prototype.removeFeature = function (feature) {\n        var featureKey = getUid(feature);\n        if (featureKey in this.nullGeometryFeatures_) {\n            delete this.nullGeometryFeatures_[featureKey];\n        }\n        else {\n            if (this.featuresRtree_) {\n                this.featuresRtree_.remove(feature);\n            }\n        }\n        this.removeFeatureInternal(feature);\n        this.changed();\n    };\n    /**\n     * Remove feature without firing a `change` event.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n     * @protected\n     */\n    VectorSource.prototype.removeFeatureInternal = function (feature) {\n        var featureKey = getUid(feature);\n        this.featureChangeKeys_[featureKey].forEach(unlistenByKey);\n        delete this.featureChangeKeys_[featureKey];\n        var id = feature.getId();\n        if (id !== undefined) {\n            delete this.idIndex_[id.toString()];\n        }\n        delete this.uidIndex_[featureKey];\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature));\n    };\n    /**\n     * Remove a feature from the id index.  Called internally when the feature id\n     * may have changed.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n     * @return {boolean} Removed the feature from the index.\n     * @private\n     */\n    VectorSource.prototype.removeFromIdIndex_ = function (feature) {\n        var removed = false;\n        for (var id in this.idIndex_) {\n            if (this.idIndex_[id] === feature) {\n                delete this.idIndex_[id];\n                removed = true;\n                break;\n            }\n        }\n        return removed;\n    };\n    /**\n     * Set the new loader of the source. The next render cycle will use the\n     * new loader.\n     * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n     * @api\n     */\n    VectorSource.prototype.setLoader = function (loader) {\n        this.loader_ = loader;\n    };\n    /**\n     * Points the source to a new url. The next render cycle will use the new url.\n     * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n     * @api\n     */\n    VectorSource.prototype.setUrl = function (url) {\n        assert(this.format_, 7); // `format` must be set when `url` is set\n        this.setLoader(xhr(url, this.format_));\n    };\n    return VectorSource;\n}(Source));\nexport default VectorSource;\n//# sourceMappingURL=Vector.js.map","/**\n * @module ol/coordinate\n */\nimport { modulo } from './math.js';\nimport { padNumber } from './string.js';\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n    coordinate[0] += +delta[0];\n    coordinate[1] += +delta[1];\n    return coordinate;\n}\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n    var r = circle.getRadius();\n    var center = circle.getCenter();\n    var x0 = center[0];\n    var y0 = center[1];\n    var x1 = coordinate[0];\n    var y1 = coordinate[1];\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    if (dx === 0 && dy === 0) {\n        dx = 1;\n    }\n    var d = Math.sqrt(dx * dx + dy * dy);\n    var x = x0 + r * dx / d;\n    var y = y0 + r * dy / d;\n    return [x, y];\n}\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n    var x0 = coordinate[0];\n    var y0 = coordinate[1];\n    var start = segment[0];\n    var end = segment[1];\n    var x1 = start[0];\n    var y1 = start[1];\n    var x2 = end[0];\n    var y2 = end[1];\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    var along = (dx === 0 && dy === 0) ? 0 :\n        ((dx * (x0 - x1)) + (dy * (y0 - y1))) / ((dx * dx + dy * dy) || 0);\n    var x, y;\n    if (along <= 0) {\n        x = x1;\n        y = y1;\n    }\n    else if (along >= 1) {\n        x = x2;\n        y = y2;\n    }\n    else {\n        x = x1 + along * dx;\n        y = y1 + along * dy;\n    }\n    return [x, y];\n}\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n    return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n        return toStringXY(coordinate, opt_fractionDigits);\n    });\n}\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n    var normalizedDegrees = modulo(degrees + 180, 360) - 180;\n    var x = Math.abs(3600 * normalizedDegrees);\n    var dflPrecision = opt_fractionDigits || 0;\n    var precision = Math.pow(10, dflPrecision);\n    var deg = Math.floor(x / 3600);\n    var min = Math.floor((x - deg * 3600) / 60);\n    var sec = x - (deg * 3600) - (min * 60);\n    sec = Math.ceil(sec * precision) / precision;\n    if (sec >= 60) {\n        sec = 0;\n        min += 1;\n    }\n    if (min >= 60) {\n        min = 0;\n        deg += 1;\n    }\n    return deg + '\\u00b0 ' + padNumber(min, 2) + '\\u2032 ' +\n        padNumber(sec, 2, dflPrecision) + '\\u2033' +\n        (normalizedDegrees == 0 ? '' : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0));\n}\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n    if (coordinate) {\n        return template\n            .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n            .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n    }\n    else {\n        return '';\n    }\n}\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n    var equals = true;\n    for (var i = coordinate1.length - 1; i >= 0; --i) {\n        if (coordinate1[i] != coordinate2[i]) {\n            equals = false;\n            break;\n        }\n    }\n    return equals;\n}\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n    var cosAngle = Math.cos(angle);\n    var sinAngle = Math.sin(angle);\n    var x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n    var y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n    coordinate[0] = x;\n    coordinate[1] = y;\n    return coordinate;\n}\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n    coordinate[0] *= scale;\n    coordinate[1] *= scale;\n    return coordinate;\n}\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n    var dx = coord1[0] - coord2[0];\n    var dy = coord1[1] - coord2[1];\n    return dx * dx + dy * dy;\n}\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n    return Math.sqrt(squaredDistance(coord1, coord2));\n}\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n    return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n    if (coordinate) {\n        return degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) + ' ' +\n            degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits);\n    }\n    else {\n        return '';\n    }\n}\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n    return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n//# sourceMappingURL=coordinate.js.map","/**\n * @module ol/source/Cluster\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { getUid } from '../util.js';\nimport { assert } from '../asserts.js';\nimport Feature from '../Feature.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport { scale as scaleCoordinate, add as addCoordinate } from '../coordinate.js';\nimport EventType from '../events/EventType.js';\nimport { buffer, createEmpty, createOrUpdateFromCoordinate } from '../extent.js';\nimport Point from '../geom/Point.js';\nimport VectorSource from './Vector.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [distance=20] Minimum distance in pixels between clusters.\n * @property {function(Feature):Point} [geometryFunction]\n * Function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Point} as cluster calculation point for the feature. When a\n * feature should not be considered for clustering, the function should return\n * `null`. The default, which works when the underyling source contains point\n * features only, is\n * ```js\n * function(feature) {\n *   return feature.getGeometry();\n * }\n * ```\n * See {@link module:ol/geom/Polygon~Polygon#getInteriorPoint} for a way to get a cluster\n * calculation point for polygons.\n * @property {VectorSource} source Source.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n/**\n * @classdesc\n * Layer source to cluster vector data. Works out of the box with point\n * geometries. For other geometry types, or if not all geometries should be\n * considered for clustering, a custom `geometryFunction` can be defined.\n * @api\n */\nvar Cluster = /** @class */ (function (_super) {\n    __extends(Cluster, _super);\n    /**\n     * @param {Options} options Cluster options.\n     */\n    function Cluster(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            wrapX: options.wrapX\n        }) || this;\n        /**\n         * @type {number|undefined}\n         * @protected\n         */\n        _this.resolution = undefined;\n        /**\n         * @type {number}\n         * @protected\n         */\n        _this.distance = options.distance !== undefined ? options.distance : 20;\n        /**\n         * @type {Array<Feature>}\n         * @protected\n         */\n        _this.features = [];\n        /**\n         * @param {Feature} feature Feature.\n         * @return {Point} Cluster calculation point.\n         * @protected\n         */\n        _this.geometryFunction = options.geometryFunction || function (feature) {\n            var geometry = feature.getGeometry();\n            assert(geometry.getType() == GeometryType.POINT, 10); // The default `geometryFunction` can only handle `Point` geometries\n            return geometry;\n        };\n        /**\n         * @type {VectorSource}\n         * @protected\n         */\n        _this.source = options.source;\n        _this.source.addEventListener(EventType.CHANGE, _this.refresh.bind(_this));\n        return _this;\n    }\n    /**\n     * Get the distance in pixels between clusters.\n     * @return {number} Distance.\n     * @api\n     */\n    Cluster.prototype.getDistance = function () {\n        return this.distance;\n    };\n    /**\n     * Get a reference to the wrapped source.\n     * @return {VectorSource} Source.\n     * @api\n     */\n    Cluster.prototype.getSource = function () {\n        return this.source;\n    };\n    /**\n     * @inheritDoc\n     */\n    Cluster.prototype.loadFeatures = function (extent, resolution, projection) {\n        this.source.loadFeatures(extent, resolution, projection);\n        if (resolution !== this.resolution) {\n            this.clear();\n            this.resolution = resolution;\n            this.cluster();\n            this.addFeatures(this.features);\n        }\n    };\n    /**\n     * Set the distance in pixels between clusters.\n     * @param {number} distance The distance in pixels.\n     * @api\n     */\n    Cluster.prototype.setDistance = function (distance) {\n        this.distance = distance;\n        this.refresh();\n    };\n    /**\n     * handle the source changing\n     * @override\n     */\n    Cluster.prototype.refresh = function () {\n        this.clear();\n        this.cluster();\n        this.addFeatures(this.features);\n    };\n    /**\n     * @protected\n     */\n    Cluster.prototype.cluster = function () {\n        if (this.resolution === undefined) {\n            return;\n        }\n        this.features.length = 0;\n        var extent = createEmpty();\n        var mapDistance = this.distance * this.resolution;\n        var features = this.source.getFeatures();\n        /**\n         * @type {!Object<string, boolean>}\n         */\n        var clustered = {};\n        for (var i = 0, ii = features.length; i < ii; i++) {\n            var feature = features[i];\n            if (!(getUid(feature) in clustered)) {\n                var geometry = this.geometryFunction(feature);\n                if (geometry) {\n                    var coordinates = geometry.getCoordinates();\n                    createOrUpdateFromCoordinate(coordinates, extent);\n                    buffer(extent, mapDistance, extent);\n                    var neighbors = this.source.getFeaturesInExtent(extent);\n                    neighbors = neighbors.filter(function (neighbor) {\n                        var uid = getUid(neighbor);\n                        if (!(uid in clustered)) {\n                            clustered[uid] = true;\n                            return true;\n                        }\n                        else {\n                            return false;\n                        }\n                    });\n                    this.features.push(this.createCluster(neighbors));\n                }\n            }\n        }\n    };\n    /**\n     * @param {Array<Feature>} features Features\n     * @return {Feature} The cluster feature.\n     * @protected\n     */\n    Cluster.prototype.createCluster = function (features) {\n        var centroid = [0, 0];\n        for (var i = features.length - 1; i >= 0; --i) {\n            var geometry = this.geometryFunction(features[i]);\n            if (geometry) {\n                addCoordinate(centroid, geometry.getCoordinates());\n            }\n            else {\n                features.splice(i, 1);\n            }\n        }\n        scaleCoordinate(centroid, 1 / features.length);\n        var cluster = new Feature(new Point(centroid));\n        cluster.set('features', features);\n        return cluster;\n    };\n    return Cluster;\n}(VectorSource));\nexport default Cluster;\n//# sourceMappingURL=Cluster.js.map","import React, { useEffect, useContext, useRef } from \"react\";\nimport Feature from \"ol/Feature\";\nimport { Point } from \"ol/geom\";\nimport { fromLonLat } from \"ol/proj\";\nimport { Circle as CircleStyle, Fill, Stroke, Style, Text } from \"ol/style.js\";\nimport { Vector as VectorLayer } from \"ol/layer.js\";\nimport { Vector as VectorSource, Cluster as ClusterSource } from \"ol/source.js\";\nimport { MapContext } from \"./MapContext\";\n\nfunction getPointLongLat(point) {\n  let geo = point.geometry || point.location;\n  const latlng = geo.coordinates || [\n    geo.long || geo.longitude || 0,\n    geo.lat || geo.latitude || 0\n  ];\n  return latlng;\n}\n\nexport default function FeatureLayer(props) {\n  const context = useContext(MapContext);\n  const styles = useRef({});\n  const layer = useRef(null);\n  const source = useRef(null);\n\n  useEffect(() => {\n    const styleMap = {};\n    const config = props.styleMap;\n    Object.keys(config).forEach(key => {\n      const opts = { ...config[key] };\n      if (opts.circle) {\n        let { fill, stroke, ...circle } = opts.circle;\n        // TODO: might be able to genericize this\n        if (fill) {\n          circle.fill = new Fill(fill);\n        }\n        if (stroke) {\n          circle.stroke = new Stroke(stroke);\n        }\n        opts.image = new CircleStyle(circle);\n        console.log(\"new circle style\", opts, config);\n      }\n      if (opts.text) {\n        let { fill, ...text } = opts.text;\n        if (fill) {\n          text.fill = new Fill(fill);\n        }\n        opts.text = new Text(text);\n      }\n      console.log(\"creating new style in stylemap\", key, opts);\n      styleMap[key] = new Style(opts);\n    });\n\n    console.log(\"returning stylemap \", styleMap, config);\n    styles.current = styleMap;\n  }, [props.styleMap]);\n\n  useEffect(() => {\n    if (context.map) {\n      console.log(\n        \"creating new FeatureLayer source for layer name\",\n        props.layerName\n      );\n      source.current = new VectorSource();\n\n      let clusterSource;\n\n      if (props.cluster) {\n        clusterSource = new ClusterSource({\n          ...props.cluster,\n          source: source.current\n        });\n      }\n\n      layer.current = new VectorLayer({\n        projection: props.projection || \"EPSG:4326\",\n        source: clusterSource || source.current,\n        style: feature => {\n          let style;\n          if (feature.values_.features) {\n            const type = feature.values_.features[0].get(\"type\");\n            style = styles.current[type];\n            if (style.getText()) {\n              style.getText().setText(\"\" + feature.values_.features.length);\n            }\n          } else {\n            const myfeature = feature.values_;\n            style = styles.current[myfeature.type];\n            if (style.getText()) {\n              style.getText().setText(myfeature.data.properties.name);\n            }\n          }\n          return style;\n        }\n      });\n\n      context.map.addLayer(layer.current);\n\n      if (props.features) {\n        buildFeatures();\n      }\n\n      return () => {\n        context.map.removeLayer(layer.current);\n      };\n    }\n  }, [context.map]);\n\n  function buildFeatures() {\n    console.log(\n      \"building features for FeatureLayer %s with \",\n      props.layerName,\n      props.features\n    );\n    source.current.addFeatures(\n      props.features.map(\n        point =>\n          new Feature({\n            featureType: props.featureType || \"point\",\n            type: point.type,\n            data: point,\n            geometry: new Point(fromLonLat(getPointLongLat(point)))\n          })\n      )\n    );\n\n    if (props.fit) {\n      context.map\n        .getView()\n        .fit(source.current.getExtent(), context.map.getSize());\n    }\n  }\n\n  useEffect(() => {\n    if (source.current && context.map) {\n      buildFeatures();\n\n      // clear the features on change\n      return () => {\n        if (source.current) {\n          source.current.clear();\n        }\n      };\n    }\n  }, [props.features]);\n\n  useEffect(() => {\n    if (layer.current) {\n      layer.current.setVisible(!props.hidden);\n    }\n  }, [props.hidden]);\n\n  return null;\n}\n","/**\n * @module ol/geom/flat/closest\n */\nimport { lerp, squaredDistance as squaredDx } from '../../math.js';\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(flatCoordinates, offset1, offset2, stride, x, y, closestPoint) {\n    var x1 = flatCoordinates[offset1];\n    var y1 = flatCoordinates[offset1 + 1];\n    var dx = flatCoordinates[offset2] - x1;\n    var dy = flatCoordinates[offset2 + 1] - y1;\n    var offset;\n    if (dx === 0 && dy === 0) {\n        offset = offset1;\n    }\n    else {\n        var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n        if (t > 1) {\n            offset = offset2;\n        }\n        else if (t > 0) {\n            for (var i = 0; i < stride; ++i) {\n                closestPoint[i] = lerp(flatCoordinates[offset1 + i], flatCoordinates[offset2 + i], t);\n            }\n            closestPoint.length = stride;\n            return;\n        }\n        else {\n            offset = offset1;\n        }\n    }\n    for (var i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n    }\n    closestPoint.length = stride;\n}\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    for (offset += stride; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        var squaredDelta = squaredDx(x1, y1, x2, y2);\n        if (squaredDelta > max) {\n            max = squaredDelta;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n        offset = end;\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(flatCoordinates, offset, endss, stride, max) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n        offset = ends[ends.length - 1];\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(flatCoordinates, offset, end, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    if (offset == end) {\n        return minSquaredDistance;\n    }\n    var i, squaredDistance;\n    if (maxDelta === 0) {\n        // All points are identical, so just test the first point.\n        squaredDistance = squaredDx(x, y, flatCoordinates[offset], flatCoordinates[offset + 1]);\n        if (squaredDistance < minSquaredDistance) {\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = flatCoordinates[offset + i];\n            }\n            closestPoint.length = stride;\n            return squaredDistance;\n        }\n        else {\n            return minSquaredDistance;\n        }\n    }\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    var index = offset + stride;\n    while (index < end) {\n        assignClosest(flatCoordinates, index - stride, index, stride, x, y, tmpPoint);\n        squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n        if (squaredDistance < minSquaredDistance) {\n            minSquaredDistance = squaredDistance;\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = tmpPoint[i];\n            }\n            closestPoint.length = stride;\n            index += stride;\n        }\n        else {\n            // Skip ahead multiple points, because we know that all the skipped\n            // points cannot be any closer than the closest point we have found so\n            // far.  We know this because we know how close the current point is, how\n            // close the closest point we have found so far is, and the maximum\n            // distance between consecutive points.  For example, if we're currently\n            // at distance 10, the best we've found so far is 3, and that the maximum\n            // distance between consecutive points is 2, then we'll need to skip at\n            // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n            // finding a closer point.  We use Math.max(..., 1) to ensure that we\n            // always advance at least one point, to avoid an infinite loop.\n            index += stride * Math.max(((Math.sqrt(squaredDistance) -\n                Math.sqrt(minSquaredDistance)) / maxDelta) | 0, 1);\n        }\n    }\n    if (isRing) {\n        // Check the closing segment.\n        assignClosest(flatCoordinates, end - stride, offset, stride, x, y, tmpPoint);\n        squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n        if (squaredDistance < minSquaredDistance) {\n            minSquaredDistance = squaredDistance;\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = tmpPoint[i];\n            }\n            closestPoint.length = stride;\n        }\n    }\n    return minSquaredDistance;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(flatCoordinates, offset, ends, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        minSquaredDistance = assignClosestPoint(flatCoordinates, offset, end, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n        offset = end;\n    }\n    return minSquaredDistance;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(flatCoordinates, offset, endss, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        minSquaredDistance = assignClosestArrayPoint(flatCoordinates, offset, ends, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n        offset = ends[ends.length - 1];\n    }\n    return minSquaredDistance;\n}\n//# sourceMappingURL=closest.js.map","/**\n * @module ol/geom/flat/interpolate\n */\nimport { binarySearch } from '../../array.js';\nimport { lerp } from '../../math.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(flatCoordinates, offset, end, stride, fraction, opt_dest) {\n    var pointX = NaN;\n    var pointY = NaN;\n    var n = (end - offset) / stride;\n    if (n === 1) {\n        pointX = flatCoordinates[offset];\n        pointY = flatCoordinates[offset + 1];\n    }\n    else if (n == 2) {\n        pointX = (1 - fraction) * flatCoordinates[offset] +\n            fraction * flatCoordinates[offset + stride];\n        pointY = (1 - fraction) * flatCoordinates[offset + 1] +\n            fraction * flatCoordinates[offset + stride + 1];\n    }\n    else if (n !== 0) {\n        var x1 = flatCoordinates[offset];\n        var y1 = flatCoordinates[offset + 1];\n        var length_1 = 0;\n        var cumulativeLengths = [0];\n        for (var i = offset + stride; i < end; i += stride) {\n            var x2 = flatCoordinates[i];\n            var y2 = flatCoordinates[i + 1];\n            length_1 += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n            cumulativeLengths.push(length_1);\n            x1 = x2;\n            y1 = y2;\n        }\n        var target = fraction * length_1;\n        var index = binarySearch(cumulativeLengths, target);\n        if (index < 0) {\n            var t = (target - cumulativeLengths[-index - 2]) /\n                (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n            var o = offset + (-index - 2) * stride;\n            pointX = lerp(flatCoordinates[o], flatCoordinates[o + stride], t);\n            pointY = lerp(flatCoordinates[o + 1], flatCoordinates[o + stride + 1], t);\n        }\n        else {\n            pointX = flatCoordinates[offset + index * stride];\n            pointY = flatCoordinates[offset + index * stride + 1];\n        }\n    }\n    if (opt_dest) {\n        opt_dest[0] = pointX;\n        opt_dest[1] = pointY;\n        return opt_dest;\n    }\n    else {\n        return [pointX, pointY];\n    }\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, extrapolate) {\n    if (end == offset) {\n        return null;\n    }\n    var coordinate;\n    if (m < flatCoordinates[offset + stride - 1]) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(offset, offset + stride);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    else if (flatCoordinates[end - 1] < m) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(end - stride, end);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    // FIXME use O(1) search\n    if (m == flatCoordinates[offset + stride - 1]) {\n        return flatCoordinates.slice(offset, offset + stride);\n    }\n    var lo = offset / stride;\n    var hi = end / stride;\n    while (lo < hi) {\n        var mid = (lo + hi) >> 1;\n        if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n            hi = mid;\n        }\n        else {\n            lo = mid + 1;\n        }\n    }\n    var m0 = flatCoordinates[lo * stride - 1];\n    if (m == m0) {\n        return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n    }\n    var m1 = flatCoordinates[(lo + 1) * stride - 1];\n    var t = (m - m0) / (m1 - m0);\n    coordinate = [];\n    for (var i = 0; i < stride - 1; ++i) {\n        coordinate.push(lerp(flatCoordinates[(lo - 1) * stride + i], flatCoordinates[lo * stride + i], t));\n    }\n    coordinate.push(m);\n    return coordinate;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringsCoordinateAtM(flatCoordinates, offset, ends, stride, m, extrapolate, interpolate) {\n    if (interpolate) {\n        return lineStringCoordinateAtM(flatCoordinates, offset, ends[ends.length - 1], stride, m, extrapolate);\n    }\n    var coordinate;\n    if (m < flatCoordinates[stride - 1]) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(0, stride);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    if (flatCoordinates[flatCoordinates.length - 1] < m) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        if (offset == end) {\n            continue;\n        }\n        if (m < flatCoordinates[offset + stride - 1]) {\n            return null;\n        }\n        else if (m <= flatCoordinates[end - 1]) {\n            return lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, false);\n        }\n        offset = end;\n    }\n    return null;\n}\n//# sourceMappingURL=interpolate.js.map","/**\n * @module ol/geom/flat/contains\n */\nimport { forEachCorner } from '../../extent.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(flatCoordinates, offset, end, stride, extent) {\n    var outside = forEachCorner(extent, \n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n        return !linearRingContainsXY(flatCoordinates, offset, end, stride, coordinate[0], coordinate[1]);\n    });\n    return !outside;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(flatCoordinates, offset, end, stride, x, y) {\n    // http://geomalgorithms.com/a03-_inclusion.html\n    // Copyright 2000 softSurfer, 2012 Dan Sunday\n    // This code may be freely used and modified for any purpose\n    // providing that this copyright notice is included with it.\n    // SoftSurfer makes no warranty for this code, and cannot be held\n    // liable for any real or imagined damage resulting from its use.\n    // Users of this code must verify correctness for their application.\n    var wn = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        if (y1 <= y) {\n            if (y2 > y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) > 0) {\n                wn++;\n            }\n        }\n        else if (y2 <= y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) < 0) {\n            wn--;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    return wn !== 0;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y) {\n    if (ends.length === 0) {\n        return false;\n    }\n    if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n        return false;\n    }\n    for (var i = 1, ii = ends.length; i < ii; ++i) {\n        if (linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(flatCoordinates, offset, endss, stride, x, y) {\n    if (endss.length === 0) {\n        return false;\n    }\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n            return true;\n        }\n        offset = ends[ends.length - 1];\n    }\n    return false;\n}\n//# sourceMappingURL=contains.js.map","/**\n * @module ol/geom/flat/segments\n */\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n    var point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n    var point2 = [];\n    var ret;\n    for (; (offset + stride) < end; offset += stride) {\n        point2[0] = flatCoordinates[offset + stride];\n        point2[1] = flatCoordinates[offset + stride + 1];\n        ret = callback(point1, point2);\n        if (ret) {\n            return ret;\n        }\n        point1[0] = point2[0];\n        point1[1] = point2[1];\n    }\n    return false;\n}\n//# sourceMappingURL=segments.js.map","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport { containsExtent, createEmpty, extendFlatCoordinates, intersects, intersectsSegment } from '../../extent.js';\nimport { linearRingContainsXY, linearRingContainsExtent } from './contains.js';\nimport { forEach as forEachSegment } from './segments.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(flatCoordinates, offset, end, stride, extent) {\n    var coordinatesExtent = extendFlatCoordinates(createEmpty(), flatCoordinates, offset, end, stride);\n    if (!intersects(extent, coordinatesExtent)) {\n        return false;\n    }\n    if (containsExtent(extent, coordinatesExtent)) {\n        return true;\n    }\n    if (coordinatesExtent[0] >= extent[0] &&\n        coordinatesExtent[2] <= extent[2]) {\n        return true;\n    }\n    if (coordinatesExtent[1] >= extent[1] &&\n        coordinatesExtent[3] <= extent[3]) {\n        return true;\n    }\n    return forEachSegment(flatCoordinates, offset, end, stride, \n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n        return intersectsSegment(extent, point1, point2);\n    });\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(flatCoordinates, offset, ends, stride, extent) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        if (intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)) {\n            return true;\n        }\n        offset = ends[i];\n    }\n    return false;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(flatCoordinates, offset, end, stride, extent) {\n    if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[1])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[3])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[1])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[3])) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent) {\n    if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n        return false;\n    }\n    if (ends.length === 1) {\n        return true;\n    }\n    for (var i = 1, ii = ends.length; i < ii; ++i) {\n        if (linearRingContainsExtent(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n            if (!intersectsLineString(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(flatCoordinates, offset, endss, stride, extent) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)) {\n            return true;\n        }\n        offset = ends[ends.length - 1];\n    }\n    return false;\n}\n//# sourceMappingURL=intersectsextent.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/LineString\n */\nimport { extend } from '../array.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { assignClosestPoint, maxSquaredDelta } from './flat/closest.js';\nimport { deflateCoordinates } from './flat/deflate.js';\nimport { inflateCoordinates } from './flat/inflate.js';\nimport { interpolatePoint, lineStringCoordinateAtM } from './flat/interpolate.js';\nimport { intersectsLineString } from './flat/intersectsextent.js';\nimport { lineStringLength } from './flat/length.js';\nimport { forEach as forEachSegment } from './flat/segments.js';\nimport { douglasPeucker } from './flat/simplify.js';\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nvar LineString = /** @class */ (function (_super) {\n    __extends(LineString, _super);\n    /**\n     * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n     * @param {GeometryLayout=} opt_layout Layout.\n     */\n    function LineString(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.flatMidpoint_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.flatMidpointRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n        }\n        else {\n            _this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed coordinate to the coordinates of the linestring.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @api\n     */\n    LineString.prototype.appendCoordinate = function (coordinate) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = coordinate.slice();\n        }\n        else {\n            extend(this.flatCoordinates, coordinate);\n        }\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!LineString} Clone.\n     * @override\n     * @api\n     */\n    LineString.prototype.clone = function () {\n        return new LineString(this.flatCoordinates.slice(), this.layout);\n    };\n    /**\n     * @inheritDoc\n     */\n    LineString.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(maxSquaredDelta(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestPoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * Iterate over each segment, calling the provided callback.\n     * If the callback returns a truthy value the function returns that\n     * value immediately. Otherwise the function returns `false`.\n     *\n     * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n     *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n     * @return {T|boolean} Value.\n     * @template T,S\n     * @api\n     */\n    LineString.prototype.forEachSegment = function (callback) {\n        return forEachSegment(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, callback);\n    };\n    /**\n     * Returns the coordinate at `m` using linear interpolation, or `null` if no\n     * such coordinate exists.\n     *\n     * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n     * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n     * M will return the first coordinate and Ms greater than the last M will\n     * return the last coordinate.\n     *\n     * @param {number} m M.\n     * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n     * @api\n     */\n    LineString.prototype.getCoordinateAtM = function (m, opt_extrapolate) {\n        if (this.layout != GeometryLayout.XYM &&\n            this.layout != GeometryLayout.XYZM) {\n            return null;\n        }\n        var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n        return lineStringCoordinateAtM(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, m, extrapolate);\n    };\n    /**\n     * Return the coordinates of the linestring.\n     * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n     * @override\n     * @api\n     */\n    LineString.prototype.getCoordinates = function () {\n        return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * Return the coordinate at the provided fraction along the linestring.\n     * The `fraction` is a number between 0 and 1, where 0 is the start of the\n     * linestring and 1 is the end.\n     * @param {number} fraction Fraction.\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_dest Optional coordinate whose values will\n     *     be modified. If not provided, a new coordinate will be returned.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n     * @api\n     */\n    LineString.prototype.getCoordinateAt = function (fraction, opt_dest) {\n        return interpolatePoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, fraction, opt_dest);\n    };\n    /**\n     * Return the length of the linestring on projected plane.\n     * @return {number} Length (on projected plane).\n     * @api\n     */\n    LineString.prototype.getLength = function () {\n        return lineStringLength(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * @return {Array<number>} Flat midpoint.\n     */\n    LineString.prototype.getFlatMidpoint = function () {\n        if (this.flatMidpointRevision_ != this.getRevision()) {\n            this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n            this.flatMidpointRevision_ = this.getRevision();\n        }\n        return this.flatMidpoint_;\n    };\n    /**\n     * @inheritDoc\n     */\n    LineString.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        simplifiedFlatCoordinates.length = douglasPeucker(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n        return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    LineString.prototype.getType = function () {\n        return GeometryType.LINE_STRING;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    LineString.prototype.intersectsExtent = function (extent) {\n        return intersectsLineString(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the linestring.\n     * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @override\n     * @api\n     */\n    LineString.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 1);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return LineString;\n}(SimpleGeometry));\nexport default LineString;\n//# sourceMappingURL=LineString.js.map","/**\n * @module ol/style/IconAnchorUnits\n */\n/**\n * Icon anchor units. One of 'fraction', 'pixels'.\n * @enum {string}\n */\nexport default {\n    FRACTION: 'fraction',\n    PIXELS: 'pixels'\n};\n//# sourceMappingURL=IconAnchorUnits.js.map","/**\n * @module ol/style/IconImageCache\n */\nimport { asString } from '../color.js';\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nvar IconImageCache = /** @class */ (function () {\n    function IconImageCache() {\n        /**\n        * @type {!Object<string, import(\"./IconImage.js\").default>}\n        * @private\n        */\n        this.cache_ = {};\n        /**\n        * @type {number}\n        * @private\n        */\n        this.cacheSize_ = 0;\n        /**\n        * @type {number}\n        * @private\n        */\n        this.maxCacheSize_ = 32;\n    }\n    /**\n    * FIXME empty description for jsdoc\n    */\n    IconImageCache.prototype.clear = function () {\n        this.cache_ = {};\n        this.cacheSize_ = 0;\n    };\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    IconImageCache.prototype.canExpireCache = function () {\n        return this.cacheSize_ > this.maxCacheSize_;\n    };\n    /**\n    * FIXME empty description for jsdoc\n    */\n    IconImageCache.prototype.expire = function () {\n        if (this.canExpireCache()) {\n            var i = 0;\n            for (var key in this.cache_) {\n                var iconImage = this.cache_[key];\n                if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n                    delete this.cache_[key];\n                    --this.cacheSize_;\n                }\n            }\n        }\n    };\n    /**\n    * @param {string} src Src.\n    * @param {?string} crossOrigin Cross origin.\n    * @param {import(\"../color.js\").Color} color Color.\n    * @return {import(\"./IconImage.js\").default} Icon image.\n    */\n    IconImageCache.prototype.get = function (src, crossOrigin, color) {\n        var key = getKey(src, crossOrigin, color);\n        return key in this.cache_ ? this.cache_[key] : null;\n    };\n    /**\n    * @param {string} src Src.\n    * @param {?string} crossOrigin Cross origin.\n    * @param {import(\"../color.js\").Color} color Color.\n    * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n    */\n    IconImageCache.prototype.set = function (src, crossOrigin, color, iconImage) {\n        var key = getKey(src, crossOrigin, color);\n        this.cache_[key] = iconImage;\n        ++this.cacheSize_;\n    };\n    /**\n    * Set the cache size of the icon cache. Default is `32`. Change this value when\n    * your map uses more than 32 different icon images and you are not caching icon\n    * styles on the application level.\n    * @param {number} maxCacheSize Cache max size.\n    * @api\n    */\n    IconImageCache.prototype.setSize = function (maxCacheSize) {\n        this.maxCacheSize_ = maxCacheSize;\n        this.expire();\n    };\n    return IconImageCache;\n}());\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n    var colorString = color ? asString(color) : 'null';\n    return crossOrigin + ':' + src + ':' + colorString;\n}\nexport default IconImageCache;\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport var shared = new IconImageCache();\n//# sourceMappingURL=IconImageCache.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/ImageBase\n */\nimport { abstract } from './util.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n/**\n * @abstract\n */\nvar ImageBase = /** @class */ (function (_super) {\n    __extends(ImageBase, _super);\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./ImageState.js\").default} state State.\n     */\n    function ImageBase(extent, resolution, pixelRatio, state) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {import(\"./extent.js\").Extent}\n         */\n        _this.extent = extent;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @protected\n         * @type {number|undefined}\n         */\n        _this.resolution = resolution;\n        /**\n         * @protected\n         * @type {import(\"./ImageState.js\").default}\n         */\n        _this.state = state;\n        return _this;\n    }\n    /**\n     * @protected\n     */\n    ImageBase.prototype.changed = function () {\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * @return {import(\"./extent.js\").Extent} Extent.\n     */\n    ImageBase.prototype.getExtent = function () {\n        return this.extent;\n    };\n    /**\n     * @abstract\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     */\n    ImageBase.prototype.getImage = function () {\n        return abstract();\n    };\n    /**\n     * @return {number} PixelRatio.\n     */\n    ImageBase.prototype.getPixelRatio = function () {\n        return this.pixelRatio_;\n    };\n    /**\n     * @return {number} Resolution.\n     */\n    ImageBase.prototype.getResolution = function () {\n        return /** @type {number} */ (this.resolution);\n    };\n    /**\n     * @return {import(\"./ImageState.js\").default} State.\n     */\n    ImageBase.prototype.getState = function () {\n        return this.state;\n    };\n    /**\n     * Load not yet loaded URI.\n     * @abstract\n     */\n    ImageBase.prototype.load = function () {\n        abstract();\n    };\n    return ImageBase;\n}(EventTarget));\nexport default ImageBase;\n//# sourceMappingURL=ImageBase.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Image\n */\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport { listenOnce, unlistenByKey } from './events.js';\nimport EventType from './events/EventType.js';\nimport { getHeight } from './extent.js';\nimport { IMAGE_DECODE } from './has.js';\n/**\n * A function that takes an {@link module:ol/Image~Image} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~Image#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\nvar ImageWrapper = /** @class */ (function (_super) {\n    __extends(ImageWrapper, _super);\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {string} src Image source URI.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {LoadFunction} imageLoadFunction Image load function.\n     */\n    function ImageWrapper(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n        var _this = _super.call(this, extent, resolution, pixelRatio, ImageState.IDLE) || this;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.src_ = src;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n         */\n        _this.image_ = new Image();\n        if (crossOrigin !== null) {\n            _this.image_.crossOrigin = crossOrigin;\n        }\n        /**\n         * @private\n         * @type {?function():void}\n         */\n        _this.unlisten_ = null;\n        /**\n         * @protected\n         * @type {ImageState}\n         */\n        _this.state = ImageState.IDLE;\n        /**\n         * @private\n         * @type {LoadFunction}\n         */\n        _this.imageLoadFunction_ = imageLoadFunction;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     * @api\n     */\n    ImageWrapper.prototype.getImage = function () {\n        return this.image_;\n    };\n    /**\n     * Tracks loading or read errors.\n     *\n     * @private\n     */\n    ImageWrapper.prototype.handleImageError_ = function () {\n        this.state = ImageState.ERROR;\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * Tracks successful image load.\n     *\n     * @private\n     */\n    ImageWrapper.prototype.handleImageLoad_ = function () {\n        if (this.resolution === undefined) {\n            this.resolution = getHeight(this.extent) / this.image_.height;\n        }\n        this.state = ImageState.LOADED;\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * Load the image or retry if loading previously failed.\n     * Loading is taken care of by the tile queue, and calling this method is\n     * only needed for preloading or for reloading in case of an error.\n     * @override\n     * @api\n     */\n    ImageWrapper.prototype.load = function () {\n        if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n            this.state = ImageState.LOADING;\n            this.changed();\n            this.imageLoadFunction_(this, this.src_);\n            this.unlisten_ = listenImage(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));\n        }\n    };\n    /**\n     * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n     */\n    ImageWrapper.prototype.setImage = function (image) {\n        this.image_ = image;\n    };\n    /**\n     * Discards event handlers which listen for load completion or errors.\n     *\n     * @private\n     */\n    ImageWrapper.prototype.unlistenImage_ = function () {\n        if (this.unlisten_) {\n            this.unlisten_();\n            this.unlisten_ = null;\n        }\n    };\n    return ImageWrapper;\n}(ImageBase));\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n    var img = /** @type {HTMLImageElement} */ (image);\n    if (img.src && IMAGE_DECODE) {\n        var promise = img.decode();\n        var listening_1 = true;\n        var unlisten = function () {\n            listening_1 = false;\n        };\n        promise.then(function () {\n            if (listening_1) {\n                loadHandler();\n            }\n        }).catch(function (error) {\n            if (listening_1) {\n                // FIXME: Unconditionally call errorHandler() when this bug is fixed upstream:\n                //        https://bugs.webkit.org/show_bug.cgi?id=198527\n                if (error.name === 'EncodingError' && error.message === 'Invalid image type.') {\n                    loadHandler();\n                }\n                else {\n                    errorHandler();\n                }\n            }\n        });\n        return unlisten;\n    }\n    var listenerKeys = [\n        listenOnce(img, EventType.LOAD, loadHandler),\n        listenOnce(img, EventType.ERROR, errorHandler)\n    ];\n    return function unlisten() {\n        listenerKeys.forEach(unlistenByKey);\n    };\n}\nexport default ImageWrapper;\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/style/IconImage\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { createCanvasContext2D } from '../dom.js';\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport { shared as iconImageCache } from './IconImageCache.js';\nimport { listenImage } from '../Image.js';\nvar IconImage = /** @class */ (function (_super) {\n    __extends(IconImage, _super);\n    /**\n     * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n     * @param {string|undefined} src Src.\n     * @param {import(\"../size.js\").Size} size Size.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"../ImageState.js\").default} imageState Image state.\n     * @param {import(\"../color.js\").Color} color Color.\n     */\n    function IconImage(image, src, size, crossOrigin, imageState, color) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        _this.hitDetectionImage_ = null;\n        /**\n         * @private\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        _this.image_ = !image ? new Image() : image;\n        if (crossOrigin !== null) {\n            /** @type {HTMLImageElement} */ (_this.image_).crossOrigin = crossOrigin;\n        }\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.canvas_ = color ? document.createElement('canvas') : null;\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color}\n         */\n        _this.color_ = color;\n        /**\n         * @private\n         * @type {?function():void}\n         */\n        _this.unlisten_ = null;\n        /**\n         * @private\n         * @type {import(\"../ImageState.js\").default}\n         */\n        _this.imageState_ = imageState;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.size_ = size;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        _this.src_ = src;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        _this.tainted_;\n        return _this;\n    }\n    /**\n     * @private\n     * @return {boolean} The image canvas is tainted.\n     */\n    IconImage.prototype.isTainted_ = function () {\n        if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n            this.tainted_ = false;\n            var context = createCanvasContext2D(1, 1);\n            try {\n                context.drawImage(this.image_, 0, 0);\n                context.getImageData(0, 0, 1, 1);\n            }\n            catch (e) {\n                this.tainted_ = true;\n            }\n        }\n        return this.tainted_ === true;\n    };\n    /**\n     * @private\n     */\n    IconImage.prototype.dispatchChangeEvent_ = function () {\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * @private\n     */\n    IconImage.prototype.handleImageError_ = function () {\n        this.imageState_ = ImageState.ERROR;\n        this.unlistenImage_();\n        this.dispatchChangeEvent_();\n    };\n    /**\n     * @private\n     */\n    IconImage.prototype.handleImageLoad_ = function () {\n        this.imageState_ = ImageState.LOADED;\n        if (this.size_) {\n            this.image_.width = this.size_[0];\n            this.image_.height = this.size_[1];\n        }\n        this.size_ = [this.image_.width, this.image_.height];\n        this.unlistenImage_();\n        this.replaceColor_();\n        this.dispatchChangeEvent_();\n    };\n    /**\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n     */\n    IconImage.prototype.getImage = function (pixelRatio) {\n        return this.canvas_ ? this.canvas_ : this.image_;\n    };\n    /**\n     * @return {import(\"../ImageState.js\").default} Image state.\n     */\n    IconImage.prototype.getImageState = function () {\n        return this.imageState_;\n    };\n    /**\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n     */\n    IconImage.prototype.getHitDetectionImage = function (pixelRatio) {\n        if (!this.hitDetectionImage_) {\n            if (this.isTainted_()) {\n                var width = this.size_[0];\n                var height = this.size_[1];\n                var context = createCanvasContext2D(width, height);\n                context.fillRect(0, 0, width, height);\n                this.hitDetectionImage_ = context.canvas;\n            }\n            else {\n                this.hitDetectionImage_ = this.image_;\n            }\n        }\n        return this.hitDetectionImage_;\n    };\n    /**\n     * @return {import(\"../size.js\").Size} Image size.\n     */\n    IconImage.prototype.getSize = function () {\n        return this.size_;\n    };\n    /**\n     * @return {string|undefined} Image src.\n     */\n    IconImage.prototype.getSrc = function () {\n        return this.src_;\n    };\n    /**\n     * Load not yet loaded URI.\n     */\n    IconImage.prototype.load = function () {\n        if (this.imageState_ == ImageState.IDLE) {\n            this.imageState_ = ImageState.LOADING;\n            try {\n                /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n            }\n            catch (e) {\n                this.handleImageError_();\n            }\n            this.unlisten_ = listenImage(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));\n        }\n    };\n    /**\n     * @private\n     */\n    IconImage.prototype.replaceColor_ = function () {\n        if (!this.color_ || this.isTainted_()) {\n            return;\n        }\n        this.canvas_.width = this.image_.width;\n        this.canvas_.height = this.image_.height;\n        var ctx = this.canvas_.getContext('2d');\n        ctx.drawImage(this.image_, 0, 0);\n        var imgData = ctx.getImageData(0, 0, this.image_.width, this.image_.height);\n        var data = imgData.data;\n        var r = this.color_[0] / 255.0;\n        var g = this.color_[1] / 255.0;\n        var b = this.color_[2] / 255.0;\n        for (var i = 0, ii = data.length; i < ii; i += 4) {\n            data[i] *= r;\n            data[i + 1] *= g;\n            data[i + 2] *= b;\n        }\n        ctx.putImageData(imgData, 0, 0);\n    };\n    /**\n     * Discards event handlers which listen for load completion or errors.\n     *\n     * @private\n     */\n    IconImage.prototype.unlistenImage_ = function () {\n        if (this.unlisten_) {\n            this.unlisten_();\n            this.unlisten_ = null;\n        }\n    };\n    return IconImage;\n}(EventTarget));\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n    var iconImage = iconImageCache.get(src, crossOrigin, color);\n    if (!iconImage) {\n        iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n        iconImageCache.set(src, crossOrigin, color, iconImage);\n    }\n    return iconImage;\n}\nexport default IconImage;\n//# sourceMappingURL=IconImage.js.map","/**\n * @module ol/style/IconOrigin\n */\n/**\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n * @enum {string}\n */\nexport default {\n    BOTTOM_LEFT: 'bottom-left',\n    BOTTOM_RIGHT: 'bottom-right',\n    TOP_LEFT: 'top-left',\n    TOP_RIGHT: 'top-right'\n};\n//# sourceMappingURL=IconOrigin.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/style/Icon\n */\nimport { getUid } from '../util.js';\nimport ImageState from '../ImageState.js';\nimport { assert } from '../asserts.js';\nimport { asArray } from '../color.js';\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from './IconAnchorUnits.js';\nimport { get as getIconImage } from './IconImage.js';\nimport IconOrigin from './IconOrigin.js';\nimport ImageStyle from './Image.js';\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./IconOrigin.js\").default} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {import(\"./IconOrigin.js\").default} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {import(\"../size.js\").Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n */\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nvar Icon = /** @class */ (function (_super) {\n    __extends(Icon, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Icon(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        /**\n         * @type {number}\n         */\n        var opacity = options.opacity !== undefined ? options.opacity : 1;\n        /**\n         * @type {number}\n         */\n        var rotation = options.rotation !== undefined ? options.rotation : 0;\n        /**\n         * @type {number}\n         */\n        var scale = options.scale !== undefined ? options.scale : 1;\n        /**\n         * @type {boolean}\n         */\n        var rotateWithView = options.rotateWithView !== undefined ?\n            options.rotateWithView : false;\n        _this = _super.call(this, {\n            opacity: opacity,\n            rotation: rotation,\n            scale: scale,\n            rotateWithView: rotateWithView\n        }) || this;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.normalizedAnchor_ = null;\n        /**\n         * @private\n         * @type {import(\"./IconOrigin.js\").default}\n         */\n        _this.anchorOrigin_ = options.anchorOrigin !== undefined ?\n            options.anchorOrigin : IconOrigin.TOP_LEFT;\n        /**\n         * @private\n         * @type {import(\"./IconAnchorUnits.js\").default}\n         */\n        _this.anchorXUnits_ = options.anchorXUnits !== undefined ?\n            options.anchorXUnits : IconAnchorUnits.FRACTION;\n        /**\n         * @private\n         * @type {import(\"./IconAnchorUnits.js\").default}\n         */\n        _this.anchorYUnits_ = options.anchorYUnits !== undefined ?\n            options.anchorYUnits : IconAnchorUnits.FRACTION;\n        /**\n         * @private\n         * @type {?string}\n         */\n        _this.crossOrigin_ =\n            options.crossOrigin !== undefined ? options.crossOrigin : null;\n        /**\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        var image = options.img !== undefined ? options.img : null;\n        /**\n         * @type {import(\"../size.js\").Size}\n         */\n        var imgSize = options.imgSize !== undefined ? options.imgSize : null;\n        /**\n         * @type {string|undefined}\n         */\n        var src = options.src;\n        assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n        assert(!image || (image && imgSize), 5); // `imgSize` must be set when `image` is provided\n        if ((src === undefined || src.length === 0) && image) {\n            src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n        }\n        assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n        /**\n         * @type {import(\"../ImageState.js\").default}\n         */\n        var imageState = options.src !== undefined ?\n            ImageState.IDLE : ImageState.LOADED;\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color}\n         */\n        _this.color_ = options.color !== undefined ? asArray(options.color) : null;\n        /**\n         * @private\n         * @type {import(\"./IconImage.js\").default}\n         */\n        _this.iconImage_ = getIconImage(image, /** @type {string} */ (src), imgSize, _this.crossOrigin_, imageState, _this.color_);\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n        /**\n         * @private\n         * @type {import(\"./IconOrigin.js\").default}\n         */\n        _this.offsetOrigin_ = options.offsetOrigin !== undefined ?\n            options.offsetOrigin : IconOrigin.TOP_LEFT;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.origin_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.size_ = options.size !== undefined ? options.size : null;\n        return _this;\n    }\n    /**\n     * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n     * @return {Icon} The cloned style.\n     * @api\n     */\n    Icon.prototype.clone = function () {\n        return new Icon({\n            anchor: this.anchor_.slice(),\n            anchorOrigin: this.anchorOrigin_,\n            anchorXUnits: this.anchorXUnits_,\n            anchorYUnits: this.anchorYUnits_,\n            crossOrigin: this.crossOrigin_,\n            color: (this.color_ && this.color_.slice) ? this.color_.slice() : this.color_ || undefined,\n            src: this.getSrc(),\n            offset: this.offset_.slice(),\n            offsetOrigin: this.offsetOrigin_,\n            size: this.size_ !== null ? this.size_.slice() : undefined,\n            opacity: this.getOpacity(),\n            scale: this.getScale(),\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView()\n        });\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Icon.prototype.getAnchor = function () {\n        if (this.normalizedAnchor_) {\n            return this.normalizedAnchor_;\n        }\n        var anchor = this.anchor_;\n        var size = this.getSize();\n        if (this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\n            this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n            if (!size) {\n                return null;\n            }\n            anchor = this.anchor_.slice();\n            if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n                anchor[0] *= size[0];\n            }\n            if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n                anchor[1] *= size[1];\n            }\n        }\n        if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n            if (!size) {\n                return null;\n            }\n            if (anchor === this.anchor_) {\n                anchor = this.anchor_.slice();\n            }\n            if (this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\n                this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                anchor[0] = -anchor[0] + size[0];\n            }\n            if (this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\n                this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                anchor[1] = -anchor[1] + size[1];\n            }\n        }\n        this.normalizedAnchor_ = anchor;\n        return this.normalizedAnchor_;\n    };\n    /**\n     * Set the anchor point. The anchor determines the center point for the\n     * symbolizer.\n     *\n     * @param {Array<number>} anchor Anchor.\n     * @api\n     */\n    Icon.prototype.setAnchor = function (anchor) {\n        this.anchor_ = anchor;\n        this.normalizedAnchor_ = null;\n    };\n    /**\n     * Get the icon color.\n     * @return {import(\"../color.js\").Color} Color.\n     * @api\n     */\n    Icon.prototype.getColor = function () {\n        return this.color_;\n    };\n    /**\n     * Get the image icon.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n     * @override\n     * @api\n     */\n    Icon.prototype.getImage = function (pixelRatio) {\n        return this.iconImage_.getImage(pixelRatio);\n    };\n    /**\n     * @override\n     */\n    Icon.prototype.getImageSize = function () {\n        return this.iconImage_.getSize();\n    };\n    /**\n     * @override\n     */\n    Icon.prototype.getHitDetectionImageSize = function () {\n        return this.getImageSize();\n    };\n    /**\n     * @override\n     */\n    Icon.prototype.getImageState = function () {\n        return this.iconImage_.getImageState();\n    };\n    /**\n     * @override\n     */\n    Icon.prototype.getHitDetectionImage = function (pixelRatio) {\n        return this.iconImage_.getHitDetectionImage(pixelRatio);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Icon.prototype.getOrigin = function () {\n        if (this.origin_) {\n            return this.origin_;\n        }\n        var offset = this.offset_;\n        if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n            var size = this.getSize();\n            var iconImageSize = this.iconImage_.getSize();\n            if (!size || !iconImageSize) {\n                return null;\n            }\n            offset = offset.slice();\n            if (this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\n                this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                offset[0] = iconImageSize[0] - size[0] - offset[0];\n            }\n            if (this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\n                this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                offset[1] = iconImageSize[1] - size[1] - offset[1];\n            }\n        }\n        this.origin_ = offset;\n        return this.origin_;\n    };\n    /**\n     * Get the image URL.\n     * @return {string|undefined} Image src.\n     * @api\n     */\n    Icon.prototype.getSrc = function () {\n        return this.iconImage_.getSrc();\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Icon.prototype.getSize = function () {\n        return !this.size_ ? this.iconImage_.getSize() : this.size_;\n    };\n    /**\n     * @override\n     */\n    Icon.prototype.listenImageChange = function (listener) {\n        this.iconImage_.addEventListener(EventType.CHANGE, listener);\n    };\n    /**\n     * Load not yet loaded URI.\n     * When rendering a feature with an icon style, the vector renderer will\n     * automatically call this method. However, you might want to call this\n     * method yourself for preloading or other purposes.\n     * @override\n     * @api\n     */\n    Icon.prototype.load = function () {\n        this.iconImage_.load();\n    };\n    /**\n     * @override\n     */\n    Icon.prototype.unlistenImageChange = function (listener) {\n        this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n    };\n    return Icon;\n}(ImageStyle));\nexport default Icon;\n//# sourceMappingURL=Icon.js.map","import React, { useEffect, useContext, useRef } from \"react\";\nimport { MapContext } from \"./MapContext\";\nimport LineString from \"ol/geom/LineString\";\nimport Feature from \"ol/Feature\";\nimport { fromLonLat } from \"ol/proj\";\nimport { Point } from \"ol/geom\";\nimport { Vector as VectorLayer } from \"ol/layer.js\";\nimport { Vector as VectorSource } from \"ol/source.js\";\nimport { Stroke, Style, Icon } from \"ol/style.js\";\n\nexport const arrowhead = function(\n  strings,\n  color = \"black\",\n  width = 450,\n  height = 450\n) {\n  return `<svg width=\"${width}\" height=\"${height}\" xmlns=\"http://www.w3.org/2000/svg\">\n <g>\n   <path fill=\"${color}\" d=\"m383.14099,226.420068c0,-7.933762 -3.521484,-15.869483 -10.548501,-21.920508l-221.347637,-190.414199c-14.080238,-12.11283 -36.908931,-12.11283 -50.983474,0c-14.074542,12.10793 -14.074542,31.742887 0,43.856697l195.857609,168.47801l-195.843938,168.48487c-14.074542,12.10793 -14.074542,31.745827 0,43.852777c14.074542,12.118711 36.8964,12.118711 50.976638,0l221.348776,-190.411259c7.025878,-6.053965 10.540526,-13.989687 10.540526,-21.926388z\"/>\n </g>\n</svg>`;\n};\n\nexport default function LineStringLayer(props) {\n  const context = useContext(MapContext);\n  const source = useRef(null);\n  const layer = useRef(null);\n  const arrow = useRef(null);\n\n  function getPointLongLat(point) {\n    if (Array.isArray(point)) {\n      return point;\n    }\n    let geo = point.geometry || point.location;\n    const latlng = geo.coordinates || [\n      geo.long || geo.longitude || 0,\n      geo.lat || geo.latitude || 0\n    ];\n    return latlng;\n  }\n  const buildFeatures = () => {\n    console.log(\"updating polyline features\");\n    const line_feature = new Feature({\n      geometry: new LineString(\n        props.features.map(feature => {\n          return fromLonLat(getPointLongLat(feature));\n        })\n      ),\n      featureType: \"LineString\",\n      data: props.features\n    });\n    source.current.addFeature(line_feature);\n  };\n\n  useEffect(() => {\n    const arrow_svg = arrowhead`${props.arrowColor}${props.width}${props.height}`;\n    arrow.current = \"data:image/svg+xml,\" + arrow_svg;\n  }, [props.arrowColor, props.width, props.height]);\n\n  useEffect(() => {\n    if (source.current && context.map) {\n      source.current.clear();\n      buildFeatures();\n\n      return () => {\n        console.log(\"clearing polyline features\");\n        source.current.clear();\n      };\n    }\n  }, [props.features]);\n\n  useEffect(() => {\n    if (context.map) {\n      console.log(\"creating polyline layer source\");\n      source.current = new VectorSource();\n\n      layer.current = new VectorLayer({\n        projection: props.projection || \"EPSG:4326\",\n        source: source.current,\n        style: feature => {\n          var geometry = feature.getGeometry();\n          var styles = [\n            // linestring\n            new Style({\n              stroke: new Stroke({\n                color: props.lineColor || \"#ffcc33\",\n                width: props.lineWidth || 2\n              })\n            })\n          ];\n\n          if (props.arrows) {\n            geometry.forEachSegment((start, end) => {\n              var dx = end[0] - start[0];\n              var dy = end[1] - start[1];\n              var rotation = Math.atan2(dy, dx);\n              // arrows\n              styles.push(\n                new Style({\n                  geometry: new Point(end),\n                  image: new Icon({\n                    src: arrow.current,\n                    anchor: [0.5, 0.5],\n                    rotateWithView: true,\n                    rotation: -rotation,\n                    scale: 0.04\n                  })\n                })\n              );\n            });\n          }\n\n          return styles;\n        }\n      });\n\n      context.map.addLayer(layer.current);\n\n      if (props.features) {\n        buildFeatures();\n      }\n\n      return () => {\n        context.map.removeLayer(layer.current);\n      };\n    }\n  }, [context.map]);\n\n  useEffect(() => {\n    if (layer.current) {\n      layer.current.setVisible(!props.hidden);\n    }\n  }, [props.hidden]);\n\n  return null;\n}\n","import React, { useState } from 'react';\n\nimport { MapContext } from './MapContext';\n\nexport default function MapProvider(props) {\n  const [map, setMap] = useState();\n  const { children } = props;\n\n  return (\n    <MapContext.Provider value={{ map, setMap }}>\n      {children}\n    </MapContext.Provider>\n  );\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nvar MapEvent = /** @class */ (function (_super) {\n    __extends(MapEvent, _super);\n    /**\n     * @param {string} type Event type.\n     * @param {import(\"./PluggableMap.js\").default} map Map.\n     * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     */\n    function MapEvent(type, map, opt_frameState) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The map where the event occurred.\n         * @type {import(\"./PluggableMap.js\").default}\n         * @api\n         */\n        _this.map = map;\n        /**\n         * The frame state at the time of the event.\n         * @type {?import(\"./PluggableMap.js\").FrameState}\n         * @api\n         */\n        _this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n        return _this;\n    }\n    return MapEvent;\n}(Event));\nexport default MapEvent;\n//# sourceMappingURL=MapEvent.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n */\nvar MapBrowserEvent = /** @class */ (function (_super) {\n    __extends(MapBrowserEvent, _super);\n    /**\n     * @param {string} type Event type.\n     * @param {import(\"./PluggableMap.js\").default} map Map.\n     * @param {Event} browserEvent Browser event.\n     * @param {boolean=} opt_dragging Is the map currently being dragged?\n     * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     */\n    function MapBrowserEvent(type, map, browserEvent, opt_dragging, opt_frameState) {\n        var _this = _super.call(this, type, map, opt_frameState) || this;\n        /**\n         * The original browser event.\n         * @const\n         * @type {Event}\n         * @api\n         */\n        _this.originalEvent = browserEvent;\n        /**\n         * The map pixel relative to the viewport corresponding to the original browser event.\n         * @type {?import(\"./pixel.js\").Pixel}\n         */\n        _this.pixel_ = null;\n        /**\n         * The coordinate in the user projection corresponding to the original browser event.\n         * @type {?import(\"./coordinate.js\").Coordinate}\n         */\n        _this.coordinate_ = null;\n        /**\n         * Indicates if the map is currently being dragged. Only set for\n         * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n         *\n         * @type {boolean}\n         * @api\n         */\n        _this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n        return _this;\n    }\n    Object.defineProperty(MapBrowserEvent.prototype, \"pixel\", {\n        /**\n         * The map pixel relative to the viewport corresponding to the original browser event.\n         * @type {import(\"./pixel.js\").Pixel}\n         * @api\n         */\n        get: function () {\n            if (!this.pixel_) {\n                this.pixel_ = this.map.getEventPixel(this.originalEvent);\n            }\n            return this.pixel_;\n        },\n        set: function (pixel) {\n            this.pixel_ = pixel;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MapBrowserEvent.prototype, \"coordinate\", {\n        /**\n         * The coordinate corresponding to the original browser event.  This will be in the user\n         * projection if one is set.  Otherwise it will be in the view projection.\n         * @type {import(\"./coordinate.js\").Coordinate}\n         * @api\n         */\n        get: function () {\n            if (!this.coordinate_) {\n                this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n            }\n            return this.coordinate_;\n        },\n        set: function (coordinate) {\n            this.coordinate_ = coordinate;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Prevents the default browser action.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n     * @override\n     * @api\n     */\n    MapBrowserEvent.prototype.preventDefault = function () {\n        _super.prototype.preventDefault.call(this);\n        this.originalEvent.preventDefault();\n    };\n    /**\n     * Prevents further propagation of the current event.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n     * @override\n     * @api\n     */\n    MapBrowserEvent.prototype.stopPropagation = function () {\n        _super.prototype.stopPropagation.call(this);\n        this.originalEvent.stopPropagation();\n    };\n    return MapBrowserEvent;\n}(MapEvent));\nexport default MapBrowserEvent;\n//# sourceMappingURL=MapBrowserEvent.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapBrowserPointerEvent\n */\nimport MapBrowserEvent from './MapBrowserEvent.js';\nvar MapBrowserPointerEvent = /** @class */ (function (_super) {\n    __extends(MapBrowserPointerEvent, _super);\n    /**\n     * @param {string} type Event type.\n     * @param {import(\"./PluggableMap.js\").default} map Map.\n     * @param {PointerEvent} pointerEvent Pointer event.\n     * @param {boolean=} opt_dragging Is the map currently being dragged?\n     * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     */\n    function MapBrowserPointerEvent(type, map, pointerEvent, opt_dragging, opt_frameState) {\n        var _this = _super.call(this, type, map, pointerEvent, opt_dragging, opt_frameState) || this;\n        /**\n         * @const\n         * @type {PointerEvent}\n         */\n        _this.pointerEvent = pointerEvent;\n        return _this;\n    }\n    return MapBrowserPointerEvent;\n}(MapBrowserEvent));\nexport default MapBrowserPointerEvent;\n//# sourceMappingURL=MapBrowserPointerEvent.js.map","/**\n * @module ol/pointer/EventType\n */\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n    POINTERMOVE: 'pointermove',\n    POINTERDOWN: 'pointerdown',\n    POINTERUP: 'pointerup',\n    POINTEROVER: 'pointerover',\n    POINTEROUT: 'pointerout',\n    POINTERENTER: 'pointerenter',\n    POINTERLEAVE: 'pointerleave',\n    POINTERCANCEL: 'pointercancel'\n};\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/MapBrowserEventHandler\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport '@openlayers/pepjs';\nimport { DEVICE_PIXEL_RATIO } from './has.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapBrowserPointerEvent from './MapBrowserPointerEvent.js';\nimport { listen, unlistenByKey } from './events.js';\nimport EventTarget from './events/Target.js';\nimport PointerEventType from './pointer/EventType.js';\nvar MapBrowserEventHandler = /** @class */ (function (_super) {\n    __extends(MapBrowserEventHandler, _super);\n    /**\n     * @param {import(\"./PluggableMap.js\").default} map The map with the viewport to listen to events on.\n     * @param {number=} moveTolerance The minimal distance the pointer must travel to trigger a move.\n     */\n    function MapBrowserEventHandler(map, moveTolerance) {\n        var _this = _super.call(this, map) || this;\n        /**\n         * This is the element that we will listen to the real events on.\n         * @type {import(\"./PluggableMap.js\").default}\n         * @private\n         */\n        _this.map_ = map;\n        /**\n         * @type {any}\n         * @private\n         */\n        _this.clickTimeoutId_;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.dragging_ = false;\n        /**\n         * @type {!Array<import(\"./events.js\").EventsKey>}\n         * @private\n         */\n        _this.dragListenerKeys_ = [];\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.moveTolerance_ = moveTolerance ?\n            moveTolerance * DEVICE_PIXEL_RATIO : DEVICE_PIXEL_RATIO;\n        /**\n         * The most recent \"down\" type event (or null if none have occurred).\n         * Set on pointerdown.\n         * @type {PointerEvent}\n         * @private\n         */\n        _this.down_ = null;\n        var element = _this.map_.getViewport();\n        element.setAttribute('touch-action', 'none');\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.activePointers_ = 0;\n        /**\n         * @type {!Object<number, boolean>}\n         * @private\n         */\n        _this.trackedTouches_ = {};\n        _this.element_ = element;\n        /**\n         * @type {?import(\"./events.js\").EventsKey}\n         * @private\n         */\n        _this.pointerdownListenerKey_ = listen(element, PointerEventType.POINTERDOWN, _this.handlePointerDown_, _this);\n        /**\n         * @type {?import(\"./events.js\").EventsKey}\n         * @private\n         */\n        _this.relayedListenerKey_ = listen(element, PointerEventType.POINTERMOVE, _this.relayEvent_, _this);\n        return _this;\n    }\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.emulateClick_ = function (pointerEvent) {\n        var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.CLICK, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        if (this.clickTimeoutId_ !== undefined) {\n            // double-click\n            clearTimeout(this.clickTimeoutId_);\n            this.clickTimeoutId_ = undefined;\n            newEvent = new MapBrowserPointerEvent(MapBrowserEventType.DBLCLICK, this.map_, pointerEvent);\n            this.dispatchEvent(newEvent);\n        }\n        else {\n            // click\n            this.clickTimeoutId_ = setTimeout(function () {\n                this.clickTimeoutId_ = undefined;\n                var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.SINGLECLICK, this.map_, pointerEvent);\n                this.dispatchEvent(newEvent);\n            }.bind(this), 250);\n        }\n    };\n    /**\n     * Keeps track on how many pointers are currently active.\n     *\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.updateActivePointers_ = function (pointerEvent) {\n        var event = pointerEvent;\n        if (event.type == MapBrowserEventType.POINTERUP ||\n            event.type == MapBrowserEventType.POINTERCANCEL) {\n            delete this.trackedTouches_[event.pointerId];\n        }\n        else if (event.type == MapBrowserEventType.POINTERDOWN) {\n            this.trackedTouches_[event.pointerId] = true;\n        }\n        this.activePointers_ = Object.keys(this.trackedTouches_).length;\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerUp_ = function (pointerEvent) {\n        this.updateActivePointers_(pointerEvent);\n        var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.POINTERUP, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        // We emulate click events on left mouse button click, touch contact, and pen\n        // contact. isMouseActionButton returns true in these cases (evt.button is set\n        // to 0).\n        // See http://www.w3.org/TR/pointerevents/#button-states\n        // We only fire click, singleclick, and doubleclick if nobody has called\n        // event.stopPropagation() or event.preventDefault().\n        if (!newEvent.propagationStopped && !this.dragging_ && this.isMouseActionButton_(pointerEvent)) {\n            this.emulateClick_(this.down_);\n        }\n        if (this.activePointers_ === 0) {\n            this.dragListenerKeys_.forEach(unlistenByKey);\n            this.dragListenerKeys_.length = 0;\n            this.dragging_ = false;\n            this.down_ = null;\n        }\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @return {boolean} If the left mouse button was pressed.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.isMouseActionButton_ = function (pointerEvent) {\n        return pointerEvent.button === 0;\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerDown_ = function (pointerEvent) {\n        this.updateActivePointers_(pointerEvent);\n        var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.POINTERDOWN, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        this.down_ = pointerEvent;\n        if (this.dragListenerKeys_.length === 0) {\n            this.dragListenerKeys_.push(listen(document, MapBrowserEventType.POINTERMOVE, this.handlePointerMove_, this), listen(document, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this), \n            /* Note that the listener for `pointercancel is set up on\n             * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n             * the `pointerup` and `pointermove` listeners.\n             *\n             * The reason for this is the following: `TouchSource.vacuumTouches_()`\n             * issues `pointercancel` events, when there was no `touchend` for a\n             * `touchstart`. Now, let's say a first `touchstart` is registered on\n             * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n             * But `documentPointerEventHandler_` doesn't know about the first\n             * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n             * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n             * only registered there.\n             */\n            listen(this.element_, MapBrowserEventType.POINTERCANCEL, this.handlePointerUp_, this));\n        }\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerMove_ = function (pointerEvent) {\n        // Between pointerdown and pointerup, pointermove events are triggered.\n        // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n        // moved a significant distance.\n        if (this.isMoving_(pointerEvent)) {\n            this.dragging_ = true;\n            var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.POINTERDRAG, this.map_, pointerEvent, this.dragging_);\n            this.dispatchEvent(newEvent);\n        }\n    };\n    /**\n     * Wrap and relay a pointer event.  Note that this requires that the type\n     * string for the MapBrowserPointerEvent matches the PointerEvent type.\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.relayEvent_ = function (pointerEvent) {\n        var dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n        this.dispatchEvent(new MapBrowserPointerEvent(pointerEvent.type, this.map_, pointerEvent, dragging));\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @return {boolean} Is moving.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.isMoving_ = function (pointerEvent) {\n        return this.dragging_ ||\n            Math.abs(pointerEvent.clientX - this.down_.clientX) > this.moveTolerance_ ||\n            Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_;\n    };\n    /**\n     * @inheritDoc\n     */\n    MapBrowserEventHandler.prototype.disposeInternal = function () {\n        if (this.relayedListenerKey_) {\n            unlistenByKey(this.relayedListenerKey_);\n            this.relayedListenerKey_ = null;\n        }\n        if (this.pointerdownListenerKey_) {\n            unlistenByKey(this.pointerdownListenerKey_);\n            this.pointerdownListenerKey_ = null;\n        }\n        this.dragListenerKeys_.forEach(unlistenByKey);\n        this.dragListenerKeys_.length = 0;\n        this.element_ = null;\n        _super.prototype.disposeInternal.call(this);\n    };\n    return MapBrowserEventHandler;\n}(EventTarget));\nexport default MapBrowserEventHandler;\n//# sourceMappingURL=MapBrowserEventHandler.js.map","/**\n * @module ol/MapProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    LAYERGROUP: 'layergroup',\n    SIZE: 'size',\n    TARGET: 'target',\n    VIEW: 'view'\n};\n//# sourceMappingURL=MapProperty.js.map","/**\n * @module ol/TileState\n */\n/**\n * @enum {number}\n */\nexport default {\n    IDLE: 0,\n    LOADING: 1,\n    LOADED: 2,\n    /**\n     * Indicates that tile loading failed\n     * @type {number}\n     */\n    ERROR: 3,\n    EMPTY: 4,\n    ABORT: 5\n};\n//# sourceMappingURL=TileState.js.map","/**\n * @module ol/structs/PriorityQueue\n */\nimport { assert } from '../asserts.js';\nimport { clear } from '../obj.js';\n/**\n * @type {number}\n */\nexport var DROP = Infinity;\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See http://closure-library.googlecode.com/svn/docs/closure_goog_structs_heap.js.source.html\n * and http://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nvar PriorityQueue = /** @class */ (function () {\n    /**\n     * @param {function(T): number} priorityFunction Priority function.\n     * @param {function(T): string} keyFunction Key function.\n     */\n    function PriorityQueue(priorityFunction, keyFunction) {\n        /**\n         * @type {function(T): number}\n         * @private\n         */\n        this.priorityFunction_ = priorityFunction;\n        /**\n         * @type {function(T): string}\n         * @private\n         */\n        this.keyFunction_ = keyFunction;\n        /**\n         * @type {Array<T>}\n         * @private\n         */\n        this.elements_ = [];\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        this.priorities_ = [];\n        /**\n         * @type {!Object<string, boolean>}\n         * @private\n         */\n        this.queuedElements_ = {};\n    }\n    /**\n     * FIXME empty description for jsdoc\n     */\n    PriorityQueue.prototype.clear = function () {\n        this.elements_.length = 0;\n        this.priorities_.length = 0;\n        clear(this.queuedElements_);\n    };\n    /**\n     * Remove and return the highest-priority element. O(log N).\n     * @return {T} Element.\n     */\n    PriorityQueue.prototype.dequeue = function () {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var element = elements[0];\n        if (elements.length == 1) {\n            elements.length = 0;\n            priorities.length = 0;\n        }\n        else {\n            elements[0] = elements.pop();\n            priorities[0] = priorities.pop();\n            this.siftUp_(0);\n        }\n        var elementKey = this.keyFunction_(element);\n        delete this.queuedElements_[elementKey];\n        return element;\n    };\n    /**\n     * Enqueue an element. O(log N).\n     * @param {T} element Element.\n     * @return {boolean} The element was added to the queue.\n     */\n    PriorityQueue.prototype.enqueue = function (element) {\n        assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n        var priority = this.priorityFunction_(element);\n        if (priority != DROP) {\n            this.elements_.push(element);\n            this.priorities_.push(priority);\n            this.queuedElements_[this.keyFunction_(element)] = true;\n            this.siftDown_(0, this.elements_.length - 1);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @return {number} Count.\n     */\n    PriorityQueue.prototype.getCount = function () {\n        return this.elements_.length;\n    };\n    /**\n     * Gets the index of the left child of the node at the given index.\n     * @param {number} index The index of the node to get the left child for.\n     * @return {number} The index of the left child.\n     * @private\n     */\n    PriorityQueue.prototype.getLeftChildIndex_ = function (index) {\n        return index * 2 + 1;\n    };\n    /**\n     * Gets the index of the right child of the node at the given index.\n     * @param {number} index The index of the node to get the right child for.\n     * @return {number} The index of the right child.\n     * @private\n     */\n    PriorityQueue.prototype.getRightChildIndex_ = function (index) {\n        return index * 2 + 2;\n    };\n    /**\n     * Gets the index of the parent of the node at the given index.\n     * @param {number} index The index of the node to get the parent for.\n     * @return {number} The index of the parent.\n     * @private\n     */\n    PriorityQueue.prototype.getParentIndex_ = function (index) {\n        return (index - 1) >> 1;\n    };\n    /**\n     * Make this a heap. O(N).\n     * @private\n     */\n    PriorityQueue.prototype.heapify_ = function () {\n        var i;\n        for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n            this.siftUp_(i);\n        }\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    PriorityQueue.prototype.isEmpty = function () {\n        return this.elements_.length === 0;\n    };\n    /**\n     * @param {string} key Key.\n     * @return {boolean} Is key queued.\n     */\n    PriorityQueue.prototype.isKeyQueued = function (key) {\n        return key in this.queuedElements_;\n    };\n    /**\n     * @param {T} element Element.\n     * @return {boolean} Is queued.\n     */\n    PriorityQueue.prototype.isQueued = function (element) {\n        return this.isKeyQueued(this.keyFunction_(element));\n    };\n    /**\n     * @param {number} index The index of the node to move down.\n     * @private\n     */\n    PriorityQueue.prototype.siftUp_ = function (index) {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var count = elements.length;\n        var element = elements[index];\n        var priority = priorities[index];\n        var startIndex = index;\n        while (index < (count >> 1)) {\n            var lIndex = this.getLeftChildIndex_(index);\n            var rIndex = this.getRightChildIndex_(index);\n            var smallerChildIndex = rIndex < count &&\n                priorities[rIndex] < priorities[lIndex] ?\n                rIndex : lIndex;\n            elements[index] = elements[smallerChildIndex];\n            priorities[index] = priorities[smallerChildIndex];\n            index = smallerChildIndex;\n        }\n        elements[index] = element;\n        priorities[index] = priority;\n        this.siftDown_(startIndex, index);\n    };\n    /**\n     * @param {number} startIndex The index of the root.\n     * @param {number} index The index of the node to move up.\n     * @private\n     */\n    PriorityQueue.prototype.siftDown_ = function (startIndex, index) {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var element = elements[index];\n        var priority = priorities[index];\n        while (index > startIndex) {\n            var parentIndex = this.getParentIndex_(index);\n            if (priorities[parentIndex] > priority) {\n                elements[index] = elements[parentIndex];\n                priorities[index] = priorities[parentIndex];\n                index = parentIndex;\n            }\n            else {\n                break;\n            }\n        }\n        elements[index] = element;\n        priorities[index] = priority;\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    PriorityQueue.prototype.reprioritize = function () {\n        var priorityFunction = this.priorityFunction_;\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var index = 0;\n        var n = elements.length;\n        var element, i, priority;\n        for (i = 0; i < n; ++i) {\n            element = elements[i];\n            priority = priorityFunction(element);\n            if (priority == DROP) {\n                delete this.queuedElements_[this.keyFunction_(element)];\n            }\n            else {\n                priorities[index] = priority;\n                elements[index++] = element;\n            }\n        }\n        elements.length = index;\n        priorities.length = index;\n        this.heapify_();\n    };\n    return PriorityQueue;\n}());\nexport default PriorityQueue;\n//# sourceMappingURL=PriorityQueue.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/TileQueue\n */\nimport TileState from './TileState.js';\nimport EventType from './events/EventType.js';\nimport PriorityQueue from './structs/PriorityQueue.js';\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\nvar TileQueue = /** @class */ (function (_super) {\n    __extends(TileQueue, _super);\n    /**\n     * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n     * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n     */\n    function TileQueue(tilePriorityFunction, tileChangeCallback) {\n        var _this = _super.call(this, \n        /**\n         * @param {Array} element Element.\n         * @return {number} Priority.\n         */\n        function (element) {\n            return tilePriorityFunction.apply(null, element);\n        }, \n        /**\n         * @param {Array} element Element.\n         * @return {string} Key.\n         */\n        function (element) {\n            return ( /** @type {import(\"./Tile.js\").default} */(element[0]).getKey());\n        }) || this;\n        /** @private */\n        _this.boundHandleTileChange_ = _this.handleTileChange.bind(_this);\n        /**\n         * @private\n         * @type {function(): ?}\n         */\n        _this.tileChangeCallback_ = tileChangeCallback;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.tilesLoading_ = 0;\n        /**\n         * @private\n         * @type {!Object<string,boolean>}\n         */\n        _this.tilesLoadingKeys_ = {};\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    TileQueue.prototype.enqueue = function (element) {\n        var added = _super.prototype.enqueue.call(this, element);\n        if (added) {\n            var tile = element[0];\n            tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n        }\n        return added;\n    };\n    /**\n     * @return {number} Number of tiles loading.\n     */\n    TileQueue.prototype.getTilesLoading = function () {\n        return this.tilesLoading_;\n    };\n    /**\n     * @param {import(\"./events/Event.js\").default} event Event.\n     * @protected\n     */\n    TileQueue.prototype.handleTileChange = function (event) {\n        var tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n        var state = tile.getState();\n        if (tile.hifi && state === TileState.LOADED || state === TileState.ERROR ||\n            state === TileState.EMPTY || state === TileState.ABORT) {\n            tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n            var tileKey = tile.getKey();\n            if (tileKey in this.tilesLoadingKeys_) {\n                delete this.tilesLoadingKeys_[tileKey];\n                --this.tilesLoading_;\n            }\n            this.tileChangeCallback_();\n        }\n    };\n    /**\n     * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n     * @param {number} maxNewLoads Maximum number of new tiles to load.\n     */\n    TileQueue.prototype.loadMoreTiles = function (maxTotalLoading, maxNewLoads) {\n        var newLoads = 0;\n        var abortedTiles = false;\n        var state, tile, tileKey;\n        while (this.tilesLoading_ < maxTotalLoading && newLoads < maxNewLoads &&\n            this.getCount() > 0) {\n            tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n            tileKey = tile.getKey();\n            state = tile.getState();\n            if (state === TileState.ABORT) {\n                abortedTiles = true;\n            }\n            else if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n                this.tilesLoadingKeys_[tileKey] = true;\n                ++this.tilesLoading_;\n                ++newLoads;\n                tile.load();\n            }\n        }\n        if (newLoads === 0 && abortedTiles) {\n            // Do not stop the render loop when all wanted tiles were aborted due to\n            // a small, saturated tile cache.\n            this.tileChangeCallback_();\n        }\n    };\n    return TileQueue;\n}(PriorityQueue));\nexport default TileQueue;\n//# sourceMappingURL=TileQueue.js.map","/**\n * @module ol/tilegrid/common\n */\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport var DEFAULT_MAX_ZOOM = 42;\n/**\n * Default tile size.\n * @type {number}\n */\nexport var DEFAULT_TILE_SIZE = 256;\n//# sourceMappingURL=common.js.map","/**\n * @module ol/centerconstraint\n */\nimport { clamp } from './math.js';\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n    return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, opt_isMoving) {\n        if (center) {\n            var viewWidth = onlyCenter ? 0 : size[0] * resolution;\n            var viewHeight = onlyCenter ? 0 : size[1] * resolution;\n            var minX = extent[0] + viewWidth / 2;\n            var maxX = extent[2] - viewWidth / 2;\n            var minY = extent[1] + viewHeight / 2;\n            var maxY = extent[3] - viewHeight / 2;\n            // note: when zooming out of bounds, min and max values for x and y may\n            // end up inverted (min > max); this has to be accounted for\n            if (minX > maxX) {\n                minX = maxX = (maxX + minX) / 2;\n            }\n            if (minY > maxY) {\n                minY = maxY = (maxY + minY) / 2;\n            }\n            var x = clamp(center[0], minX, maxX);\n            var y = clamp(center[1], minY, maxY);\n            var ratio = 30 * resolution;\n            // during an interaction, allow some overscroll\n            if (opt_isMoving && smooth) {\n                x += -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n                    ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n                y += -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n                    ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n            }\n            return [x, y];\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate=} center Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n    return center;\n}\n//# sourceMappingURL=centerconstraint.js.map","/**\n * @module ol/resolutionconstraint\n */\nimport { linearFindNearest } from './array.js';\nimport { getHeight, getWidth } from './extent.js';\nimport { clamp } from './math.js';\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n/**\n * Returns a modified resolution taking into acocunt the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent=} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(resolution, maxExtent, viewportSize) {\n    var xResolution = getWidth(maxExtent) / viewportSize[0];\n    var yResolution = getHeight(maxExtent) / viewportSize[1];\n    return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n    var result = Math.min(resolution, maxResolution);\n    var ratio = 50;\n    result *= Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio + 1;\n    if (minResolution) {\n        result = Math.max(result, minResolution);\n        result /= Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) / ratio + 1;\n    }\n    return clamp(result, minResolution / 2, maxResolution * 2);\n}\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(resolutions, opt_smooth, opt_maxExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var maxResolution = resolutions[0];\n            var minResolution = resolutions[resolutions.length - 1];\n            var cappedMaxRes = opt_maxExtent ?\n                getViewportClampedResolution(maxResolution, opt_maxExtent, size) :\n                maxResolution;\n            // during interacting or animating, allow intermediary values\n            if (opt_isMoving) {\n                var smooth = opt_smooth !== undefined ? opt_smooth : true;\n                if (!smooth) {\n                    return clamp(resolution, minResolution, cappedMaxRes);\n                }\n                return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n            }\n            var capped = Math.min(cappedMaxRes, resolution);\n            var z = Math.floor(linearFindNearest(resolutions, capped, direction));\n            if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n                return resolutions[z + 1];\n            }\n            return resolutions[z];\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number=} opt_minResolution Minimum resolution.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(power, maxResolution, opt_minResolution, opt_smooth, opt_maxExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var cappedMaxRes = opt_maxExtent ?\n                getViewportClampedResolution(maxResolution, opt_maxExtent, size) :\n                maxResolution;\n            var minResolution = opt_minResolution !== undefined ? opt_minResolution : 0;\n            // during interacting or animating, allow intermediary values\n            if (opt_isMoving) {\n                var smooth = opt_smooth !== undefined ? opt_smooth : true;\n                if (!smooth) {\n                    return clamp(resolution, minResolution, cappedMaxRes);\n                }\n                return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n            }\n            var tolerance = 1e-9;\n            var minZoomLevel = Math.ceil(Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance);\n            var offset = -direction * (0.5 - tolerance) + 0.5;\n            var capped = Math.min(cappedMaxRes, resolution);\n            var cappedZoomLevel = Math.floor(Math.log(maxResolution / capped) / Math.log(power) + offset);\n            var zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n            var newResolution = maxResolution / Math.pow(power, zoomLevel);\n            return clamp(newResolution, minResolution, cappedMaxRes);\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(maxResolution, minResolution, opt_smooth, opt_maxExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var cappedMaxRes = opt_maxExtent ?\n                getViewportClampedResolution(maxResolution, opt_maxExtent, size) :\n                maxResolution;\n            var smooth = opt_smooth !== undefined ? opt_smooth : true;\n            if (!smooth || !opt_isMoving) {\n                return clamp(resolution, minResolution, cappedMaxRes);\n            }\n            return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n//# sourceMappingURL=resolutionconstraint.js.map","/**\n * @module ol/rotationconstraint\n */\nimport { toRadians } from './math.js';\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n    if (rotation !== undefined) {\n        return 0;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n    if (rotation !== undefined) {\n        return rotation;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n    var theta = 2 * Math.PI / n;\n    return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n        if (opt_isMoving) {\n            return rotation;\n        }\n        if (rotation !== undefined) {\n            rotation = Math.floor(rotation / theta + 0.5) * theta;\n            return rotation;\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number=} opt_tolerance Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n    var tolerance = opt_tolerance || toRadians(5);\n    return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n        if (opt_isMoving) {\n            return rotation;\n        }\n        if (rotation !== undefined) {\n            if (Math.abs(rotation) <= tolerance) {\n                return 0;\n            }\n            else {\n                return rotation;\n            }\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n//# sourceMappingURL=rotationconstraint.js.map","/**\n * @module ol/ViewProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    CENTER: 'center',\n    RESOLUTION: 'resolution',\n    ROTATION: 'rotation'\n};\n//# sourceMappingURL=ViewProperty.js.map","/**\n * @module ol/geom/flat/area\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n    var twiceArea = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        twiceArea += y1 * x2 - x1 * y2;\n        x1 = x2;\n        y1 = y2;\n    }\n    return twiceArea / 2;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n    var area = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        area += linearRing(flatCoordinates, offset, end, stride);\n        offset = end;\n    }\n    return area;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n    var area = 0;\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        area += linearRings(flatCoordinates, offset, ends, stride);\n        offset = ends[ends.length - 1];\n    }\n    return area;\n}\n//# sourceMappingURL=area.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/LinearRing\n */\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { linearRing as linearRingArea } from './flat/area.js';\nimport { assignClosestPoint, maxSquaredDelta } from './flat/closest.js';\nimport { deflateCoordinates } from './flat/deflate.js';\nimport { inflateCoordinates } from './flat/inflate.js';\nimport { douglasPeucker } from './flat/simplify.js';\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nvar LinearRing = /** @class */ (function (_super) {\n    __extends(LinearRing, _super);\n    /**\n     * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n     * @param {GeometryLayout=} opt_layout Layout.\n     */\n    function LinearRing(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n        }\n        else {\n            _this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!LinearRing} Clone.\n     * @override\n     * @api\n     */\n    LinearRing.prototype.clone = function () {\n        return new LinearRing(this.flatCoordinates.slice(), this.layout);\n    };\n    /**\n     * @inheritDoc\n     */\n    LinearRing.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(maxSquaredDelta(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestPoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * Return the area of the linear ring on projected plane.\n     * @return {number} Area (on projected plane).\n     * @api\n     */\n    LinearRing.prototype.getArea = function () {\n        return linearRingArea(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * Return the coordinates of the linear ring.\n     * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n     * @override\n     * @api\n     */\n    LinearRing.prototype.getCoordinates = function () {\n        return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * @inheritDoc\n     */\n    LinearRing.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        simplifiedFlatCoordinates.length = douglasPeucker(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n        return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    LinearRing.prototype.getType = function () {\n        return GeometryType.LINEAR_RING;\n    };\n    /**\n     * @inheritDoc\n     */\n    LinearRing.prototype.intersectsExtent = function (extent) {\n        return false;\n    };\n    /**\n     * Set the coordinates of the linear ring.\n     * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @override\n     * @api\n     */\n    LinearRing.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 1);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return LinearRing;\n}(SimpleGeometry));\nexport default LinearRing;\n//# sourceMappingURL=LinearRing.js.map","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport { numberSafeCompareFunction } from '../../array.js';\nimport { linearRingsContainsXY } from './contains.js';\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(flatCoordinates, offset, ends, stride, flatCenters, flatCentersOffset, opt_dest) {\n    var i, ii, x, x1, x2, y1, y2;\n    var y = flatCenters[flatCentersOffset + 1];\n    /** @type {Array<number>} */\n    var intersections = [];\n    // Calculate intersections with the horizontal line\n    for (var r = 0, rr = ends.length; r < rr; ++r) {\n        var end = ends[r];\n        x1 = flatCoordinates[end - stride];\n        y1 = flatCoordinates[end - stride + 1];\n        for (i = offset; i < end; i += stride) {\n            x2 = flatCoordinates[i];\n            y2 = flatCoordinates[i + 1];\n            if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n                x = (y - y1) / (y2 - y1) * (x2 - x1) + x1;\n                intersections.push(x);\n            }\n            x1 = x2;\n            y1 = y2;\n        }\n    }\n    // Find the longest segment of the horizontal line that has its center point\n    // inside the linear ring.\n    var pointX = NaN;\n    var maxSegmentLength = -Infinity;\n    intersections.sort(numberSafeCompareFunction);\n    x1 = intersections[0];\n    for (i = 1, ii = intersections.length; i < ii; ++i) {\n        x2 = intersections[i];\n        var segmentLength = Math.abs(x2 - x1);\n        if (segmentLength > maxSegmentLength) {\n            x = (x1 + x2) / 2;\n            if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n                pointX = x;\n                maxSegmentLength = segmentLength;\n            }\n        }\n        x1 = x2;\n    }\n    if (isNaN(pointX)) {\n        // There is no horizontal line that has its center point inside the linear\n        // ring.  Use the center of the the linear ring's extent.\n        pointX = flatCenters[flatCentersOffset];\n    }\n    if (opt_dest) {\n        opt_dest.push(pointX, y, maxSegmentLength);\n        return opt_dest;\n    }\n    else {\n        return [pointX, y, maxSegmentLength];\n    }\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(flatCoordinates, offset, endss, stride, flatCenters) {\n    var interiorPoints = [];\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        interiorPoints = getInteriorPointOfArray(flatCoordinates, offset, ends, stride, flatCenters, 2 * i, interiorPoints);\n        offset = ends[ends.length - 1];\n    }\n    return interiorPoints;\n}\n//# sourceMappingURL=interiorpoint.js.map","/**\n * @module ol/geom/flat/reverse\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n    while (offset < end - stride) {\n        for (var i = 0; i < stride; ++i) {\n            var tmp = flatCoordinates[offset + i];\n            flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n            flatCoordinates[end - stride + i] = tmp;\n        }\n        offset += stride;\n        end -= stride;\n    }\n}\n//# sourceMappingURL=reverse.js.map","/**\n * @module ol/geom/flat/orient\n */\nimport { coordinates as reverseCoordinates } from './reverse.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n    // http://tinyurl.com/clockwise-method\n    // https://github.com/OSGeo/gdal/blob/trunk/gdal/ogr/ogrlinearring.cpp\n    var edge = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        edge += (x2 - x1) * (y2 + y1);\n        x1 = x2;\n        y1 = y2;\n    }\n    return edge > 0;\n}\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right) {\n    var right = opt_right !== undefined ? opt_right : false;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        var isClockwise = linearRingIsClockwise(flatCoordinates, offset, end, stride);\n        if (i === 0) {\n            if ((right && isClockwise) || (!right && !isClockwise)) {\n                return false;\n            }\n        }\n        else {\n            if ((right && !isClockwise) || (!right && isClockwise)) {\n                return false;\n            }\n        }\n        offset = end;\n    }\n    return true;\n}\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(flatCoordinates, offset, endss, stride, opt_right) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right)) {\n            return false;\n        }\n        if (ends.length) {\n            offset = ends[ends.length - 1];\n        }\n    }\n    return true;\n}\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(flatCoordinates, offset, ends, stride, opt_right) {\n    var right = opt_right !== undefined ? opt_right : false;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        var isClockwise = linearRingIsClockwise(flatCoordinates, offset, end, stride);\n        var reverse = i === 0 ?\n            (right && isClockwise) || (!right && !isClockwise) :\n            (right && !isClockwise) || (!right && isClockwise);\n        if (reverse) {\n            reverseCoordinates(flatCoordinates, offset, end, stride);\n        }\n        offset = end;\n    }\n    return offset;\n}\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(flatCoordinates, offset, endss, stride, opt_right) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        offset = orientLinearRings(flatCoordinates, offset, endss[i], stride, opt_right);\n    }\n    return offset;\n}\n//# sourceMappingURL=orient.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Polygon\n */\nimport { extend } from '../array.js';\nimport { closestSquaredDistanceXY, getCenter } from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { offset as sphereOffset } from '../sphere.js';\nimport { linearRings as linearRingsArea } from './flat/area.js';\nimport { assignClosestArrayPoint, arrayMaxSquaredDelta } from './flat/closest.js';\nimport { linearRingsContainsXY } from './flat/contains.js';\nimport { deflateCoordinatesArray } from './flat/deflate.js';\nimport { inflateCoordinatesArray } from './flat/inflate.js';\nimport { getInteriorPointOfArray } from './flat/interiorpoint.js';\nimport { intersectsLinearRingArray } from './flat/intersectsextent.js';\nimport { linearRingsAreOriented, orientLinearRings } from './flat/orient.js';\nimport { quantizeArray } from './flat/simplify.js';\nimport { modulo } from '../math.js';\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nvar Polygon = /** @class */ (function (_super) {\n    __extends(Polygon, _super);\n    /**\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n     *     Array of linear rings that define the polygon. The first linear ring of the\n     *     array defines the outer-boundary or surface of the polygon. Each subsequent\n     *     linear ring defines a hole in the surface of the polygon. A linear ring is\n     *     an array of vertices' coordinates where the first coordinate and the last are\n     *     equivalent. (For internal use, flat coordinates in combination with\n     *     `opt_layout` and `opt_ends` are also accepted.)\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @param {Array<number>=} opt_ends Ends (for internal use with flat coordinates).\n     */\n    function Polygon(coordinates, opt_layout, opt_ends) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        _this.ends_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.flatInteriorPointRevision_ = -1;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.flatInteriorPoint_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.orientedRevision_ = -1;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.orientedFlatCoordinates_ = null;\n        if (opt_layout !== undefined && opt_ends) {\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n            _this.ends_ = opt_ends;\n        }\n        else {\n            _this.setCoordinates(/** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed linear ring to this polygon.\n     * @param {LinearRing} linearRing Linear ring.\n     * @api\n     */\n    Polygon.prototype.appendLinearRing = function (linearRing) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n        }\n        else {\n            extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n        }\n        this.ends_.push(this.flatCoordinates.length);\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!Polygon} Clone.\n     * @override\n     * @api\n     */\n    Polygon.prototype.clone = function () {\n        return new Polygon(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n    };\n    /**\n     * @inheritDoc\n     */\n    Polygon.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(this.flatCoordinates, 0, this.ends_, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestArrayPoint(this.flatCoordinates, 0, this.ends_, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * @inheritDoc\n     */\n    Polygon.prototype.containsXY = function (x, y) {\n        return linearRingsContainsXY(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, x, y);\n    };\n    /**\n     * Return the area of the polygon on projected plane.\n     * @return {number} Area (on projected plane).\n     * @api\n     */\n    Polygon.prototype.getArea = function () {\n        return linearRingsArea(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride);\n    };\n    /**\n     * Get the coordinate array for this geometry.  This array has the structure\n     * of a GeoJSON coordinate array for polygons.\n     *\n     * @param {boolean=} opt_right Orient coordinates according to the right-hand\n     *     rule (counter-clockwise for exterior and clockwise for interior rings).\n     *     If `false`, coordinates will be oriented according to the left-hand rule\n     *     (clockwise for exterior and counter-clockwise for interior rings).\n     *     By default, coordinate orientation will depend on how the geometry was\n     *     constructed.\n     * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n     * @override\n     * @api\n     */\n    Polygon.prototype.getCoordinates = function (opt_right) {\n        var flatCoordinates;\n        if (opt_right !== undefined) {\n            flatCoordinates = this.getOrientedFlatCoordinates().slice();\n            orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, opt_right);\n        }\n        else {\n            flatCoordinates = this.flatCoordinates;\n        }\n        return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n    };\n    /**\n     * @return {Array<number>} Ends.\n     */\n    Polygon.prototype.getEnds = function () {\n        return this.ends_;\n    };\n    /**\n     * @return {Array<number>} Interior point.\n     */\n    Polygon.prototype.getFlatInteriorPoint = function () {\n        if (this.flatInteriorPointRevision_ != this.getRevision()) {\n            var flatCenter = getCenter(this.getExtent());\n            this.flatInteriorPoint_ = getInteriorPointOfArray(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, flatCenter, 0);\n            this.flatInteriorPointRevision_ = this.getRevision();\n        }\n        return this.flatInteriorPoint_;\n    };\n    /**\n     * Return an interior point of the polygon.\n     * @return {Point} Interior point as XYM coordinate, where M is the\n     * length of the horizontal intersection that the point belongs to.\n     * @api\n     */\n    Polygon.prototype.getInteriorPoint = function () {\n        return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n    };\n    /**\n     * Return the number of rings of the polygon,  this includes the exterior\n     * ring and any interior rings.\n     *\n     * @return {number} Number of rings.\n     * @api\n     */\n    Polygon.prototype.getLinearRingCount = function () {\n        return this.ends_.length;\n    };\n    /**\n     * Return the Nth linear ring of the polygon geometry. Return `null` if the\n     * given index is out of range.\n     * The exterior linear ring is available at index `0` and the interior rings\n     * at index `1` and beyond.\n     *\n     * @param {number} index Index.\n     * @return {LinearRing} Linear ring.\n     * @api\n     */\n    Polygon.prototype.getLinearRing = function (index) {\n        if (index < 0 || this.ends_.length <= index) {\n            return null;\n        }\n        return new LinearRing(this.flatCoordinates.slice(index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n    };\n    /**\n     * Return the linear rings of the polygon.\n     * @return {Array<LinearRing>} Linear rings.\n     * @api\n     */\n    Polygon.prototype.getLinearRings = function () {\n        var layout = this.layout;\n        var flatCoordinates = this.flatCoordinates;\n        var ends = this.ends_;\n        var linearRings = [];\n        var offset = 0;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var linearRing = new LinearRing(flatCoordinates.slice(offset, end), layout);\n            linearRings.push(linearRing);\n            offset = end;\n        }\n        return linearRings;\n    };\n    /**\n     * @return {Array<number>} Oriented flat coordinates.\n     */\n    Polygon.prototype.getOrientedFlatCoordinates = function () {\n        if (this.orientedRevision_ != this.getRevision()) {\n            var flatCoordinates = this.flatCoordinates;\n            if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n                this.orientedFlatCoordinates_ = flatCoordinates;\n            }\n            else {\n                this.orientedFlatCoordinates_ = flatCoordinates.slice();\n                this.orientedFlatCoordinates_.length =\n                    orientLinearRings(this.orientedFlatCoordinates_, 0, this.ends_, this.stride);\n            }\n            this.orientedRevision_ = this.getRevision();\n        }\n        return this.orientedFlatCoordinates_;\n    };\n    /**\n     * @inheritDoc\n     */\n    Polygon.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        var simplifiedEnds = [];\n        simplifiedFlatCoordinates.length = quantizeArray(this.flatCoordinates, 0, this.ends_, this.stride, Math.sqrt(squaredTolerance), simplifiedFlatCoordinates, 0, simplifiedEnds);\n        return new Polygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Polygon.prototype.getType = function () {\n        return GeometryType.POLYGON;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Polygon.prototype.intersectsExtent = function (extent) {\n        return intersectsLinearRingArray(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the polygon.\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @override\n     * @api\n     */\n    Polygon.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 2);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        var ends = deflateCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n        this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n        this.changed();\n    };\n    return Polygon;\n}(SimpleGeometry));\nexport default Polygon;\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices.\n * @param {number=} opt_n Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number=} opt_sphereRadius Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n    var n = opt_n ? opt_n : 32;\n    /** @type {Array<number>} */\n    var flatCoordinates = [];\n    for (var i = 0; i < n; ++i) {\n        extend(flatCoordinates, sphereOffset(center, radius, 2 * Math.PI * i / n, opt_sphereRadius));\n    }\n    flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n    return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var flatCoordinates = [minX, minY, minX, maxY, maxX, maxY, maxX, minY, minX, minY];\n    return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number=} opt_sides Number of sides of the polygon. Default is 32.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n    var sides = opt_sides ? opt_sides : 32;\n    var stride = circle.getStride();\n    var layout = circle.getLayout();\n    var center = circle.getCenter();\n    var arrayLength = stride * (sides + 1);\n    var flatCoordinates = new Array(arrayLength);\n    for (var i = 0; i < arrayLength; i += stride) {\n        flatCoordinates[i] = 0;\n        flatCoordinates[i + 1] = 0;\n        for (var j = 2; j < stride; j++) {\n            flatCoordinates[i + j] = center[j];\n        }\n    }\n    var ends = [flatCoordinates.length];\n    var polygon = new Polygon(flatCoordinates, layout, ends);\n    makeRegular(polygon, center, circle.getRadius(), opt_angle);\n    return polygon;\n}\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n    var flatCoordinates = polygon.getFlatCoordinates();\n    var stride = polygon.getStride();\n    var sides = flatCoordinates.length / stride - 1;\n    var startAngle = opt_angle ? opt_angle : 0;\n    for (var i = 0; i <= sides; ++i) {\n        var offset = i * stride;\n        var angle = startAngle + (modulo(i, sides) * 2 * Math.PI / sides);\n        flatCoordinates[offset] = center[0] + (radius * Math.cos(angle));\n        flatCoordinates[offset + 1] = center[1] + (radius * Math.sin(angle));\n    }\n    polygon.changed();\n}\n//# sourceMappingURL=Polygon.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/View\n */\nimport { DEFAULT_TILE_SIZE } from './tilegrid/common.js';\nimport { getUid } from './util.js';\nimport { VOID } from './functions.js';\nimport { createExtent, none as centerNone } from './centerconstraint.js';\nimport BaseObject from './Object.js';\nimport { createSnapToResolutions, createSnapToPower } from './resolutionconstraint.js';\nimport { createSnapToZero, createSnapToN, none as rotationNone, disable } from './rotationconstraint.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport { linearFindNearest } from './array.js';\nimport { assert } from './asserts.js';\nimport { add as addCoordinate, rotate as rotateCoordinate, equals as coordinatesEqual } from './coordinate.js';\nimport { inAndOut } from './easing.js';\nimport { getForViewAndSize, getCenter, getHeight, getWidth, isEmpty } from './extent.js';\nimport GeometryType from './geom/GeometryType.js';\nimport { fromExtent as polygonFromExtent } from './geom/Polygon.js';\nimport { clamp, modulo } from './math.js';\nimport { assign } from './obj.js';\nimport { createProjection, METERS_PER_UNIT, toUserCoordinate, toUserExtent, fromUserCoordinate, fromUserExtent, getUserProjection } from './proj.js';\nimport Units from './proj/Units.js';\nimport { equals } from './coordinate.js';\nimport { easeOut } from './easing.js';\nimport { createMinMaxResolution } from './resolutionconstraint.js';\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter]\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter]\n * @property {number} [sourceResolution]\n * @property {number} [targetResolution]\n * @property {number} [sourceRotation]\n * @property {number} [targetRotation]\n * @property {import(\"./coordinate.js\").Coordinate} [anchor]\n * @property {number} start\n * @property {number} duration\n * @property {boolean} complete\n * @property {function(number):number} easing\n * @property {function(boolean)} callback\n */\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center\n * @property {import(\"./resolutionconstraint.js\").Type} resolution\n * @property {import(\"./rotationconstraint.js\").Type} rotation\n */\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean)} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions to determine the\n * resolution constraint. If set the `maxResolution`, `minResolution`,\n * `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n */\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center\n * @property {import(\"./proj/Projection.js\").default} projection\n * @property {number} resolution\n * @property {number} rotation\n * @property {number} zoom\n */\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nvar DEFAULT_MIN_ZOOM = 0;\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `opt_anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nvar View = /** @class */ (function (_super) {\n    __extends(View, _super);\n    /**\n     * @param {ViewOptions=} opt_options View options.\n     */\n    function View(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = assign({}, opt_options);\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.hints_ = [0, 0];\n        /**\n         * @private\n         * @type {Array<Array<Animation>>}\n         */\n        _this.animations_ = [];\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.updateAnimationKey_;\n        /**\n         * @private\n         * @const\n         * @type {import(\"./proj/Projection.js\").default}\n         */\n        _this.projection_ = createProjection(options.projection, 'EPSG:3857');\n        /**\n         * @private\n         * @type {import(\"./coordinate.js\").Coordinate|undefined}\n         */\n        _this.targetCenter_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.targetResolution_;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.targetRotation_;\n        if (options.center) {\n            options.center = fromUserCoordinate(options.center, _this.projection_);\n        }\n        if (options.extent) {\n            options.extent = fromUserExtent(options.extent, _this.projection_);\n        }\n        _this.applyOptions_(options);\n        return _this;\n    }\n    /**\n     * Set up the view with the given options.\n     * @param {ViewOptions} options View options.\n     */\n    View.prototype.applyOptions_ = function (options) {\n        /**\n         * @type {Object<string, *>}\n         */\n        var properties = {};\n        var resolutionConstraintInfo = createResolutionConstraint(options);\n        /**\n         * @private\n         * @type {number}\n         */\n        this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minResolution_ = resolutionConstraintInfo.minResolution;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n        /**\n         * @private\n         * @type {Array<number>|undefined}\n         */\n        this.resolutions_ = options.resolutions;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minZoom_ = resolutionConstraintInfo.minZoom;\n        var centerConstraint = createCenterConstraint(options);\n        var resolutionConstraint = resolutionConstraintInfo.constraint;\n        var rotationConstraint = createRotationConstraint(options);\n        /**\n         * @private\n         * @type {Constraints}\n         */\n        this.constraints_ = {\n            center: centerConstraint,\n            resolution: resolutionConstraint,\n            rotation: rotationConstraint\n        };\n        this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n        this.setCenterInternal(options.center !== undefined ? options.center : null);\n        if (options.resolution !== undefined) {\n            this.setResolution(options.resolution);\n        }\n        else if (options.zoom !== undefined) {\n            this.setZoom(options.zoom);\n        }\n        this.resolveConstraints(0);\n        this.setProperties(properties);\n        /**\n         * @private\n         * @type {ViewOptions}\n         */\n        this.options_ = options;\n    };\n    /**\n     * Get an updated version of the view options used to construct the view.  The\n     * current resolution (or zoom), center, and rotation are applied to any stored\n     * options.  The provided options can be used to apply new min/max zoom or\n     * resolution limits.\n     * @param {ViewOptions} newOptions New options to be applied.\n     * @return {ViewOptions} New options updated with the current view state.\n     */\n    View.prototype.getUpdatedOptions_ = function (newOptions) {\n        var options = assign({}, this.options_);\n        // preserve resolution (or zoom)\n        if (options.resolution !== undefined) {\n            options.resolution = this.getResolution();\n        }\n        else {\n            options.zoom = this.getZoom();\n        }\n        // preserve center\n        options.center = this.getCenterInternal();\n        // preserve rotation\n        options.rotation = this.getRotation();\n        return assign({}, options, newOptions);\n    };\n    /**\n     * Animate the view.  The view's center, zoom (or resolution), and rotation\n     * can be animated for smooth transitions between view states.  For example,\n     * to animate the view to a new zoom level:\n     *\n     *     view.animate({zoom: view.getZoom() + 1});\n     *\n     * By default, the animation lasts one second and uses in-and-out easing.  You\n     * can customize this behavior by including `duration` (in milliseconds) and\n     * `easing` options (see {@link module:ol/easing}).\n     *\n     * To chain together multiple animations, call the method with multiple\n     * animation objects.  For example, to first zoom and then pan:\n     *\n     *     view.animate({zoom: 10}, {center: [0, 0]});\n     *\n     * If you provide a function as the last argument to the animate method, it\n     * will get called at the end of an animation series.  The callback will be\n     * called with `true` if the animation series completed on its own or `false`\n     * if it was cancelled.\n     *\n     * Animations are cancelled by user interactions (e.g. dragging the map) or by\n     * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n     * (or another method that calls one of these).\n     *\n     * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n     *     options.  Multiple animations can be run in series by passing multiple\n     *     options objects.  To run multiple animations in parallel, call the method\n     *     multiple times.  An optional callback can be provided as a final\n     *     argument.  The callback will be called with a boolean indicating whether\n     *     the animation completed without being cancelled.\n     * @api\n     */\n    View.prototype.animate = function (var_args) {\n        if (this.isDef() && !this.getAnimating()) {\n            this.resolveConstraints(0);\n        }\n        var args = new Array(arguments.length);\n        for (var i = 0; i < args.length; ++i) {\n            var options = arguments[i];\n            if (options.center) {\n                options = assign({}, options);\n                options.center = fromUserCoordinate(options.center, this.getProjection());\n            }\n            if (options.anchor) {\n                options = assign({}, options);\n                options.anchor = fromUserCoordinate(options.anchor, this.getProjection());\n            }\n            args[i] = options;\n        }\n        this.animateInternal.apply(this, args);\n    };\n    /**\n     * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n     */\n    View.prototype.animateInternal = function (var_args) {\n        var animationCount = arguments.length;\n        var callback;\n        if (animationCount > 1 && typeof arguments[animationCount - 1] === 'function') {\n            callback = arguments[animationCount - 1];\n            --animationCount;\n        }\n        if (!this.isDef()) {\n            // if view properties are not yet set, shortcut to the final state\n            var state = arguments[animationCount - 1];\n            if (state.center) {\n                this.setCenterInternal(state.center);\n            }\n            if (state.zoom !== undefined) {\n                this.setZoom(state.zoom);\n            }\n            if (state.rotation !== undefined) {\n                this.setRotation(state.rotation);\n            }\n            if (callback) {\n                animationCallback(callback, true);\n            }\n            return;\n        }\n        var start = Date.now();\n        var center = this.targetCenter_.slice();\n        var resolution = this.targetResolution_;\n        var rotation = this.targetRotation_;\n        var series = [];\n        for (var i = 0; i < animationCount; ++i) {\n            var options = /** @type {AnimationOptions} */ (arguments[i]);\n            var animation = {\n                start: start,\n                complete: false,\n                anchor: options.anchor,\n                duration: options.duration !== undefined ? options.duration : 1000,\n                easing: options.easing || inAndOut,\n                callback: callback\n            };\n            if (options.center) {\n                animation.sourceCenter = center;\n                animation.targetCenter = options.center.slice();\n                center = animation.targetCenter;\n            }\n            if (options.zoom !== undefined) {\n                animation.sourceResolution = resolution;\n                animation.targetResolution = this.getResolutionForZoom(options.zoom);\n                resolution = animation.targetResolution;\n            }\n            else if (options.resolution) {\n                animation.sourceResolution = resolution;\n                animation.targetResolution = options.resolution;\n                resolution = animation.targetResolution;\n            }\n            if (options.rotation !== undefined) {\n                animation.sourceRotation = rotation;\n                var delta = modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n                animation.targetRotation = rotation + delta;\n                rotation = animation.targetRotation;\n            }\n            // check if animation is a no-op\n            if (isNoopAnimation(animation)) {\n                animation.complete = true;\n                // we still push it onto the series for callback handling\n            }\n            else {\n                start += animation.duration;\n            }\n            series.push(animation);\n        }\n        this.animations_.push(series);\n        this.setHint(ViewHint.ANIMATING, 1);\n        this.updateAnimations_();\n    };\n    /**\n     * Determine if the view is being animated.\n     * @return {boolean} The view is being animated.\n     * @api\n     */\n    View.prototype.getAnimating = function () {\n        return this.hints_[ViewHint.ANIMATING] > 0;\n    };\n    /**\n     * Determine if the user is interacting with the view, such as panning or zooming.\n     * @return {boolean} The view is being interacted with.\n     * @api\n     */\n    View.prototype.getInteracting = function () {\n        return this.hints_[ViewHint.INTERACTING] > 0;\n    };\n    /**\n     * Cancel any ongoing animations.\n     * @api\n     */\n    View.prototype.cancelAnimations = function () {\n        this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n        for (var i = 0, ii = this.animations_.length; i < ii; ++i) {\n            var series = this.animations_[i];\n            if (series[0].callback) {\n                animationCallback(series[0].callback, false);\n            }\n        }\n        this.animations_.length = 0;\n    };\n    /**\n     * Update all animations.\n     */\n    View.prototype.updateAnimations_ = function () {\n        if (this.updateAnimationKey_ !== undefined) {\n            cancelAnimationFrame(this.updateAnimationKey_);\n            this.updateAnimationKey_ = undefined;\n        }\n        if (!this.getAnimating()) {\n            return;\n        }\n        var now = Date.now();\n        var more = false;\n        for (var i = this.animations_.length - 1; i >= 0; --i) {\n            var series = this.animations_[i];\n            var seriesComplete = true;\n            for (var j = 0, jj = series.length; j < jj; ++j) {\n                var animation = series[j];\n                if (animation.complete) {\n                    continue;\n                }\n                var elapsed = now - animation.start;\n                var fraction = animation.duration > 0 ? elapsed / animation.duration : 1;\n                if (fraction >= 1) {\n                    animation.complete = true;\n                    fraction = 1;\n                }\n                else {\n                    seriesComplete = false;\n                }\n                var progress = animation.easing(fraction);\n                if (animation.sourceCenter) {\n                    var x0 = animation.sourceCenter[0];\n                    var y0 = animation.sourceCenter[1];\n                    var x1 = animation.targetCenter[0];\n                    var y1 = animation.targetCenter[1];\n                    var x = x0 + progress * (x1 - x0);\n                    var y = y0 + progress * (y1 - y0);\n                    this.targetCenter_ = [x, y];\n                }\n                if (animation.sourceResolution && animation.targetResolution) {\n                    var resolution = progress === 1 ?\n                        animation.targetResolution :\n                        animation.sourceResolution + progress * (animation.targetResolution - animation.sourceResolution);\n                    if (animation.anchor) {\n                        var size = this.getSizeFromViewport_(this.getRotation());\n                        var constrainedResolution = this.constraints_.resolution(resolution, 0, size, true);\n                        this.targetCenter_ = this.calculateCenterZoom(constrainedResolution, animation.anchor);\n                    }\n                    this.targetResolution_ = resolution;\n                    this.applyTargetState_(true);\n                }\n                if (animation.sourceRotation !== undefined && animation.targetRotation !== undefined) {\n                    var rotation = progress === 1 ?\n                        modulo(animation.targetRotation + Math.PI, 2 * Math.PI) - Math.PI :\n                        animation.sourceRotation + progress * (animation.targetRotation - animation.sourceRotation);\n                    if (animation.anchor) {\n                        var constrainedRotation = this.constraints_.rotation(rotation, true);\n                        this.targetCenter_ = this.calculateCenterRotate(constrainedRotation, animation.anchor);\n                    }\n                    this.targetRotation_ = rotation;\n                }\n                this.applyTargetState_(true);\n                more = true;\n                if (!animation.complete) {\n                    break;\n                }\n            }\n            if (seriesComplete) {\n                this.animations_[i] = null;\n                this.setHint(ViewHint.ANIMATING, -1);\n                var callback = series[0].callback;\n                if (callback) {\n                    animationCallback(callback, true);\n                }\n            }\n        }\n        // prune completed series\n        this.animations_ = this.animations_.filter(Boolean);\n        if (more && this.updateAnimationKey_ === undefined) {\n            this.updateAnimationKey_ = requestAnimationFrame(this.updateAnimations_.bind(this));\n        }\n    };\n    /**\n     * @param {number} rotation Target rotation.\n     * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n     */\n    View.prototype.calculateCenterRotate = function (rotation, anchor) {\n        var center;\n        var currentCenter = this.getCenterInternal();\n        if (currentCenter !== undefined) {\n            center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n            rotateCoordinate(center, rotation - this.getRotation());\n            addCoordinate(center, anchor);\n        }\n        return center;\n    };\n    /**\n     * @param {number} resolution Target resolution.\n     * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n     */\n    View.prototype.calculateCenterZoom = function (resolution, anchor) {\n        var center;\n        var currentCenter = this.getCenterInternal();\n        var currentResolution = this.getResolution();\n        if (currentCenter !== undefined && currentResolution !== undefined) {\n            var x = anchor[0] - resolution * (anchor[0] - currentCenter[0]) / currentResolution;\n            var y = anchor[1] - resolution * (anchor[1] - currentCenter[1]) / currentResolution;\n            center = [x, y];\n        }\n        return center;\n    };\n    /**\n     * @private\n     * @param {number=} opt_rotation Take into account the rotation of the viewport when giving the size\n     * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n     */\n    View.prototype.getSizeFromViewport_ = function (opt_rotation) {\n        var size = [100, 100];\n        var selector = '.ol-viewport[data-view=\"' + getUid(this) + '\"]';\n        var element = document.querySelector(selector);\n        if (element) {\n            var metrics = getComputedStyle(element);\n            size[0] = parseInt(metrics.width, 10);\n            size[1] = parseInt(metrics.height, 10);\n        }\n        if (opt_rotation) {\n            var w = size[0];\n            var h = size[1];\n            size[0] = Math.abs(w * Math.cos(opt_rotation)) + Math.abs(h * Math.sin(opt_rotation));\n            size[1] = Math.abs(w * Math.sin(opt_rotation)) + Math.abs(h * Math.cos(opt_rotation));\n        }\n        return size;\n    };\n    /**\n     * Get the view center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.getCenter = function () {\n        var center = this.getCenterInternal();\n        if (!center) {\n            return center;\n        }\n        return toUserCoordinate(center, this.getProjection());\n    };\n    /**\n     * Get the view center without transforming to user projection.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n     */\n    View.prototype.getCenterInternal = function () {\n        return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(ViewProperty.CENTER));\n    };\n    /**\n     * @return {Constraints} Constraints.\n     */\n    View.prototype.getConstraints = function () {\n        return this.constraints_;\n    };\n    /**\n     * @param {Array<number>=} opt_hints Destination array.\n     * @return {Array<number>} Hint.\n     */\n    View.prototype.getHints = function (opt_hints) {\n        if (opt_hints !== undefined) {\n            opt_hints[0] = this.hints_[0];\n            opt_hints[1] = this.hints_[1];\n            return opt_hints;\n        }\n        else {\n            return this.hints_.slice();\n        }\n    };\n    /**\n     * Calculate the extent for the current view state and the passed size.\n     * The size is the pixel dimensions of the box into which the calculated extent\n     * should fit. In most cases you want to get the extent of the entire map,\n     * that is `map.getSize()`.\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size. If not provided, the size of the\n     * first map that uses this view will be used.\n     * @return {import(\"./extent.js\").Extent} Extent.\n     * @api\n     */\n    View.prototype.calculateExtent = function (opt_size) {\n        var extent = this.calculateExtentInternal(opt_size);\n        return toUserExtent(extent, this.getProjection());\n    };\n    /**\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size. If not provided, the size of the\n     * first map that uses this view will be used.\n     * @return {import(\"./extent.js\").Extent} Extent.\n     */\n    View.prototype.calculateExtentInternal = function (opt_size) {\n        var size = opt_size || this.getSizeFromViewport_();\n        var center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (this.getCenterInternal());\n        assert(center, 1); // The view center is not defined\n        var resolution = /** @type {!number} */ (this.getResolution());\n        assert(resolution !== undefined, 2); // The view resolution is not defined\n        var rotation = /** @type {!number} */ (this.getRotation());\n        assert(rotation !== undefined, 3); // The view rotation is not defined\n        return getForViewAndSize(center, resolution, rotation, size);\n    };\n    /**\n     * Get the maximum resolution of the view.\n     * @return {number} The maximum resolution of the view.\n     * @api\n     */\n    View.prototype.getMaxResolution = function () {\n        return this.maxResolution_;\n    };\n    /**\n     * Get the minimum resolution of the view.\n     * @return {number} The minimum resolution of the view.\n     * @api\n     */\n    View.prototype.getMinResolution = function () {\n        return this.minResolution_;\n    };\n    /**\n     * Get the maximum zoom level for the view.\n     * @return {number} The maximum zoom level.\n     * @api\n     */\n    View.prototype.getMaxZoom = function () {\n        return /** @type {number} */ (this.getZoomForResolution(this.minResolution_));\n    };\n    /**\n     * Set a new maximum zoom level for the view.\n     * @param {number} zoom The maximum zoom level.\n     * @api\n     */\n    View.prototype.setMaxZoom = function (zoom) {\n        this.applyOptions_(this.getUpdatedOptions_({ maxZoom: zoom }));\n    };\n    /**\n     * Get the minimum zoom level for the view.\n     * @return {number} The minimum zoom level.\n     * @api\n     */\n    View.prototype.getMinZoom = function () {\n        return /** @type {number} */ (this.getZoomForResolution(this.maxResolution_));\n    };\n    /**\n     * Set a new minimum zoom level for the view.\n     * @param {number} zoom The minimum zoom level.\n     * @api\n     */\n    View.prototype.setMinZoom = function (zoom) {\n        this.applyOptions_(this.getUpdatedOptions_({ minZoom: zoom }));\n    };\n    /**\n     * Set whether the view shoud allow intermediary zoom levels.\n     * @param {boolean} enabled Whether the resolution is constrained.\n     * @api\n     */\n    View.prototype.setConstrainResolution = function (enabled) {\n        this.applyOptions_(this.getUpdatedOptions_({ constrainResolution: enabled }));\n    };\n    /**\n     * Get the view projection.\n     * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n     * @api\n     */\n    View.prototype.getProjection = function () {\n        return this.projection_;\n    };\n    /**\n     * Get the view resolution.\n     * @return {number|undefined} The resolution of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.getResolution = function () {\n        return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n    };\n    /**\n     * Get the resolutions for the view. This returns the array of resolutions\n     * passed to the constructor of the View, or undefined if none were given.\n     * @return {Array<number>|undefined} The resolutions of the view.\n     * @api\n     */\n    View.prototype.getResolutions = function () {\n        return this.resolutions_;\n    };\n    /**\n     * Get the resolution for a provided extent (in map units) and size (in pixels).\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size.\n     * @return {number} The resolution at which the provided extent will render at\n     *     the given size.\n     * @api\n     */\n    View.prototype.getResolutionForExtent = function (extent, opt_size) {\n        return this.getResolutionForExtentInternal(fromUserExtent(extent, this.getProjection()), opt_size);\n    };\n    /**\n     * Get the resolution for a provided extent (in map units) and size (in pixels).\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size.\n     * @return {number} The resolution at which the provided extent will render at\n     *     the given size.\n     */\n    View.prototype.getResolutionForExtentInternal = function (extent, opt_size) {\n        var size = opt_size || this.getSizeFromViewport_();\n        var xResolution = getWidth(extent) / size[0];\n        var yResolution = getHeight(extent) / size[1];\n        return Math.max(xResolution, yResolution);\n    };\n    /**\n     * Return a function that returns a value between 0 and 1 for a\n     * resolution. Exponential scaling is assumed.\n     * @param {number=} opt_power Power.\n     * @return {function(number): number} Resolution for value function.\n     */\n    View.prototype.getResolutionForValueFunction = function (opt_power) {\n        var power = opt_power || 2;\n        var maxResolution = this.maxResolution_;\n        var minResolution = this.minResolution_;\n        var max = Math.log(maxResolution / minResolution) / Math.log(power);\n        return (\n        /**\n         * @param {number} value Value.\n         * @return {number} Resolution.\n         */\n        function (value) {\n            var resolution = maxResolution / Math.pow(power, value * max);\n            return resolution;\n        });\n    };\n    /**\n     * Get the view rotation.\n     * @return {number} The rotation of the view in radians.\n     * @observable\n     * @api\n     */\n    View.prototype.getRotation = function () {\n        return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n    };\n    /**\n     * Return a function that returns a resolution for a value between\n     * 0 and 1. Exponential scaling is assumed.\n     * @param {number=} opt_power Power.\n     * @return {function(number): number} Value for resolution function.\n     */\n    View.prototype.getValueForResolutionFunction = function (opt_power) {\n        var power = opt_power || 2;\n        var maxResolution = this.maxResolution_;\n        var minResolution = this.minResolution_;\n        var max = Math.log(maxResolution / minResolution) / Math.log(power);\n        return (\n        /**\n         * @param {number} resolution Resolution.\n         * @return {number} Value.\n         */\n        function (resolution) {\n            var value = (Math.log(maxResolution / resolution) / Math.log(power)) / max;\n            return value;\n        });\n    };\n    /**\n     * @return {State} View state.\n     */\n    View.prototype.getState = function () {\n        var center = /** @type {import(\"./coordinate.js\").Coordinate} */ (this.getCenterInternal());\n        var projection = this.getProjection();\n        var resolution = /** @type {number} */ (this.getResolution());\n        var rotation = this.getRotation();\n        return {\n            center: center.slice(0),\n            projection: projection !== undefined ? projection : null,\n            resolution: resolution,\n            rotation: rotation,\n            zoom: this.getZoom()\n        };\n    };\n    /**\n     * Get the current zoom level. This method may return non-integer zoom levels\n     * if the view does not constrain the resolution, or if an interaction or\n     * animation is underway.\n     * @return {number|undefined} Zoom.\n     * @api\n     */\n    View.prototype.getZoom = function () {\n        var zoom;\n        var resolution = this.getResolution();\n        if (resolution !== undefined) {\n            zoom = this.getZoomForResolution(resolution);\n        }\n        return zoom;\n    };\n    /**\n     * Get the zoom level for a resolution.\n     * @param {number} resolution The resolution.\n     * @return {number|undefined} The zoom level for the provided resolution.\n     * @api\n     */\n    View.prototype.getZoomForResolution = function (resolution) {\n        var offset = this.minZoom_ || 0;\n        var max, zoomFactor;\n        if (this.resolutions_) {\n            var nearest = linearFindNearest(this.resolutions_, resolution, 1);\n            offset = nearest;\n            max = this.resolutions_[nearest];\n            if (nearest == this.resolutions_.length - 1) {\n                zoomFactor = 2;\n            }\n            else {\n                zoomFactor = max / this.resolutions_[nearest + 1];\n            }\n        }\n        else {\n            max = this.maxResolution_;\n            zoomFactor = this.zoomFactor_;\n        }\n        return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n    };\n    /**\n     * Get the resolution for a zoom level.\n     * @param {number} zoom Zoom level.\n     * @return {number} The view resolution for the provided zoom level.\n     * @api\n     */\n    View.prototype.getResolutionForZoom = function (zoom) {\n        if (this.resolutions_) {\n            if (this.resolutions_.length <= 1) {\n                return 0;\n            }\n            var baseLevel = clamp(Math.floor(zoom), 0, this.resolutions_.length - 2);\n            var zoomFactor = this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n            return this.resolutions_[baseLevel] / Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1));\n        }\n        else {\n            return this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_);\n        }\n    };\n    /**\n     * Fit the given geometry or extent based on the given map size and border.\n     * The size is pixel dimensions of the box to fit the extent into.\n     * In most cases you will want to use the map size, that is `map.getSize()`.\n     * Takes care of the map angle.\n     * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n     *     extent to fit the view to.\n     * @param {FitOptions=} opt_options Options.\n     * @api\n     */\n    View.prototype.fit = function (geometryOrExtent, opt_options) {\n        var options = assign({ size: this.getSizeFromViewport_() }, opt_options || {});\n        /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n        var geometry;\n        assert(Array.isArray(geometryOrExtent) || typeof /** @type {?} */ (geometryOrExtent).getSimplifiedGeometry === 'function', 24); // Invalid extent or geometry provided as `geometry`\n        if (Array.isArray(geometryOrExtent)) {\n            assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n            var extent = fromUserExtent(geometryOrExtent, this.getProjection());\n            geometry = polygonFromExtent(extent);\n        }\n        else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n            var extent = fromUserExtent(geometryOrExtent.getExtent(), this.getProjection());\n            geometry = polygonFromExtent(extent);\n            geometry.rotate(this.getRotation(), getCenter(extent));\n        }\n        else {\n            var userProjection = getUserProjection();\n            if (userProjection) {\n                geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry.clone().transform(userProjection, this.getProjection()));\n            }\n            else {\n                geometry = geometryOrExtent;\n            }\n        }\n        this.fitInternal(geometry, options);\n    };\n    /**\n     * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n     * @param {FitOptions=} opt_options Options.\n     */\n    View.prototype.fitInternal = function (geometry, opt_options) {\n        var options = opt_options || {};\n        var size = options.size;\n        if (!size) {\n            size = this.getSizeFromViewport_();\n        }\n        var padding = options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n        var nearest = options.nearest !== undefined ? options.nearest : false;\n        var minResolution;\n        if (options.minResolution !== undefined) {\n            minResolution = options.minResolution;\n        }\n        else if (options.maxZoom !== undefined) {\n            minResolution = this.getResolutionForZoom(options.maxZoom);\n        }\n        else {\n            minResolution = 0;\n        }\n        var coords = geometry.getFlatCoordinates();\n        // calculate rotated extent\n        var rotation = this.getRotation();\n        var cosAngle = Math.cos(-rotation);\n        var sinAngle = Math.sin(-rotation);\n        var minRotX = +Infinity;\n        var minRotY = +Infinity;\n        var maxRotX = -Infinity;\n        var maxRotY = -Infinity;\n        var stride = geometry.getStride();\n        for (var i = 0, ii = coords.length; i < ii; i += stride) {\n            var rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n            var rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n            minRotX = Math.min(minRotX, rotX);\n            minRotY = Math.min(minRotY, rotY);\n            maxRotX = Math.max(maxRotX, rotX);\n            maxRotY = Math.max(maxRotY, rotY);\n        }\n        // calculate resolution\n        var resolution = this.getResolutionForExtentInternal([minRotX, minRotY, maxRotX, maxRotY], [size[0] - padding[1] - padding[3], size[1] - padding[0] - padding[2]]);\n        resolution = isNaN(resolution) ? minResolution :\n            Math.max(resolution, minResolution);\n        resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n        // calculate center\n        sinAngle = -sinAngle; // go back to original rotation\n        var centerRotX = (minRotX + maxRotX) / 2;\n        var centerRotY = (minRotY + maxRotY) / 2;\n        centerRotX += (padding[1] - padding[3]) / 2 * resolution;\n        centerRotY += (padding[0] - padding[2]) / 2 * resolution;\n        var centerX = centerRotX * cosAngle - centerRotY * sinAngle;\n        var centerY = centerRotY * cosAngle + centerRotX * sinAngle;\n        var center = [centerX, centerY];\n        var callback = options.callback ? options.callback : VOID;\n        if (options.duration !== undefined) {\n            this.animateInternal({\n                resolution: resolution,\n                center: this.getConstrainedCenter(center, resolution),\n                duration: options.duration,\n                easing: options.easing\n            }, callback);\n        }\n        else {\n            this.targetResolution_ = resolution;\n            this.targetCenter_ = center;\n            this.applyTargetState_(false, true);\n            animationCallback(callback, true);\n        }\n    };\n    /**\n     * Center on coordinate and view position.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"./size.js\").Size} size Box pixel size.\n     * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n     * @api\n     */\n    View.prototype.centerOn = function (coordinate, size, position) {\n        this.centerOnInternal(fromUserCoordinate(coordinate, this.getProjection()), size, position);\n    };\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"./size.js\").Size} size Box pixel size.\n     * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n     */\n    View.prototype.centerOnInternal = function (coordinate, size, position) {\n        // calculate rotated position\n        var rotation = this.getRotation();\n        var cosAngle = Math.cos(-rotation);\n        var sinAngle = Math.sin(-rotation);\n        var rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n        var rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n        var resolution = this.getResolution();\n        rotX += (size[0] / 2 - position[0]) * resolution;\n        rotY += (position[1] - size[1] / 2) * resolution;\n        // go back to original angle\n        sinAngle = -sinAngle; // go back to original rotation\n        var centerX = rotX * cosAngle - rotY * sinAngle;\n        var centerY = rotY * cosAngle + rotX * sinAngle;\n        this.setCenterInternal([centerX, centerY]);\n    };\n    /**\n     * @return {boolean} Is defined.\n     */\n    View.prototype.isDef = function () {\n        return !!this.getCenterInternal() && this.getResolution() !== undefined;\n    };\n    /**\n     * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n     * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n     * @api\n     */\n    View.prototype.adjustCenter = function (deltaCoordinates) {\n        var center = toUserCoordinate(this.targetCenter_, this.getProjection());\n        this.setCenter([center[0] + deltaCoordinates[0], center[1] + deltaCoordinates[1]]);\n    };\n    /**\n     * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n     * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n     */\n    View.prototype.adjustCenterInternal = function (deltaCoordinates) {\n        var center = this.targetCenter_;\n        this.setCenterInternal([center[0] + deltaCoordinates[0], center[1] + deltaCoordinates[1]]);\n    };\n    /**\n     * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n     * constraint will apply.\n     * @param {number} ratio The ratio to apply on the view resolution.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     * @api\n     */\n    View.prototype.adjustResolution = function (ratio, opt_anchor) {\n        var anchor = opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n        this.adjustResolutionInternal(ratio, anchor);\n    };\n    /**\n     * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n     * constraint will apply.\n     * @param {number} ratio The ratio to apply on the view resolution.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     */\n    View.prototype.adjustResolutionInternal = function (ratio, opt_anchor) {\n        var isMoving = this.getAnimating() || this.getInteracting();\n        var size = this.getSizeFromViewport_(this.getRotation());\n        var newResolution = this.constraints_.resolution(this.targetResolution_ * ratio, 0, size, isMoving);\n        if (opt_anchor !== undefined) {\n            this.targetCenter_ = this.calculateCenterZoom(newResolution, opt_anchor);\n        }\n        this.targetResolution_ *= ratio;\n        this.applyTargetState_();\n    };\n    /**\n     * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n     * constraint will apply.\n     * @param {number} delta Relative value to add to the zoom level.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     * @api\n     */\n    View.prototype.adjustZoom = function (delta, opt_anchor) {\n        this.adjustResolution(Math.pow(this.zoomFactor_, -delta), opt_anchor);\n    };\n    /**\n     * Adds a value to the view rotation, optionally using an anchor. Any rotation\n     * constraint will apply.\n     * @param {number} delta Relative value to add to the zoom rotation, in radians.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The rotation center.\n     * @api\n     */\n    View.prototype.adjustRotation = function (delta, opt_anchor) {\n        if (opt_anchor) {\n            opt_anchor = fromUserCoordinate(opt_anchor, this.getProjection());\n        }\n        this.adjustRotationInternal(delta, opt_anchor);\n    };\n    /**\n     * @param {number} delta Relative value to add to the zoom rotation, in radians.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The rotation center.\n     */\n    View.prototype.adjustRotationInternal = function (delta, opt_anchor) {\n        var isMoving = this.getAnimating() || this.getInteracting();\n        var newRotation = this.constraints_.rotation(this.targetRotation_ + delta, isMoving);\n        if (opt_anchor !== undefined) {\n            this.targetCenter_ = this.calculateCenterRotate(newRotation, opt_anchor);\n        }\n        this.targetRotation_ += delta;\n        this.applyTargetState_();\n    };\n    /**\n     * Set the center of the current view. Any extent constraint will apply.\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.setCenter = function (center) {\n        this.setCenterInternal(fromUserCoordinate(center, this.getProjection()));\n    };\n    /**\n     * Set the center using the view projection (not the user projection).\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n     */\n    View.prototype.setCenterInternal = function (center) {\n        this.targetCenter_ = center;\n        this.applyTargetState_();\n    };\n    /**\n     * @param {ViewHint} hint Hint.\n     * @param {number} delta Delta.\n     * @return {number} New value.\n     */\n    View.prototype.setHint = function (hint, delta) {\n        this.hints_[hint] += delta;\n        this.changed();\n        return this.hints_[hint];\n    };\n    /**\n     * Set the resolution for this view. Any resolution constraint will apply.\n     * @param {number|undefined} resolution The resolution of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.setResolution = function (resolution) {\n        this.targetResolution_ = resolution;\n        this.applyTargetState_();\n    };\n    /**\n     * Set the rotation for this view. Any rotation constraint will apply.\n     * @param {number} rotation The rotation of the view in radians.\n     * @observable\n     * @api\n     */\n    View.prototype.setRotation = function (rotation) {\n        this.targetRotation_ = rotation;\n        this.applyTargetState_();\n    };\n    /**\n     * Zoom to a specific zoom level. Any resolution constrain will apply.\n     * @param {number} zoom Zoom level.\n     * @api\n     */\n    View.prototype.setZoom = function (zoom) {\n        this.setResolution(this.getResolutionForZoom(zoom));\n    };\n    /**\n     * Recompute rotation/resolution/center based on target values.\n     * Note: we have to compute rotation first, then resolution and center considering that\n     * parameters can influence one another in case a view extent constraint is present.\n     * @param {boolean=} opt_doNotCancelAnims Do not cancel animations.\n     * @param {boolean=} opt_forceMoving Apply constraints as if the view is moving.\n     * @private\n     */\n    View.prototype.applyTargetState_ = function (opt_doNotCancelAnims, opt_forceMoving) {\n        var isMoving = this.getAnimating() || this.getInteracting() || opt_forceMoving;\n        // compute rotation\n        var newRotation = this.constraints_.rotation(this.targetRotation_, isMoving);\n        var size = this.getSizeFromViewport_(newRotation);\n        var newResolution = this.constraints_.resolution(this.targetResolution_, 0, size, isMoving);\n        var newCenter = this.constraints_.center(this.targetCenter_, newResolution, size, isMoving);\n        if (this.get(ViewProperty.ROTATION) !== newRotation) {\n            this.set(ViewProperty.ROTATION, newRotation);\n        }\n        if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n            this.set(ViewProperty.RESOLUTION, newResolution);\n        }\n        if (!this.get(ViewProperty.CENTER) || !equals(this.get(ViewProperty.CENTER), newCenter)) {\n            this.set(ViewProperty.CENTER, newCenter);\n        }\n        if (this.getAnimating() && !opt_doNotCancelAnims) {\n            this.cancelAnimations();\n        }\n    };\n    /**\n     * If any constraints need to be applied, an animation will be triggered.\n     * This is typically done on interaction end.\n     * Note: calling this with a duration of 0 will apply the constrained values straight away,\n     * without animation.\n     * @param {number=} opt_duration The animation duration in ms.\n     * @param {number=} opt_resolutionDirection Which direction to zoom.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     */\n    View.prototype.resolveConstraints = function (opt_duration, opt_resolutionDirection, opt_anchor) {\n        var duration = opt_duration !== undefined ? opt_duration : 200;\n        var direction = opt_resolutionDirection || 0;\n        var newRotation = this.constraints_.rotation(this.targetRotation_);\n        var size = this.getSizeFromViewport_(newRotation);\n        var newResolution = this.constraints_.resolution(this.targetResolution_, direction, size);\n        var newCenter = this.constraints_.center(this.targetCenter_, newResolution, size);\n        if (duration === 0) {\n            this.targetResolution_ = newResolution;\n            this.targetRotation_ = newRotation;\n            this.targetCenter_ = newCenter;\n            this.applyTargetState_();\n            return;\n        }\n        if (this.getResolution() !== newResolution ||\n            this.getRotation() !== newRotation ||\n            !this.getCenterInternal() ||\n            !equals(this.getCenterInternal(), newCenter)) {\n            if (this.getAnimating()) {\n                this.cancelAnimations();\n            }\n            this.animateInternal({\n                rotation: newRotation,\n                center: newCenter,\n                resolution: newResolution,\n                duration: duration,\n                easing: easeOut,\n                anchor: opt_anchor\n            });\n        }\n    };\n    /**\n     * Notify the View that an interaction has started.\n     * The view state will be resolved to a stable one if needed\n     * (depending on its constraints).\n     * @api\n     */\n    View.prototype.beginInteraction = function () {\n        this.resolveConstraints(0);\n        this.setHint(ViewHint.INTERACTING, 1);\n    };\n    /**\n     * Notify the View that an interaction has ended. The view state will be resolved\n     * to a stable one if needed (depending on its constraints).\n     * @param {number=} opt_duration Animation duration in ms.\n     * @param {number=} opt_resolutionDirection Which direction to zoom.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     * @api\n     */\n    View.prototype.endInteraction = function (opt_duration, opt_resolutionDirection, opt_anchor) {\n        var anchor = opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n        this.endInteractionInternal(opt_duration, opt_resolutionDirection, anchor);\n    };\n    /**\n     * Notify the View that an interaction has ended. The view state will be resolved\n     * to a stable one if needed (depending on its constraints).\n     * @param {number=} opt_duration Animation duration in ms.\n     * @param {number=} opt_resolutionDirection Which direction to zoom.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     */\n    View.prototype.endInteractionInternal = function (opt_duration, opt_resolutionDirection, opt_anchor) {\n        this.setHint(ViewHint.INTERACTING, -1);\n        this.resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor);\n    };\n    /**\n     * Get a valid position for the view center according to the current constraints.\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n     * @param {number=} opt_targetResolution Target resolution. If not supplied, the current one will be used.\n     * This is useful to guess a valid center position at a different zoom level.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n     */\n    View.prototype.getConstrainedCenter = function (targetCenter, opt_targetResolution) {\n        var size = this.getSizeFromViewport_(this.getRotation());\n        return this.constraints_.center(targetCenter, opt_targetResolution || this.getResolution(), size);\n    };\n    /**\n     * Get a valid zoom level according to the current view constraints.\n     * @param {number|undefined} targetZoom Target zoom.\n     * @param {number=} [opt_direction=0] Indicate which resolution should be used\n     * by a renderer if the view resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @return {number|undefined} Valid zoom level.\n     */\n    View.prototype.getConstrainedZoom = function (targetZoom, opt_direction) {\n        var targetRes = this.getResolutionForZoom(targetZoom);\n        return this.getZoomForResolution(this.getConstrainedResolution(targetRes, opt_direction));\n    };\n    /**\n     * Get a valid resolution according to the current view constraints.\n     * @param {number|undefined} targetResolution Target resolution.\n     * @param {number=} [opt_direction=0] Indicate which resolution should be used\n     * by a renderer if the view resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @return {number|undefined} Valid resolution.\n     */\n    View.prototype.getConstrainedResolution = function (targetResolution, opt_direction) {\n        var direction = opt_direction || 0;\n        var size = this.getSizeFromViewport_(this.getRotation());\n        return this.constraints_.resolution(targetResolution, direction, size);\n    };\n    return View;\n}(BaseObject));\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n    setTimeout(function () {\n        callback(returnValue);\n    }, 0);\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n    if (options.extent !== undefined) {\n        var smooth = options.smoothExtentConstraint !== undefined ? options.smoothExtentConstraint : true;\n        return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n    }\n    var projection = createProjection(options.projection, 'EPSG:3857');\n    if (options.multiWorld !== true && projection.isGlobal()) {\n        var extent = projection.getExtent().slice();\n        extent[0] = -Infinity;\n        extent[2] = Infinity;\n        return createExtent(extent, false, false);\n    }\n    return centerNone;\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n    var resolutionConstraint;\n    var maxResolution;\n    var minResolution;\n    // TODO: move these to be ol constants\n    // see https://github.com/openlayers/openlayers/issues/2076\n    var defaultMaxZoom = 28;\n    var defaultZoomFactor = 2;\n    var minZoom = options.minZoom !== undefined ?\n        options.minZoom : DEFAULT_MIN_ZOOM;\n    var maxZoom = options.maxZoom !== undefined ?\n        options.maxZoom : defaultMaxZoom;\n    var zoomFactor = options.zoomFactor !== undefined ?\n        options.zoomFactor : defaultZoomFactor;\n    var multiWorld = options.multiWorld !== undefined ?\n        options.multiWorld : false;\n    var smooth = options.smoothResolutionConstraint !== undefined ? options.smoothResolutionConstraint : true;\n    var projection = createProjection(options.projection, 'EPSG:3857');\n    var projExtent = projection.getExtent();\n    var constrainOnlyCenter = options.constrainOnlyCenter;\n    var extent = options.extent;\n    if (!multiWorld && !extent && projection.isGlobal()) {\n        constrainOnlyCenter = false;\n        extent = projExtent;\n    }\n    if (options.resolutions !== undefined) {\n        var resolutions = options.resolutions;\n        maxResolution = resolutions[minZoom];\n        minResolution = resolutions[maxZoom] !== undefined ?\n            resolutions[maxZoom] : resolutions[resolutions.length - 1];\n        if (options.constrainResolution) {\n            resolutionConstraint = createSnapToResolutions(resolutions, smooth, !constrainOnlyCenter && extent);\n        }\n        else {\n            resolutionConstraint = createMinMaxResolution(maxResolution, minResolution, smooth, !constrainOnlyCenter && extent);\n        }\n    }\n    else {\n        // calculate the default min and max resolution\n        var size = !projExtent ?\n            // use an extent that can fit the whole world if need be\n            360 * METERS_PER_UNIT[Units.DEGREES] /\n                projection.getMetersPerUnit() :\n            Math.max(getWidth(projExtent), getHeight(projExtent));\n        var defaultMaxResolution = size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n        var defaultMinResolution = defaultMaxResolution / Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n        // user provided maxResolution takes precedence\n        maxResolution = options.maxResolution;\n        if (maxResolution !== undefined) {\n            minZoom = 0;\n        }\n        else {\n            maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n        }\n        // user provided minResolution takes precedence\n        minResolution = options.minResolution;\n        if (minResolution === undefined) {\n            if (options.maxZoom !== undefined) {\n                if (options.maxResolution !== undefined) {\n                    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n                }\n                else {\n                    minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n                }\n            }\n            else {\n                minResolution = defaultMinResolution;\n            }\n        }\n        // given discrete zoom levels, minResolution may be different than provided\n        maxZoom = minZoom + Math.floor(Math.log(maxResolution / minResolution) / Math.log(zoomFactor));\n        minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n        if (options.constrainResolution) {\n            resolutionConstraint = createSnapToPower(zoomFactor, maxResolution, minResolution, smooth, !constrainOnlyCenter && extent);\n        }\n        else {\n            resolutionConstraint = createMinMaxResolution(maxResolution, minResolution, smooth, !constrainOnlyCenter && extent);\n        }\n    }\n    return { constraint: resolutionConstraint, maxResolution: maxResolution,\n        minResolution: minResolution, minZoom: minZoom, zoomFactor: zoomFactor };\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n    var enableRotation = options.enableRotation !== undefined ?\n        options.enableRotation : true;\n    if (enableRotation) {\n        var constrainRotation = options.constrainRotation;\n        if (constrainRotation === undefined || constrainRotation === true) {\n            return createSnapToZero();\n        }\n        else if (constrainRotation === false) {\n            return rotationNone;\n        }\n        else if (typeof constrainRotation === 'number') {\n            return createSnapToN(constrainRotation);\n        }\n        else {\n            return rotationNone;\n        }\n    }\n    else {\n        return disable;\n    }\n}\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n    if (animation.sourceCenter && animation.targetCenter) {\n        if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n            return false;\n        }\n    }\n    if (animation.sourceResolution !== animation.targetResolution) {\n        return false;\n    }\n    if (animation.sourceRotation !== animation.targetRotation) {\n        return false;\n    }\n    return true;\n}\nexport default View;\n//# sourceMappingURL=View.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Group\n */\nimport { getUid } from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport { getChangeEventType } from '../Object.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport { assert } from '../asserts.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { getIntersection } from '../extent.js';\nimport BaseLayer from './Base.js';\nimport { assign, clear } from '../obj.js';\nimport SourceState from '../source/State.js';\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n */\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    LAYERS: 'layers'\n};\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nvar LayerGroup = /** @class */ (function (_super) {\n    __extends(LayerGroup, _super);\n    /**\n     * @param {Options=} opt_options Layer options.\n     */\n    function LayerGroup(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var baseOptions = /** @type {Options} */ (assign({}, options));\n        delete baseOptions.layers;\n        var layers = options.layers;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.layersListenerKeys_ = [];\n        /**\n         * @private\n         * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n         */\n        _this.listenerKeys_ = {};\n        _this.addEventListener(getChangeEventType(Property.LAYERS), _this.handleLayersChanged_);\n        if (layers) {\n            if (Array.isArray(layers)) {\n                layers = new Collection(layers.slice(), { unique: true });\n            }\n            else {\n                assert(typeof /** @type {?} */ (layers).getArray === 'function', 43); // Expected `layers` to be an array or a `Collection`\n            }\n        }\n        else {\n            layers = new Collection(undefined, { unique: true });\n        }\n        _this.setLayers(layers);\n        return _this;\n    }\n    /**\n     * @private\n     */\n    LayerGroup.prototype.handleLayerChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    LayerGroup.prototype.handleLayersChanged_ = function () {\n        this.layersListenerKeys_.forEach(unlistenByKey);\n        this.layersListenerKeys_.length = 0;\n        var layers = this.getLayers();\n        this.layersListenerKeys_.push(listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this), listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this));\n        for (var id in this.listenerKeys_) {\n            this.listenerKeys_[id].forEach(unlistenByKey);\n        }\n        clear(this.listenerKeys_);\n        var layersArray = layers.getArray();\n        for (var i = 0, ii = layersArray.length; i < ii; i++) {\n            var layer = layersArray[i];\n            this.listenerKeys_[getUid(layer)] = [\n                listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n                listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n            ];\n        }\n        this.changed();\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n     * @private\n     */\n    LayerGroup.prototype.handleLayersAdd_ = function (collectionEvent) {\n        var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n        this.listenerKeys_[getUid(layer)] = [\n            listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n            listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n        ];\n        this.changed();\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n     * @private\n     */\n    LayerGroup.prototype.handleLayersRemove_ = function (collectionEvent) {\n        var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n        var key = getUid(layer);\n        this.listenerKeys_[key].forEach(unlistenByKey);\n        delete this.listenerKeys_[key];\n        this.changed();\n    };\n    /**\n     * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n     * in this group.\n     * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n     *   {@link module:ol/layer/Base layers} that are part of this group.\n     * @observable\n     * @api\n     */\n    LayerGroup.prototype.getLayers = function () {\n        return (\n        /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (this.get(Property.LAYERS)));\n    };\n    /**\n     * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n     * in this group.\n     * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n     *   {@link module:ol/layer/Base layers} that are part of this group.\n     * @observable\n     * @api\n     */\n    LayerGroup.prototype.setLayers = function (layers) {\n        this.set(Property.LAYERS, layers);\n    };\n    /**\n     * @inheritDoc\n     */\n    LayerGroup.prototype.getLayersArray = function (opt_array) {\n        var array = opt_array !== undefined ? opt_array : [];\n        this.getLayers().forEach(function (layer) {\n            layer.getLayersArray(array);\n        });\n        return array;\n    };\n    /**\n     * @inheritDoc\n     */\n    LayerGroup.prototype.getLayerStatesArray = function (opt_states) {\n        var states = opt_states !== undefined ? opt_states : [];\n        var pos = states.length;\n        this.getLayers().forEach(function (layer) {\n            layer.getLayerStatesArray(states);\n        });\n        var ownLayerState = this.getLayerState();\n        for (var i = pos, ii = states.length; i < ii; i++) {\n            var layerState = states[i];\n            layerState.opacity *= ownLayerState.opacity;\n            layerState.visible = layerState.visible && ownLayerState.visible;\n            layerState.maxResolution = Math.min(layerState.maxResolution, ownLayerState.maxResolution);\n            layerState.minResolution = Math.max(layerState.minResolution, ownLayerState.minResolution);\n            layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n            layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n            if (ownLayerState.extent !== undefined) {\n                if (layerState.extent !== undefined) {\n                    layerState.extent = getIntersection(layerState.extent, ownLayerState.extent);\n                }\n                else {\n                    layerState.extent = ownLayerState.extent;\n                }\n            }\n        }\n        return states;\n    };\n    /**\n     * @inheritDoc\n     */\n    LayerGroup.prototype.getSourceState = function () {\n        return SourceState.READY;\n    };\n    return LayerGroup;\n}(BaseLayer));\nexport default LayerGroup;\n//# sourceMappingURL=Group.js.map","/**\n * @module ol/size\n */\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n    if (opt_size === undefined) {\n        opt_size = [0, 0];\n    }\n    opt_size[0] = size[0] + 2 * num;\n    opt_size[1] = size[1] + 2 * num;\n    return opt_size;\n}\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n    return size[0] > 0 && size[1] > 0;\n}\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n    if (opt_size === undefined) {\n        opt_size = [0, 0];\n    }\n    opt_size[0] = (size[0] * ratio + 0.5) | 0;\n    opt_size[1] = (size[1] * ratio + 0.5) | 0;\n    return opt_size;\n}\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n    if (Array.isArray(size)) {\n        return size;\n    }\n    else {\n        if (opt_size === undefined) {\n            opt_size = [size, size];\n        }\n        else {\n            opt_size[0] = opt_size[1] = /** @type {number} */ (size);\n        }\n        return opt_size;\n    }\n}\n//# sourceMappingURL=size.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/PluggableMap\n */\nimport { getUid } from './util.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport RenderEventType from './render/EventType.js';\nimport BaseObject, { getChangeEventType } from './Object.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport TileQueue from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport { assert } from './asserts.js';\nimport { removeNode } from './dom.js';\nimport { listen, unlistenByKey } from './events.js';\nimport EventType from './events/EventType.js';\nimport { clone, createOrUpdateEmpty, equals, getForViewAndSize, isEmpty } from './extent.js';\nimport { TRUE } from './functions.js';\nimport { DEVICE_PIXEL_RATIO, IMAGE_DECODE } from './has.js';\nimport LayerGroup from './layer/Group.js';\nimport { hasArea } from './size.js';\nimport { DROP } from './structs/PriorityQueue.js';\nimport { create as createTransform, apply as applyTransform } from './transform.js';\nimport { toUserCoordinate, fromUserCoordinate } from './proj.js';\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform\n * @property {null|import(\"./extent.js\").Extent} extent\n * @property {Array<DeclutterItems>} declutterItems\n * @property {number} index\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray\n * @property {number} layerIndex\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform\n * @property {Array<PostRenderFunction>} postRenderFunctions\n * @property {import(\"./size.js\").Size} size\n * @property {TileQueue} tileQueue\n * @property {!Object<string, Object<string, boolean>>} usedTiles\n * @property {Array<number>} viewHints\n * @property {!Object<string, Object<string, boolean>>} wantedTiles\n */\n/**\n * @typedef {Object} DeclutterItems\n * @property {Array<*>} items Declutter items of an executor.\n * @property {number} opacity Layer opacity.\n */\n/**\n * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction\n */\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls]\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions]\n * @property {HTMLElement|Document} keyboardEventTarget\n * @property {Collection<import(\"./Overlay.js\").default>} overlays\n * @property {Object<string, *>} values\n */\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control~defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction~defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered.\n * @property {View} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nvar PluggableMap = /** @class */ (function (_super) {\n    __extends(PluggableMap, _super);\n    /**\n     * @param {MapOptions} options Map options.\n     */\n    function PluggableMap(options) {\n        var _this = _super.call(this) || this;\n        var optionsInternal = createOptionsInternal(options);\n        /** @private */\n        _this.boundHandleBrowserEvent_ = _this.handleBrowserEvent.bind(_this);\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.maxTilesLoading_ = options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = options.pixelRatio !== undefined ?\n            options.pixelRatio : DEVICE_PIXEL_RATIO;\n        /**\n         * @private\n         * @type {*}\n         */\n        _this.postRenderTimeoutHandle_;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.animationDelayKey_;\n        /**\n         * @private\n         */\n        _this.animationDelay_ = function () {\n            this.animationDelayKey_ = undefined;\n            this.renderFrame_(Date.now());\n        }.bind(_this);\n        /**\n         * @private\n         * @type {import(\"./transform.js\").Transform}\n         */\n        _this.coordinateToPixelTransform_ = createTransform();\n        /**\n         * @private\n         * @type {import(\"./transform.js\").Transform}\n         */\n        _this.pixelToCoordinateTransform_ = createTransform();\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.frameIndex_ = 0;\n        /**\n         * @private\n         * @type {?FrameState}\n         */\n        _this.frameState_ = null;\n        /**\n         * The extent at the previous 'moveend' event.\n         * @private\n         * @type {import(\"./extent.js\").Extent}\n         */\n        _this.previousExtent_ = null;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.viewPropertyListenerKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.viewChangeListenerKey_ = null;\n        /**\n         * @private\n         * @type {?Array<import(\"./events.js\").EventsKey>}\n         */\n        _this.layerGroupPropertyListenerKeys_ = null;\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.viewport_ = document.createElement('div');\n        _this.viewport_.className = 'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n        _this.viewport_.style.position = 'relative';\n        _this.viewport_.style.overflow = 'hidden';\n        _this.viewport_.style.width = '100%';\n        _this.viewport_.style.height = '100%';\n        // prevent page zoom on IE >= 10 browsers\n        _this.viewport_.style.msTouchAction = 'none';\n        _this.viewport_.style.touchAction = 'none';\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.overlayContainer_ = document.createElement('div');\n        _this.overlayContainer_.style.position = 'absolute';\n        _this.overlayContainer_.style.zIndex = '0';\n        _this.overlayContainer_.style.width = '100%';\n        _this.overlayContainer_.style.height = '100%';\n        _this.overlayContainer_.className = 'ol-overlaycontainer';\n        _this.viewport_.appendChild(_this.overlayContainer_);\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.overlayContainerStopEvent_ = document.createElement('div');\n        _this.overlayContainerStopEvent_.style.position = 'absolute';\n        _this.overlayContainerStopEvent_.style.zIndex = '0';\n        _this.overlayContainerStopEvent_.style.width = '100%';\n        _this.overlayContainerStopEvent_.style.height = '100%';\n        _this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n        _this.viewport_.appendChild(_this.overlayContainerStopEvent_);\n        /**\n         * @private\n         * @type {MapBrowserEventHandler}\n         */\n        _this.mapBrowserEventHandler_ = new MapBrowserEventHandler(_this, options.moveTolerance);\n        var handleMapBrowserEvent = _this.handleMapBrowserEvent.bind(_this);\n        for (var key in MapBrowserEventType) {\n            _this.mapBrowserEventHandler_.addEventListener(MapBrowserEventType[key], handleMapBrowserEvent);\n        }\n        /**\n         * @private\n         * @type {HTMLElement|Document}\n         */\n        _this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n        /**\n         * @private\n         * @type {?Array<import(\"./events.js\").EventsKey>}\n         */\n        _this.keyHandlerKeys_ = null;\n        var handleBrowserEvent = _this.handleBrowserEvent.bind(_this);\n        _this.viewport_.addEventListener(EventType.CONTEXTMENU, handleBrowserEvent, false);\n        _this.viewport_.addEventListener(EventType.WHEEL, handleBrowserEvent, false);\n        /**\n         * @type {Collection<import(\"./control/Control.js\").default>}\n         * @protected\n         */\n        _this.controls = optionsInternal.controls || new Collection();\n        /**\n         * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n         * @protected\n         */\n        _this.interactions = optionsInternal.interactions || new Collection();\n        /**\n         * @type {import(\"./events/Target.js\").default}\n         */\n        _this.labelCache_ = null;\n        /**\n         * @type {import(\"./events.js\").EventsKey}\n         */\n        _this.labelCacheListenerKey_;\n        /**\n         * @type {Collection<import(\"./Overlay.js\").default>}\n         * @private\n         */\n        _this.overlays_ = optionsInternal.overlays;\n        /**\n         * A lookup of overlays by id.\n         * @private\n         * @type {Object<string, import(\"./Overlay.js\").default>}\n         */\n        _this.overlayIdIndex_ = {};\n        /**\n         * @type {import(\"./renderer/Map.js\").default}\n         * @private\n         */\n        _this.renderer_ = null;\n        /**\n         * @type {function(Event): void|undefined}\n         * @private\n         */\n        _this.handleResize_;\n        /**\n         * @private\n         * @type {!Array<PostRenderFunction>}\n         */\n        _this.postRenderFunctions_ = [];\n        /**\n         * @private\n         * @type {TileQueue}\n         */\n        _this.tileQueue_ = new TileQueue(_this.getTilePriority.bind(_this), _this.handleTileChange_.bind(_this));\n        _this.addEventListener(getChangeEventType(MapProperty.LAYERGROUP), _this.handleLayerGroupChanged_);\n        _this.addEventListener(getChangeEventType(MapProperty.VIEW), _this.handleViewChanged_);\n        _this.addEventListener(getChangeEventType(MapProperty.SIZE), _this.handleSizeChanged_);\n        _this.addEventListener(getChangeEventType(MapProperty.TARGET), _this.handleTargetChanged_);\n        // setProperties will trigger the rendering of the map if the map\n        // is \"defined\" already.\n        _this.setProperties(optionsInternal.values);\n        _this.controls.forEach(\n        /**\n         * @param {import(\"./control/Control.js\").default} control Control.\n         * @this {PluggableMap}\n         */\n        function (control) {\n            control.setMap(this);\n        }.bind(_this));\n        _this.controls.addEventListener(CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(this);\n        }.bind(_this));\n        _this.controls.addEventListener(CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(null);\n        }.bind(_this));\n        _this.interactions.forEach(\n        /**\n         * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n         * @this {PluggableMap}\n         */\n        function (interaction) {\n            interaction.setMap(this);\n        }.bind(_this));\n        _this.interactions.addEventListener(CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(this);\n        }.bind(_this));\n        _this.interactions.addEventListener(CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(null);\n        }.bind(_this));\n        _this.overlays_.forEach(_this.addOverlayInternal_.bind(_this));\n        _this.overlays_.addEventListener(CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            this.addOverlayInternal_(/** @type {import(\"./Overlay.js\").default} */ (event.element));\n        }.bind(_this));\n        _this.overlays_.addEventListener(CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            var overlay = /** @type {import(\"./Overlay.js\").default} */ (event.element);\n            var id = overlay.getId();\n            if (id !== undefined) {\n                delete this.overlayIdIndex_[id.toString()];\n            }\n            event.element.setMap(null);\n        }.bind(_this));\n        return _this;\n    }\n    /**\n     * @abstract\n     * @return {import(\"./renderer/Map.js\").default} The map renderer\n     */\n    PluggableMap.prototype.createRenderer = function () {\n        throw new Error('Use a map type that has a createRenderer method');\n    };\n    /**\n     * Add the given control to the map.\n     * @param {import(\"./control/Control.js\").default} control Control.\n     * @api\n     */\n    PluggableMap.prototype.addControl = function (control) {\n        this.getControls().push(control);\n    };\n    /**\n     * Add the given interaction to the map. If you want to add an interaction\n     * at another point of the collection use `getInteraction()` and the methods\n     * available on {@link module:ol/Collection~Collection}. This can be used to\n     * stop the event propagation from the handleEvent function. The interactions\n     * get to handle the events in the reverse order of this collection.\n     * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n     * @api\n     */\n    PluggableMap.prototype.addInteraction = function (interaction) {\n        this.getInteractions().push(interaction);\n    };\n    /**\n     * Adds the given layer to the top of this map. If you want to add a layer\n     * elsewhere in the stack, use `getLayers()` and the methods available on\n     * {@link module:ol/Collection~Collection}.\n     * @param {import(\"./layer/Base.js\").default} layer Layer.\n     * @api\n     */\n    PluggableMap.prototype.addLayer = function (layer) {\n        var layers = this.getLayerGroup().getLayers();\n        layers.push(layer);\n    };\n    /**\n     * Add the given overlay to the map.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @api\n     */\n    PluggableMap.prototype.addOverlay = function (overlay) {\n        this.getOverlays().push(overlay);\n    };\n    /**\n     * This deals with map's overlay collection changes.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @private\n     */\n    PluggableMap.prototype.addOverlayInternal_ = function (overlay) {\n        var id = overlay.getId();\n        if (id !== undefined) {\n            this.overlayIdIndex_[id.toString()] = overlay;\n        }\n        overlay.setMap(this);\n    };\n    /**\n     *\n     * @inheritDoc\n     */\n    PluggableMap.prototype.disposeInternal = function () {\n        this.mapBrowserEventHandler_.dispose();\n        this.viewport_.removeEventListener(EventType.CONTEXTMENU, this.boundHandleBrowserEvent_);\n        this.viewport_.removeEventListener(EventType.WHEEL, this.boundHandleBrowserEvent_);\n        if (this.handleResize_ !== undefined) {\n            removeEventListener(EventType.RESIZE, this.handleResize_, false);\n            this.handleResize_ = undefined;\n        }\n        this.setTarget(null);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Detect features that intersect a pixel on the viewport, and execute a\n     * callback with each intersecting feature. Layers included in the detection can\n     * be configured through the `layerFilter` option in `opt_options`.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {function(this: S, import(\"./Feature.js\").FeatureLike,\n     *     import(\"./layer/Layer.js\").default): T} callback Feature callback. The callback will be\n     *     called with two arguments. The first argument is one\n     *     {@link module:ol/Feature feature} or\n     *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n     *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n     *     unmanaged layers. To stop detection, callback functions can return a\n     *     truthy value.\n     * @param {AtPixelOptions=} opt_options Optional options.\n     * @return {T|undefined} Callback result, i.e. the return value of last\n     * callback execution, or the first truthy callback return value.\n     * @template S,T\n     * @api\n     */\n    PluggableMap.prototype.forEachFeatureAtPixel = function (pixel, callback, opt_options) {\n        if (!this.frameState_) {\n            return;\n        }\n        var coordinate = this.getCoordinateFromPixelInternal(pixel);\n        opt_options = opt_options !== undefined ? opt_options :\n            /** @type {AtPixelOptions} */ ({});\n        var hitTolerance = opt_options.hitTolerance !== undefined ?\n            opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n        var layerFilter = opt_options.layerFilter !== undefined ?\n            opt_options.layerFilter : TRUE;\n        var checkWrapped = opt_options.checkWrapped !== false;\n        return this.renderer_.forEachFeatureAtCoordinate(coordinate, this.frameState_, hitTolerance, checkWrapped, callback, null, layerFilter, null);\n    };\n    /**\n     * Get all features that intersect a pixel on the viewport.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {AtPixelOptions=} opt_options Optional options.\n     * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n     * an empty array if none were found.\n     * @api\n     */\n    PluggableMap.prototype.getFeaturesAtPixel = function (pixel, opt_options) {\n        var features = [];\n        this.forEachFeatureAtPixel(pixel, function (feature) {\n            features.push(feature);\n        }, opt_options);\n        return features;\n    };\n    /**\n     * Detect layers that have a color value at a pixel on the viewport, and\n     * execute a callback with each matching layer. Layers included in the\n     * detection can be configured through `opt_layerFilter`.\n     *\n     * Note: this may give false positives unless the map layers have had different `className`\n     * properties assigned to them.\n     *\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n     *     Layer callback. This callback will receive two arguments: first is the\n     *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n     *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n     *     that do not currently support this argument. To stop detection, callback\n     *     functions can return a truthy value.\n     * @param {AtPixelOptions=} opt_options Configuration options.\n     * @return {T|undefined} Callback result, i.e. the return value of last\n     * callback execution, or the first truthy callback return value.\n     * @template S,T\n     * @api\n     */\n    PluggableMap.prototype.forEachLayerAtPixel = function (pixel, callback, opt_options) {\n        if (!this.frameState_) {\n            return;\n        }\n        var options = opt_options || /** @type {AtPixelOptions} */ ({});\n        var hitTolerance = options.hitTolerance !== undefined ?\n            options.hitTolerance * this.frameState_.pixelRatio : 0;\n        var layerFilter = options.layerFilter || TRUE;\n        return this.renderer_.forEachLayerAtPixel(pixel, this.frameState_, hitTolerance, callback, layerFilter);\n    };\n    /**\n     * Detect if features intersect a pixel on the viewport. Layers included in the\n     * detection can be configured through `opt_layerFilter`.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {AtPixelOptions=} opt_options Optional options.\n     * @return {boolean} Is there a feature at the given pixel?\n     * @api\n     */\n    PluggableMap.prototype.hasFeatureAtPixel = function (pixel, opt_options) {\n        if (!this.frameState_) {\n            return false;\n        }\n        var coordinate = this.getCoordinateFromPixelInternal(pixel);\n        opt_options = opt_options !== undefined ? opt_options :\n            /** @type {AtPixelOptions} */ ({});\n        var layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n        var hitTolerance = opt_options.hitTolerance !== undefined ?\n            opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n        var checkWrapped = opt_options.checkWrapped !== false;\n        return this.renderer_.hasFeatureAtCoordinate(coordinate, this.frameState_, hitTolerance, checkWrapped, layerFilter, null);\n    };\n    /**\n     * Returns the coordinate in user projection for a browser event.\n     * @param {Event} event Event.\n     * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n     * @api\n     */\n    PluggableMap.prototype.getEventCoordinate = function (event) {\n        return this.getCoordinateFromPixel(this.getEventPixel(event));\n    };\n    /**\n     * Returns the coordinate in view projection for a browser event.\n     * @param {Event} event Event.\n     * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n     */\n    PluggableMap.prototype.getEventCoordinateInternal = function (event) {\n        return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n    };\n    /**\n     * Returns the map pixel position for a browser event relative to the viewport.\n     * @param {Event|TouchEvent} event Event.\n     * @return {import(\"./pixel.js\").Pixel} Pixel.\n     * @api\n     */\n    PluggableMap.prototype.getEventPixel = function (event) {\n        var viewportPosition = this.viewport_.getBoundingClientRect();\n        var eventPosition = 'changedTouches' in event ?\n            /** @type {TouchEvent} */ (event).changedTouches[0] :\n            /** @type {MouseEvent} */ (event);\n        return [\n            eventPosition.clientX - viewportPosition.left,\n            eventPosition.clientY - viewportPosition.top\n        ];\n    };\n    /**\n     * Get the target in which this map is rendered.\n     * Note that this returns what is entered as an option or in setTarget:\n     * if that was an element, it returns an element; if a string, it returns that.\n     * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n     *     map is rendered in.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getTarget = function () {\n        return /** @type {HTMLElement|string|undefined} */ (this.get(MapProperty.TARGET));\n    };\n    /**\n     * Get the DOM element into which this map is rendered. In contrast to\n     * `getTarget` this method always return an `Element`, or `null` if the\n     * map has no target.\n     * @return {HTMLElement} The element that the map is rendered in.\n     * @api\n     */\n    PluggableMap.prototype.getTargetElement = function () {\n        var target = this.getTarget();\n        if (target !== undefined) {\n            return typeof target === 'string' ? document.getElementById(target) : target;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Get the coordinate for a given pixel.  This returns a coordinate in the\n     * user projection.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n     * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n     * @api\n     */\n    PluggableMap.prototype.getCoordinateFromPixel = function (pixel) {\n        return toUserCoordinate(this.getCoordinateFromPixelInternal(pixel), this.getView().getProjection());\n    };\n    /**\n     * Get the coordinate for a given pixel.  This returns a coordinate in the\n     * map view projection.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n     * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n     */\n    PluggableMap.prototype.getCoordinateFromPixelInternal = function (pixel) {\n        var frameState = this.frameState_;\n        if (!frameState) {\n            return null;\n        }\n        else {\n            return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n        }\n    };\n    /**\n     * Get the map controls. Modifying this collection changes the controls\n     * associated with the map.\n     * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n     * @api\n     */\n    PluggableMap.prototype.getControls = function () {\n        return this.controls;\n    };\n    /**\n     * Get the map overlays. Modifying this collection changes the overlays\n     * associated with the map.\n     * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n     * @api\n     */\n    PluggableMap.prototype.getOverlays = function () {\n        return this.overlays_;\n    };\n    /**\n     * Get an overlay by its identifier (the value returned by overlay.getId()).\n     * Note that the index treats string and numeric identifiers as the same. So\n     * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n     * @param {string|number} id Overlay identifier.\n     * @return {import(\"./Overlay.js\").default} Overlay.\n     * @api\n     */\n    PluggableMap.prototype.getOverlayById = function (id) {\n        var overlay = this.overlayIdIndex_[id.toString()];\n        return overlay !== undefined ? overlay : null;\n    };\n    /**\n     * Get the map interactions. Modifying this collection changes the interactions\n     * associated with the map.\n     *\n     * Interactions are used for e.g. pan, zoom and rotate.\n     * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n     * @api\n     */\n    PluggableMap.prototype.getInteractions = function () {\n        return this.interactions;\n    };\n    /**\n     * Get the layergroup associated with this map.\n     * @return {LayerGroup} A layer group containing the layers in this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getLayerGroup = function () {\n        return (\n        /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP)));\n    };\n    /**\n     * Get the collection of layers associated with this map.\n     * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n     * @api\n     */\n    PluggableMap.prototype.getLayers = function () {\n        var layers = this.getLayerGroup().getLayers();\n        return layers;\n    };\n    /**\n     * @return {boolean} Layers have sources that are still loading.\n     */\n    PluggableMap.prototype.getLoading = function () {\n        var layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layer = layerStatesArray[i].layer;\n            var source = /** @type {import(\"./layer/Layer.js\").default} */ (layer).getSource();\n            if (source && source.loading) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * Get the pixel for a coordinate.  This takes a coordinate in the user\n     * projection and returns the corresponding pixel.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n     * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n     * @api\n     */\n    PluggableMap.prototype.getPixelFromCoordinate = function (coordinate) {\n        var viewCoordinate = fromUserCoordinate(coordinate, this.getView().getProjection());\n        return this.getPixelFromCoordinateInternal(viewCoordinate);\n    };\n    /**\n     * Get the pixel for a coordinate.  This takes a coordinate in the map view\n     * projection and returns the corresponding pixel.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n     * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n     */\n    PluggableMap.prototype.getPixelFromCoordinateInternal = function (coordinate) {\n        var frameState = this.frameState_;\n        if (!frameState) {\n            return null;\n        }\n        else {\n            return applyTransform(frameState.coordinateToPixelTransform, coordinate.slice(0, 2));\n        }\n    };\n    /**\n     * Get the map renderer.\n     * @return {import(\"./renderer/Map.js\").default} Renderer\n     */\n    PluggableMap.prototype.getRenderer = function () {\n        return this.renderer_;\n    };\n    /**\n     * Get the size of this map.\n     * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getSize = function () {\n        return (\n        /** @type {import(\"./size.js\").Size|undefined} */ (this.get(MapProperty.SIZE)));\n    };\n    /**\n     * Get the view associated with this map. A view manages properties such as\n     * center and resolution.\n     * @return {View} The view that controls this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getView = function () {\n        return (\n        /** @type {View} */ (this.get(MapProperty.VIEW)));\n    };\n    /**\n     * Get the element that serves as the map viewport.\n     * @return {HTMLElement} Viewport.\n     * @api\n     */\n    PluggableMap.prototype.getViewport = function () {\n        return this.viewport_;\n    };\n    /**\n     * Get the element that serves as the container for overlays.  Elements added to\n     * this container will let mousedown and touchstart events through to the map,\n     * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n     * events.\n     * @return {!HTMLElement} The map's overlay container.\n     */\n    PluggableMap.prototype.getOverlayContainer = function () {\n        return this.overlayContainer_;\n    };\n    /**\n     * Get the element that serves as a container for overlays that don't allow\n     * event propagation. Elements added to this container won't let mousedown and\n     * touchstart events through to the map, so clicks and gestures on an overlay\n     * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @return {!HTMLElement} The map's overlay container that stops events.\n     */\n    PluggableMap.prototype.getOverlayContainerStopEvent = function () {\n        return this.overlayContainerStopEvent_;\n    };\n    /**\n     * @param {import(\"./Tile.js\").default} tile Tile.\n     * @param {string} tileSourceKey Tile source key.\n     * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n     * @param {number} tileResolution Tile resolution.\n     * @return {number} Tile priority.\n     */\n    PluggableMap.prototype.getTilePriority = function (tile, tileSourceKey, tileCenter, tileResolution) {\n        // Filter out tiles at higher zoom levels than the current zoom level, or that\n        // are outside the visible extent.\n        var frameState = this.frameState_;\n        if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n            return DROP;\n        }\n        if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n            return DROP;\n        }\n        // Prioritize the highest zoom level tiles closest to the focus.\n        // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n        // Within a zoom level, tiles are prioritized by the distance in pixels between\n        // the center of the tile and the center of the viewport.  The factor of 65536\n        // means that the prioritization should behave as desired for tiles up to\n        // 65536 * Math.log(2) = 45426 pixels from the focus.\n        var center = frameState.viewState.center;\n        var deltaX = tileCenter[0] - center[0];\n        var deltaY = tileCenter[1] - center[1];\n        return 65536 * Math.log(tileResolution) +\n            Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution;\n    };\n    /**\n     * @param {Event} browserEvent Browser event.\n     * @param {string=} opt_type Type.\n     */\n    PluggableMap.prototype.handleBrowserEvent = function (browserEvent, opt_type) {\n        var type = opt_type || browserEvent.type;\n        var mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n        this.handleMapBrowserEvent(mapBrowserEvent);\n    };\n    /**\n     * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n     */\n    PluggableMap.prototype.handleMapBrowserEvent = function (mapBrowserEvent) {\n        if (!this.frameState_) {\n            // With no view defined, we cannot translate pixels into geographical\n            // coordinates so interactions cannot be used.\n            return;\n        }\n        var target = mapBrowserEvent.originalEvent.target;\n        while (target instanceof HTMLElement) {\n            if (target.parentElement === this.overlayContainerStopEvent_) {\n                return;\n            }\n            target = target.parentElement;\n        }\n        mapBrowserEvent.frameState = this.frameState_;\n        var interactionsArray = this.getInteractions().getArray();\n        if (this.dispatchEvent(mapBrowserEvent) !== false) {\n            for (var i = interactionsArray.length - 1; i >= 0; i--) {\n                var interaction = interactionsArray[i];\n                if (!interaction.getActive()) {\n                    continue;\n                }\n                var cont = interaction.handleEvent(mapBrowserEvent);\n                if (!cont) {\n                    break;\n                }\n            }\n        }\n    };\n    /**\n     * @protected\n     */\n    PluggableMap.prototype.handlePostRender = function () {\n        var frameState = this.frameState_;\n        // Manage the tile queue\n        // Image loads are expensive and a limited resource, so try to use them\n        // efficiently:\n        // * When the view is static we allow a large number of parallel tile loads\n        //   to complete the frame as quickly as possible.\n        // * When animating or interacting, image loads can cause janks, so we reduce\n        //   the maximum number of loads per frame and limit the number of parallel\n        //   tile loads to remain reactive to view changes and to reduce the chance of\n        //   loading tiles that will quickly disappear from view.\n        var tileQueue = this.tileQueue_;\n        if (!tileQueue.isEmpty()) {\n            var maxTotalLoading = this.maxTilesLoading_;\n            var maxNewLoads = maxTotalLoading;\n            if (frameState) {\n                var hints = frameState.viewHints;\n                if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n                    var lowOnFrameBudget = !IMAGE_DECODE && Date.now() - frameState.time > 8;\n                    maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n                    maxNewLoads = lowOnFrameBudget ? 0 : 2;\n                }\n            }\n            if (tileQueue.getTilesLoading() < maxTotalLoading) {\n                tileQueue.reprioritize(); // FIXME only call if view has changed\n                tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n            }\n        }\n        if (frameState && this.hasListener(RenderEventType.RENDERCOMPLETE) && !frameState.animate &&\n            !this.tileQueue_.getTilesLoading() && !this.getLoading()) {\n            this.renderer_.dispatchRenderEvent(RenderEventType.RENDERCOMPLETE, frameState);\n        }\n        var postRenderFunctions = this.postRenderFunctions_;\n        for (var i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n            postRenderFunctions[i](this, frameState);\n        }\n        postRenderFunctions.length = 0;\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleSizeChanged_ = function () {\n        if (this.getView()) {\n            this.getView().resolveConstraints(0);\n        }\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleTargetChanged_ = function () {\n        // target may be undefined, null, a string or an Element.\n        // If it's a string we convert it to an Element before proceeding.\n        // If it's not now an Element we remove the viewport from the DOM.\n        // If it's an Element we append the viewport element to it.\n        var targetElement;\n        if (this.getTarget()) {\n            targetElement = this.getTargetElement();\n        }\n        if (this.keyHandlerKeys_) {\n            for (var i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n                unlistenByKey(this.keyHandlerKeys_[i]);\n            }\n            this.keyHandlerKeys_ = null;\n        }\n        if (!targetElement) {\n            if (this.renderer_) {\n                clearTimeout(this.postRenderTimeoutHandle_);\n                this.postRenderFunctions_.length = 0;\n                this.renderer_.dispose();\n                this.renderer_ = null;\n            }\n            if (this.animationDelayKey_) {\n                cancelAnimationFrame(this.animationDelayKey_);\n                this.animationDelayKey_ = undefined;\n            }\n            removeNode(this.viewport_);\n            if (this.handleResize_ !== undefined) {\n                removeEventListener(EventType.RESIZE, this.handleResize_, false);\n                this.handleResize_ = undefined;\n            }\n        }\n        else {\n            targetElement.appendChild(this.viewport_);\n            if (!this.renderer_) {\n                this.renderer_ = this.createRenderer();\n            }\n            var keyboardEventTarget = !this.keyboardEventTarget_ ?\n                targetElement : this.keyboardEventTarget_;\n            this.keyHandlerKeys_ = [\n                listen(keyboardEventTarget, EventType.KEYDOWN, this.handleBrowserEvent, this),\n                listen(keyboardEventTarget, EventType.KEYPRESS, this.handleBrowserEvent, this)\n            ];\n            if (!this.handleResize_) {\n                this.handleResize_ = this.updateSize.bind(this);\n                window.addEventListener(EventType.RESIZE, this.handleResize_, false);\n            }\n        }\n        this.updateSize();\n        // updateSize calls setSize, so no need to call this.render\n        // ourselves here.\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleTileChange_ = function () {\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleViewPropertyChanged_ = function () {\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleViewChanged_ = function () {\n        if (this.viewPropertyListenerKey_) {\n            unlistenByKey(this.viewPropertyListenerKey_);\n            this.viewPropertyListenerKey_ = null;\n        }\n        if (this.viewChangeListenerKey_) {\n            unlistenByKey(this.viewChangeListenerKey_);\n            this.viewChangeListenerKey_ = null;\n        }\n        var view = this.getView();\n        if (view) {\n            this.viewport_.setAttribute('data-view', getUid(view));\n            this.viewPropertyListenerKey_ = listen(view, ObjectEventType.PROPERTYCHANGE, this.handleViewPropertyChanged_, this);\n            this.viewChangeListenerKey_ = listen(view, EventType.CHANGE, this.handleViewPropertyChanged_, this);\n            view.resolveConstraints(0);\n        }\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleLayerGroupChanged_ = function () {\n        if (this.layerGroupPropertyListenerKeys_) {\n            this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n            this.layerGroupPropertyListenerKeys_ = null;\n        }\n        var layerGroup = this.getLayerGroup();\n        if (layerGroup) {\n            this.layerGroupPropertyListenerKeys_ = [\n                listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n                listen(layerGroup, EventType.CHANGE, this.render, this)\n            ];\n        }\n        this.render();\n    };\n    /**\n     * @return {boolean} Is rendered.\n     */\n    PluggableMap.prototype.isRendered = function () {\n        return !!this.frameState_;\n    };\n    /**\n     * Requests an immediate render in a synchronous manner.\n     * @api\n     */\n    PluggableMap.prototype.renderSync = function () {\n        if (this.animationDelayKey_) {\n            cancelAnimationFrame(this.animationDelayKey_);\n        }\n        this.animationDelay_();\n    };\n    /**\n     * Redraws all text after new fonts have loaded\n     */\n    PluggableMap.prototype.redrawText = function () {\n        var layerStates = this.getLayerGroup().getLayerStatesArray();\n        for (var i = 0, ii = layerStates.length; i < ii; ++i) {\n            var layer = layerStates[i].layer;\n            if (layer.hasRenderer()) {\n                layer.getRenderer().handleFontsChanged();\n            }\n        }\n    };\n    /**\n     * Request a map rendering (at the next animation frame).\n     * @api\n     */\n    PluggableMap.prototype.render = function () {\n        if (this.renderer_ && this.animationDelayKey_ === undefined) {\n            this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n        }\n    };\n    /**\n     * Remove the given control from the map.\n     * @param {import(\"./control/Control.js\").default} control Control.\n     * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n     *     if the control was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeControl = function (control) {\n        return this.getControls().remove(control);\n    };\n    /**\n     * Remove the given interaction from the map.\n     * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n     * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n     *     undefined if the interaction was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeInteraction = function (interaction) {\n        return this.getInteractions().remove(interaction);\n    };\n    /**\n     * Removes the given layer from the map.\n     * @param {import(\"./layer/Base.js\").default} layer Layer.\n     * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n     *     layer was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeLayer = function (layer) {\n        var layers = this.getLayerGroup().getLayers();\n        return layers.remove(layer);\n    };\n    /**\n     * Remove the given overlay from the map.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n     *     if the overlay was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeOverlay = function (overlay) {\n        return this.getOverlays().remove(overlay);\n    };\n    /**\n     * @param {number} time Time.\n     * @private\n     */\n    PluggableMap.prototype.renderFrame_ = function (time) {\n        var size = this.getSize();\n        var view = this.getView();\n        var previousFrameState = this.frameState_;\n        /** @type {?FrameState} */\n        var frameState = null;\n        if (size !== undefined && hasArea(size) && view && view.isDef()) {\n            var viewHints = view.getHints(this.frameState_ ? this.frameState_.viewHints : undefined);\n            var viewState = view.getState();\n            frameState = {\n                animate: false,\n                coordinateToPixelTransform: this.coordinateToPixelTransform_,\n                declutterItems: previousFrameState ? previousFrameState.declutterItems : [],\n                extent: getForViewAndSize(viewState.center, viewState.resolution, viewState.rotation, size),\n                index: this.frameIndex_++,\n                layerIndex: 0,\n                layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n                pixelRatio: this.pixelRatio_,\n                pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n                postRenderFunctions: [],\n                size: size,\n                tileQueue: this.tileQueue_,\n                time: time,\n                usedTiles: {},\n                viewState: viewState,\n                viewHints: viewHints,\n                wantedTiles: {}\n            };\n        }\n        this.frameState_ = frameState;\n        this.renderer_.renderFrame(frameState);\n        if (frameState) {\n            if (frameState.animate) {\n                this.render();\n            }\n            Array.prototype.push.apply(this.postRenderFunctions_, frameState.postRenderFunctions);\n            if (previousFrameState) {\n                var moveStart = !this.previousExtent_ ||\n                    (!isEmpty(this.previousExtent_) &&\n                        !equals(frameState.extent, this.previousExtent_));\n                if (moveStart) {\n                    this.dispatchEvent(new MapEvent(MapEventType.MOVESTART, this, previousFrameState));\n                    this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n                }\n            }\n            var idle = this.previousExtent_ &&\n                !frameState.viewHints[ViewHint.ANIMATING] &&\n                !frameState.viewHints[ViewHint.INTERACTING] &&\n                !equals(frameState.extent, this.previousExtent_);\n            if (idle) {\n                this.dispatchEvent(new MapEvent(MapEventType.MOVEEND, this, frameState));\n                clone(frameState.extent, this.previousExtent_);\n            }\n        }\n        this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n        this.postRenderTimeoutHandle_ = setTimeout(this.handlePostRender.bind(this), 0);\n    };\n    /**\n     * Sets the layergroup of this map.\n     * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setLayerGroup = function (layerGroup) {\n        this.set(MapProperty.LAYERGROUP, layerGroup);\n    };\n    /**\n     * Set the size of this map.\n     * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setSize = function (size) {\n        this.set(MapProperty.SIZE, size);\n    };\n    /**\n     * Set the target element to render this map into.\n     * @param {HTMLElement|string|undefined} target The Element or id of the Element\n     *     that the map is rendered in.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setTarget = function (target) {\n        this.set(MapProperty.TARGET, target);\n    };\n    /**\n     * Set the view for this map.\n     * @param {View} view The view that controls this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setView = function (view) {\n        this.set(MapProperty.VIEW, view);\n    };\n    /**\n     * Force a recalculation of the map viewport size.  This should be called when\n     * third-party code changes the size of the map viewport.\n     * @api\n     */\n    PluggableMap.prototype.updateSize = function () {\n        var targetElement = this.getTargetElement();\n        if (!targetElement) {\n            this.setSize(undefined);\n        }\n        else {\n            var computedStyle = getComputedStyle(targetElement);\n            this.setSize([\n                targetElement.offsetWidth -\n                    parseFloat(computedStyle['borderLeftWidth']) -\n                    parseFloat(computedStyle['paddingLeft']) -\n                    parseFloat(computedStyle['paddingRight']) -\n                    parseFloat(computedStyle['borderRightWidth']),\n                targetElement.offsetHeight -\n                    parseFloat(computedStyle['borderTopWidth']) -\n                    parseFloat(computedStyle['paddingTop']) -\n                    parseFloat(computedStyle['paddingBottom']) -\n                    parseFloat(computedStyle['borderBottomWidth'])\n            ]);\n        }\n    };\n    return PluggableMap;\n}(BaseObject));\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n    /**\n     * @type {HTMLElement|Document}\n     */\n    var keyboardEventTarget = null;\n    if (options.keyboardEventTarget !== undefined) {\n        keyboardEventTarget = typeof options.keyboardEventTarget === 'string' ?\n            document.getElementById(options.keyboardEventTarget) :\n            options.keyboardEventTarget;\n    }\n    /**\n     * @type {Object<string, *>}\n     */\n    var values = {};\n    var layerGroup = options.layers && typeof /** @type {?} */ (options.layers).getLayers === 'function' ?\n        /** @type {LayerGroup} */ (options.layers) : new LayerGroup({ layers: /** @type {Collection} */ (options.layers) });\n    values[MapProperty.LAYERGROUP] = layerGroup;\n    values[MapProperty.TARGET] = options.target;\n    values[MapProperty.VIEW] = options.view !== undefined ?\n        options.view : new View();\n    var controls;\n    if (options.controls !== undefined) {\n        if (Array.isArray(options.controls)) {\n            controls = new Collection(options.controls.slice());\n        }\n        else {\n            assert(typeof /** @type {?} */ (options.controls).getArray === 'function', 47); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n            controls = /** @type {Collection} */ (options.controls);\n        }\n    }\n    var interactions;\n    if (options.interactions !== undefined) {\n        if (Array.isArray(options.interactions)) {\n            interactions = new Collection(options.interactions.slice());\n        }\n        else {\n            assert(typeof /** @type {?} */ (options.interactions).getArray === 'function', 48); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n            interactions = /** @type {Collection} */ (options.interactions);\n        }\n    }\n    var overlays;\n    if (options.overlays !== undefined) {\n        if (Array.isArray(options.overlays)) {\n            overlays = new Collection(options.overlays.slice());\n        }\n        else {\n            assert(typeof /** @type {?} */ (options.overlays).getArray === 'function', 49); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n            overlays = options.overlays;\n        }\n    }\n    else {\n        overlays = new Collection();\n    }\n    return {\n        controls: controls,\n        interactions: interactions,\n        keyboardEventTarget: keyboardEventTarget,\n        overlays: overlays,\n        values: values\n    };\n}\nexport default PluggableMap;\n//# sourceMappingURL=PluggableMap.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Control\n */\nimport { VOID } from '../functions.js';\nimport MapEventType from '../MapEventType.js';\nimport BaseObject from '../Object.js';\nimport { removeNode } from '../dom.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nvar Control = /** @class */ (function (_super) {\n    __extends(Control, _super);\n    /**\n     * @param {Options} options Control options.\n     */\n    function Control(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {HTMLElement}\n         */\n        _this.element = options.element ? options.element : null;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.target_ = null;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        /**\n         * @protected\n         * @type {!Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.listenerKeys = [];\n        /**\n         * @type {function(import(\"../MapEvent.js\").default): void}\n         */\n        _this.render = options.render ? options.render : VOID;\n        if (options.target) {\n            _this.setTarget(options.target);\n        }\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    Control.prototype.disposeInternal = function () {\n        removeNode(this.element);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Get the map associated with this control.\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     * @api\n     */\n    Control.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Remove the control from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @api\n     */\n    Control.prototype.setMap = function (map) {\n        if (this.map_) {\n            removeNode(this.element);\n        }\n        for (var i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n            unlistenByKey(this.listenerKeys[i]);\n        }\n        this.listenerKeys.length = 0;\n        this.map_ = map;\n        if (this.map_) {\n            var target = this.target_ ?\n                this.target_ : map.getOverlayContainerStopEvent();\n            target.appendChild(this.element);\n            if (this.render !== VOID) {\n                this.listenerKeys.push(listen(map, MapEventType.POSTRENDER, this.render, this));\n            }\n            map.render();\n        }\n    };\n    /**\n     * This function is used to set a target element for the control. It has no\n     * effect if it is called after the control has been added to the map (i.e.\n     * after `setMap` is called on the control). If no `target` is set in the\n     * options passed to the control constructor and if `setTarget` is not called\n     * then the control is added to the map's overlay container.\n     * @param {HTMLElement|string} target Target.\n     * @api\n     */\n    Control.prototype.setTarget = function (target) {\n        this.target_ = typeof target === 'string' ?\n            document.getElementById(target) :\n            target;\n    };\n    return Control;\n}(BaseObject));\nexport default Control;\n//# sourceMappingURL=Control.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Attribution\n */\nimport { equals } from '../array.js';\nimport Control from './Control.js';\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_COLLAPSED } from '../css.js';\nimport { removeChildren, replaceNode } from '../dom.js';\nimport EventType from '../events/EventType.js';\nimport { inView } from '../layer/Layer.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [collapseLabel='»'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nvar Attribution = /** @class */ (function (_super) {\n    __extends(Attribution, _super);\n    /**\n     * @param {Options=} opt_options Attribution options.\n     */\n    function Attribution(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            render: options.render || render,\n            target: options.target\n        }) || this;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.ulElement_ = document.createElement('ul');\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.overrideCollapsible_ = options.collapsible !== undefined;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.collapsible_ = options.collapsible !== undefined ?\n            options.collapsible : true;\n        if (!_this.collapsible_) {\n            _this.collapsed_ = false;\n        }\n        var className = options.className !== undefined ? options.className : 'ol-attribution';\n        var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n        var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n        if (typeof collapseLabel === 'string') {\n            /**\n             * @private\n             * @type {HTMLElement}\n             */\n            _this.collapseLabel_ = document.createElement('span');\n            _this.collapseLabel_.textContent = collapseLabel;\n        }\n        else {\n            _this.collapseLabel_ = collapseLabel;\n        }\n        var label = options.label !== undefined ? options.label : 'i';\n        if (typeof label === 'string') {\n            /**\n             * @private\n             * @type {HTMLElement}\n             */\n            _this.label_ = document.createElement('span');\n            _this.label_.textContent = label;\n        }\n        else {\n            _this.label_ = label;\n        }\n        var activeLabel = (_this.collapsible_ && !_this.collapsed_) ?\n            _this.collapseLabel_ : _this.label_;\n        var button = document.createElement('button');\n        button.setAttribute('type', 'button');\n        button.title = tipLabel;\n        button.appendChild(activeLabel);\n        button.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this), false);\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL +\n            (_this.collapsed_ && _this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n            (_this.collapsible_ ? '' : ' ol-uncollapsible');\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(_this.ulElement_);\n        element.appendChild(button);\n        /**\n         * A list of currently rendered resolutions.\n         * @type {Array<string>}\n         * @private\n         */\n        _this.renderedAttributions_ = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderedVisible_ = true;\n        return _this;\n    }\n    /**\n     * Collect a list of visible attributions and set the collapsible state.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {Array<string>} Attributions.\n     * @private\n     */\n    Attribution.prototype.collectSourceAttributions_ = function (frameState) {\n        /**\n         * Used to determine if an attribution already exists.\n         * @type {!Object<string, boolean>}\n         */\n        var lookup = {};\n        /**\n         * A list of visible attributions.\n         * @type {Array<string>}\n         */\n        var visibleAttributions = [];\n        var layerStatesArray = frameState.layerStatesArray;\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layerState = layerStatesArray[i];\n            if (!inView(layerState, frameState.viewState)) {\n                continue;\n            }\n            var source = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer).getSource();\n            if (!source) {\n                continue;\n            }\n            var attributionGetter = source.getAttributions();\n            if (!attributionGetter) {\n                continue;\n            }\n            var attributions = attributionGetter(frameState);\n            if (!attributions) {\n                continue;\n            }\n            if (!this.overrideCollapsible_ && source.getAttributionsCollapsible() === false) {\n                this.setCollapsible(false);\n            }\n            if (Array.isArray(attributions)) {\n                for (var j = 0, jj = attributions.length; j < jj; ++j) {\n                    if (!(attributions[j] in lookup)) {\n                        visibleAttributions.push(attributions[j]);\n                        lookup[attributions[j]] = true;\n                    }\n                }\n            }\n            else {\n                if (!(attributions in lookup)) {\n                    visibleAttributions.push(attributions);\n                    lookup[attributions] = true;\n                }\n            }\n        }\n        return visibleAttributions;\n    };\n    /**\n     * @private\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    Attribution.prototype.updateElement_ = function (frameState) {\n        if (!frameState) {\n            if (this.renderedVisible_) {\n                this.element.style.display = 'none';\n                this.renderedVisible_ = false;\n            }\n            return;\n        }\n        var attributions = this.collectSourceAttributions_(frameState);\n        var visible = attributions.length > 0;\n        if (this.renderedVisible_ != visible) {\n            this.element.style.display = visible ? '' : 'none';\n            this.renderedVisible_ = visible;\n        }\n        if (equals(attributions, this.renderedAttributions_)) {\n            return;\n        }\n        removeChildren(this.ulElement_);\n        // append the attributions\n        for (var i = 0, ii = attributions.length; i < ii; ++i) {\n            var element = document.createElement('li');\n            element.innerHTML = attributions[i];\n            this.ulElement_.appendChild(element);\n        }\n        this.renderedAttributions_ = attributions;\n    };\n    /**\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Attribution.prototype.handleClick_ = function (event) {\n        event.preventDefault();\n        this.handleToggle_();\n    };\n    /**\n     * @private\n     */\n    Attribution.prototype.handleToggle_ = function () {\n        this.element.classList.toggle(CLASS_COLLAPSED);\n        if (this.collapsed_) {\n            replaceNode(this.collapseLabel_, this.label_);\n        }\n        else {\n            replaceNode(this.label_, this.collapseLabel_);\n        }\n        this.collapsed_ = !this.collapsed_;\n    };\n    /**\n     * Return `true` if the attribution is collapsible, `false` otherwise.\n     * @return {boolean} True if the widget is collapsible.\n     * @api\n     */\n    Attribution.prototype.getCollapsible = function () {\n        return this.collapsible_;\n    };\n    /**\n     * Set whether the attribution should be collapsible.\n     * @param {boolean} collapsible True if the widget is collapsible.\n     * @api\n     */\n    Attribution.prototype.setCollapsible = function (collapsible) {\n        if (this.collapsible_ === collapsible) {\n            return;\n        }\n        this.collapsible_ = collapsible;\n        this.element.classList.toggle('ol-uncollapsible');\n        if (!collapsible && this.collapsed_) {\n            this.handleToggle_();\n        }\n    };\n    /**\n     * Collapse or expand the attribution according to the passed parameter. Will\n     * not do anything if the attribution isn't collapsible or if the current\n     * collapsed state is already the one requested.\n     * @param {boolean} collapsed True if the widget is collapsed.\n     * @api\n     */\n    Attribution.prototype.setCollapsed = function (collapsed) {\n        if (!this.collapsible_ || this.collapsed_ === collapsed) {\n            return;\n        }\n        this.handleToggle_();\n    };\n    /**\n     * Return `true` when the attribution is currently collapsed or `false`\n     * otherwise.\n     * @return {boolean} True if the widget is collapsed.\n     * @api\n     */\n    Attribution.prototype.getCollapsed = function () {\n        return this.collapsed_;\n    };\n    return Attribution;\n}(Control));\n/**\n * Update the attribution element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {Attribution}\n * @api\n */\nexport function render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n}\nexport default Attribution;\n//# sourceMappingURL=Attribution.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport { CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE } from '../css.js';\nimport { easeOut } from '../easing.js';\nimport EventType from '../events/EventType.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function()} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nvar Rotate = /** @class */ (function (_super) {\n    __extends(Rotate, _super);\n    /**\n     * @param {Options=} opt_options Rotate options.\n     */\n    function Rotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            render: options.render || render,\n            target: options.target\n        }) || this;\n        var className = options.className !== undefined ? options.className : 'ol-rotate';\n        var label = options.label !== undefined ? options.label : '\\u21E7';\n        /**\n         * @type {HTMLElement}\n         * @private\n         */\n        _this.label_ = null;\n        if (typeof label === 'string') {\n            _this.label_ = document.createElement('span');\n            _this.label_.className = 'ol-compass';\n            _this.label_.textContent = label;\n        }\n        else {\n            _this.label_ = label;\n            _this.label_.classList.add('ol-compass');\n        }\n        var tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n        var button = document.createElement('button');\n        button.className = className + '-reset';\n        button.setAttribute('type', 'button');\n        button.title = tipLabel;\n        button.appendChild(_this.label_);\n        button.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this), false);\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(button);\n        _this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.rotation_ = undefined;\n        if (_this.autoHide_) {\n            _this.element.classList.add(CLASS_HIDDEN);\n        }\n        return _this;\n    }\n    /**\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Rotate.prototype.handleClick_ = function (event) {\n        event.preventDefault();\n        if (this.callResetNorth_ !== undefined) {\n            this.callResetNorth_();\n        }\n        else {\n            this.resetNorth_();\n        }\n    };\n    /**\n     * @private\n     */\n    Rotate.prototype.resetNorth_ = function () {\n        var map = this.getMap();\n        var view = map.getView();\n        if (!view) {\n            // the map does not have a view, so we can't act\n            // upon it\n            return;\n        }\n        if (view.getRotation() !== undefined) {\n            if (this.duration_ > 0) {\n                view.animate({\n                    rotation: 0,\n                    duration: this.duration_,\n                    easing: easeOut\n                });\n            }\n            else {\n                view.setRotation(0);\n            }\n        }\n    };\n    return Rotate;\n}(Control));\n/**\n * Update the rotate control element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {Rotate}\n * @api\n */\nexport function render(mapEvent) {\n    var frameState = mapEvent.frameState;\n    if (!frameState) {\n        return;\n    }\n    var rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n        var transform = 'rotate(' + rotation + 'rad)';\n        if (this.autoHide_) {\n            var contains = this.element.classList.contains(CLASS_HIDDEN);\n            if (!contains && rotation === 0) {\n                this.element.classList.add(CLASS_HIDDEN);\n            }\n            else if (contains && rotation !== 0) {\n                this.element.classList.remove(CLASS_HIDDEN);\n            }\n        }\n        this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n}\nexport default Rotate;\n//# sourceMappingURL=Rotate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Zoom\n */\nimport EventType from '../events/EventType.js';\nimport Control from './Control.js';\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE } from '../css.js';\nimport { easeOut } from '../easing.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='-'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nvar Zoom = /** @class */ (function (_super) {\n    __extends(Zoom, _super);\n    /**\n     * @param {Options=} opt_options Zoom options.\n     */\n    function Zoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            target: options.target\n        }) || this;\n        var className = options.className !== undefined ? options.className : 'ol-zoom';\n        var delta = options.delta !== undefined ? options.delta : 1;\n        var zoomInLabel = options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n        var zoomOutLabel = options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\n        var zoomInTipLabel = options.zoomInTipLabel !== undefined ?\n            options.zoomInTipLabel : 'Zoom in';\n        var zoomOutTipLabel = options.zoomOutTipLabel !== undefined ?\n            options.zoomOutTipLabel : 'Zoom out';\n        var inElement = document.createElement('button');\n        inElement.className = className + '-in';\n        inElement.setAttribute('type', 'button');\n        inElement.title = zoomInTipLabel;\n        inElement.appendChild(typeof zoomInLabel === 'string' ? document.createTextNode(zoomInLabel) : zoomInLabel);\n        inElement.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this, delta), false);\n        var outElement = document.createElement('button');\n        outElement.className = className + '-out';\n        outElement.setAttribute('type', 'button');\n        outElement.title = zoomOutTipLabel;\n        outElement.appendChild(typeof zoomOutLabel === 'string' ? document.createTextNode(zoomOutLabel) : zoomOutLabel);\n        outElement.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this, -delta), false);\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(inElement);\n        element.appendChild(outElement);\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * @param {number} delta Zoom delta.\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Zoom.prototype.handleClick_ = function (delta, event) {\n        event.preventDefault();\n        this.zoomByDelta_(delta);\n    };\n    /**\n     * @param {number} delta Zoom delta.\n     * @private\n     */\n    Zoom.prototype.zoomByDelta_ = function (delta) {\n        var map = this.getMap();\n        var view = map.getView();\n        if (!view) {\n            // the map does not have a view, so we can't act\n            // upon it\n            return;\n        }\n        var currentZoom = view.getZoom();\n        if (currentZoom !== undefined) {\n            var newZoom = view.getConstrainedZoom(currentZoom + delta);\n            if (this.duration_ > 0) {\n                if (view.getAnimating()) {\n                    view.cancelAnimations();\n                }\n                view.animate({\n                    zoom: newZoom,\n                    duration: this.duration_,\n                    easing: easeOut\n                });\n            }\n            else {\n                view.setZoom(newZoom);\n            }\n        }\n    };\n    return Zoom;\n}(Control));\nexport default Zoom;\n//# sourceMappingURL=Zoom.js.map","/**\n * @module ol/control\n */\nimport Collection from './Collection.js';\nimport Attribution from './control/Attribution.js';\nimport Rotate from './control/Rotate.js';\nimport Zoom from './control/Zoom.js';\nexport { default as Attribution } from './control/Attribution.js';\nexport { default as Control } from './control/Control.js';\nexport { default as FullScreen } from './control/FullScreen.js';\nexport { default as MousePosition } from './control/MousePosition.js';\nexport { default as OverviewMap } from './control/OverviewMap.js';\nexport { default as Rotate } from './control/Rotate.js';\nexport { default as ScaleLine } from './control/ScaleLine.js';\nexport { default as Zoom } from './control/Zoom.js';\nexport { default as ZoomSlider } from './control/ZoomSlider.js';\nexport { default as ZoomToExtent } from './control/ZoomToExtent.js';\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./control/Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./control/Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./control/Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions=} opt_options\n * Defaults options.\n * @return {Collection<import(\"./control/Control.js\").default>}\n * Controls.\n * @api\n */\nexport function defaults(opt_options) {\n    var options = opt_options ? opt_options : {};\n    var controls = new Collection();\n    var zoomControl = options.zoom !== undefined ? options.zoom : true;\n    if (zoomControl) {\n        controls.push(new Zoom(options.zoomOptions));\n    }\n    var rotateControl = options.rotate !== undefined ? options.rotate : true;\n    if (rotateControl) {\n        controls.push(new Rotate(options.rotateOptions));\n    }\n    var attributionControl = options.attribution !== undefined ?\n        options.attribution : true;\n    if (attributionControl) {\n        controls.push(new Attribution(options.attributionOptions));\n    }\n    return controls;\n}\n//# sourceMappingURL=control.js.map","/**\n * @module ol/Kinetic\n */\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nvar Kinetic = /** @class */ (function () {\n    /**\n     * @param {number} decay Rate of decay (must be negative).\n     * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n     * @param {number} delay Delay to consider to calculate the kinetic\n     *     initial values (milliseconds).\n     */\n    function Kinetic(decay, minVelocity, delay) {\n        /**\n         * @private\n         * @type {number}\n         */\n        this.decay_ = decay;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minVelocity_ = minVelocity;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.delay_ = delay;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.points_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        this.angle_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.initialVelocity_ = 0;\n    }\n    /**\n     * FIXME empty description for jsdoc\n     */\n    Kinetic.prototype.begin = function () {\n        this.points_.length = 0;\n        this.angle_ = 0;\n        this.initialVelocity_ = 0;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     */\n    Kinetic.prototype.update = function (x, y) {\n        this.points_.push(x, y, Date.now());\n    };\n    /**\n     * @return {boolean} Whether we should do kinetic animation.\n     */\n    Kinetic.prototype.end = function () {\n        if (this.points_.length < 6) {\n            // at least 2 points are required (i.e. there must be at least 6 elements\n            // in the array)\n            return false;\n        }\n        var delay = Date.now() - this.delay_;\n        var lastIndex = this.points_.length - 3;\n        if (this.points_[lastIndex + 2] < delay) {\n            // the last tracked point is too old, which means that the user stopped\n            // panning before releasing the map\n            return false;\n        }\n        // get the first point which still falls into the delay time\n        var firstIndex = lastIndex - 3;\n        while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n            firstIndex -= 3;\n        }\n        var duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n        // we don't want a duration of 0 (divide by zero)\n        // we also make sure the user panned for a duration of at least one frame\n        // (1/60s) to compute sane displacement values\n        if (duration < 1000 / 60) {\n            return false;\n        }\n        var dx = this.points_[lastIndex] - this.points_[firstIndex];\n        var dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n        this.angle_ = Math.atan2(dy, dx);\n        this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n        return this.initialVelocity_ > this.minVelocity_;\n    };\n    /**\n     * @return {number} Total distance travelled (pixels).\n     */\n    Kinetic.prototype.getDistance = function () {\n        return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n    };\n    /**\n     * @return {number} Angle of the kinetic panning animation (radians).\n     */\n    Kinetic.prototype.getAngle = function () {\n        return this.angle_;\n    };\n    return Kinetic;\n}());\nexport default Kinetic;\n//# sourceMappingURL=Kinetic.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction, { zoomByDelta } from './Interaction.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nvar DoubleClickZoom = /** @class */ (function (_super) {\n    __extends(DoubleClickZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DoubleClickZoom(opt_options) {\n        var _this = _super.call(this, {\n            handleEvent: handleEvent\n        }) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.delta_ = options.delta ? options.delta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    return DoubleClickZoom;\n}(Interaction));\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n * doubleclick) and eventually zooms the map.\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {DoubleClickZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n    var stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n        var browserEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n        var map = mapBrowserEvent.map;\n        var anchor = mapBrowserEvent.coordinate;\n        var delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n        var view = map.getView();\n        zoomByDelta(view, delta, anchor, this.duration_);\n        mapBrowserEvent.preventDefault();\n        stopEvent = true;\n    }\n    return !stopEvent;\n}\nexport default DoubleClickZoom;\n//# sourceMappingURL=DoubleClickZoom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Pointer\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction from './Interaction.js';\nimport { getValues } from '../obj.js';\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default)} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default)} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events,\n * also during a drag sequence (so during a drag sequence both the\n * `handleDragEvent` function and this function are called).\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nvar PointerInteraction = /** @class */ (function (_super) {\n    __extends(PointerInteraction, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function PointerInteraction(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)) || this;\n        if (options.handleDownEvent) {\n            _this.handleDownEvent = options.handleDownEvent;\n        }\n        if (options.handleDragEvent) {\n            _this.handleDragEvent = options.handleDragEvent;\n        }\n        if (options.handleMoveEvent) {\n            _this.handleMoveEvent = options.handleMoveEvent;\n        }\n        if (options.handleUpEvent) {\n            _this.handleUpEvent = options.handleUpEvent;\n        }\n        if (options.stopDown) {\n            _this.stopDown = options.stopDown;\n        }\n        /**\n         * @type {boolean}\n         * @protected\n         */\n        _this.handlingDownUpSequence = false;\n        /**\n         * @type {!Object<string, PointerEvent>}\n         * @private\n         */\n        _this.trackedPointers_ = {};\n        /**\n         * @type {Array<PointerEvent>}\n         * @protected\n         */\n        _this.targetPointers = [];\n        return _this;\n    }\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     * @protected\n     */\n    PointerInteraction.prototype.handleDownEvent = function (mapBrowserEvent) {\n        return false;\n    };\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n     * @protected\n     */\n    PointerInteraction.prototype.handleDragEvent = function (mapBrowserEvent) { };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n     * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n     * detected.\n     * @override\n     * @api\n     */\n    PointerInteraction.prototype.handleEvent = function (mapBrowserEvent) {\n        if (!( /** @type {import(\"../MapBrowserPointerEvent.js\").default} */(mapBrowserEvent).pointerEvent)) {\n            return true;\n        }\n        var stopEvent = false;\n        this.updateTrackedPointers_(mapBrowserEvent);\n        if (this.handlingDownUpSequence) {\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n                this.handleDragEvent(mapBrowserEvent);\n            }\n            else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n                var handledUp = this.handleUpEvent(mapBrowserEvent);\n                this.handlingDownUpSequence = handledUp && this.targetPointers.length > 0;\n            }\n        }\n        else {\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n                var handled = this.handleDownEvent(mapBrowserEvent);\n                if (handled) {\n                    mapBrowserEvent.preventDefault();\n                }\n                this.handlingDownUpSequence = handled;\n                stopEvent = this.stopDown(handled);\n            }\n            else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n                this.handleMoveEvent(mapBrowserEvent);\n            }\n        }\n        return !stopEvent;\n    };\n    /**\n     * Handle pointer move events.\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n     * @protected\n     */\n    PointerInteraction.prototype.handleMoveEvent = function (mapBrowserEvent) { };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     * @protected\n     */\n    PointerInteraction.prototype.handleUpEvent = function (mapBrowserEvent) {\n        return false;\n    };\n    /**\n     * This function is used to determine if \"down\" events should be propagated\n     * to other interactions or should be stopped.\n     * @param {boolean} handled Was the event handled by the interaction?\n     * @return {boolean} Should the `down` event be stopped?\n     */\n    PointerInteraction.prototype.stopDown = function (handled) {\n        return handled;\n    };\n    /**\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n     * @private\n     */\n    PointerInteraction.prototype.updateTrackedPointers_ = function (mapBrowserEvent) {\n        if (isPointerDraggingEvent(mapBrowserEvent)) {\n            var event_1 = mapBrowserEvent.pointerEvent;\n            var id = event_1.pointerId.toString();\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n                delete this.trackedPointers_[id];\n            }\n            else if (mapBrowserEvent.type ==\n                MapBrowserEventType.POINTERDOWN) {\n                this.trackedPointers_[id] = event_1;\n            }\n            else if (id in this.trackedPointers_) {\n                // update only when there was a pointerdown event for this pointer\n                this.trackedPointers_[id] = event_1;\n            }\n            this.targetPointers = getValues(this.trackedPointers_);\n        }\n    };\n    return PointerInteraction;\n}(Interaction));\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n    var length = pointerEvents.length;\n    var clientX = 0;\n    var clientY = 0;\n    for (var i = 0; i < length; i++) {\n        clientX += pointerEvents[i].clientX;\n        clientY += pointerEvents[i].clientY;\n    }\n    return [clientX / length, clientY / length];\n}\n/**\n * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n    var type = mapBrowserEvent.type;\n    return type === MapBrowserEventType.POINTERDOWN ||\n        type === MapBrowserEventType.POINTERDRAG ||\n        type === MapBrowserEventType.POINTERUP;\n}\nexport default PointerInteraction;\n//# sourceMappingURL=Pointer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragPan\n */\nimport { scale as scaleCoordinate, rotate as rotateCoordinate } from '../coordinate.js';\nimport { easeOut } from '../easing.js';\nimport { noModifierKeys, primaryAction } from '../events/condition.js';\nimport { FALSE } from '../functions.js';\nimport PointerInteraction, { centroid as centroidFromPointers } from './Pointer.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~noModifierKeys} and {@link module:ol/events/condition~primaryAction}.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nvar DragPan = /** @class */ (function (_super) {\n    __extends(DragPan, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragPan(opt_options) {\n        var _this = _super.call(this, {\n            stopDown: FALSE\n        }) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {import(\"../Kinetic.js\").default|undefined}\n         */\n        _this.kinetic_ = options.kinetic;\n        /**\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.lastCentroid = null;\n        /**\n         * @type {number}\n         */\n        _this.lastPointersCount_;\n        /**\n         * @type {boolean}\n         */\n        _this.panning_ = false;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : defaultCondition;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.noKinetic_ = false;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    DragPan.prototype.handleDragEvent = function (mapBrowserEvent) {\n        if (!this.panning_) {\n            this.panning_ = true;\n            this.getMap().getView().beginInteraction();\n        }\n        var targetPointers = this.targetPointers;\n        var centroid = centroidFromPointers(targetPointers);\n        if (targetPointers.length == this.lastPointersCount_) {\n            if (this.kinetic_) {\n                this.kinetic_.update(centroid[0], centroid[1]);\n            }\n            if (this.lastCentroid) {\n                var delta = [\n                    this.lastCentroid[0] - centroid[0],\n                    centroid[1] - this.lastCentroid[1]\n                ];\n                var map = mapBrowserEvent.map;\n                var view = map.getView();\n                scaleCoordinate(delta, view.getResolution());\n                rotateCoordinate(delta, view.getRotation());\n                view.adjustCenterInternal(delta);\n            }\n        }\n        else if (this.kinetic_) {\n            // reset so we don't overestimate the kinetic energy after\n            // after one finger down, tiny drag, second finger down\n            this.kinetic_.begin();\n        }\n        this.lastCentroid = centroid;\n        this.lastPointersCount_ = targetPointers.length;\n    };\n    /**\n     * @inheritDoc\n     */\n    DragPan.prototype.handleUpEvent = function (mapBrowserEvent) {\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (this.targetPointers.length === 0) {\n            if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n                var distance = this.kinetic_.getDistance();\n                var angle = this.kinetic_.getAngle();\n                var center = view.getCenterInternal();\n                var centerpx = map.getPixelFromCoordinateInternal(center);\n                var dest = map.getCoordinateFromPixelInternal([\n                    centerpx[0] - distance * Math.cos(angle),\n                    centerpx[1] - distance * Math.sin(angle)\n                ]);\n                view.animateInternal({\n                    center: view.getConstrainedCenter(dest),\n                    duration: 500,\n                    easing: easeOut\n                });\n            }\n            if (this.panning_) {\n                this.panning_ = false;\n                view.endInteraction();\n            }\n            return false;\n        }\n        else {\n            if (this.kinetic_) {\n                // reset so we don't overestimate the kinetic energy after\n                // after one finger up, tiny drag, second finger up\n                this.kinetic_.begin();\n            }\n            this.lastCentroid = null;\n            return true;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    DragPan.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            this.lastCentroid = null;\n            // stop any current animation\n            if (view.getAnimating()) {\n                view.cancelAnimations();\n            }\n            if (this.kinetic_) {\n                this.kinetic_.begin();\n            }\n            // No kinetic as soon as more than one pointer on the screen is\n            // detected. This is to prevent nasty pans after pinch.\n            this.noKinetic_ = this.targetPointers.length > 1;\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return DragPan;\n}(PointerInteraction));\n/**\n * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Browser event.\n * @return {boolean} Combined condition result.\n */\nfunction defaultCondition(mapBrowserEvent) {\n    return noModifierKeys(mapBrowserEvent) && primaryAction(mapBrowserEvent);\n}\nexport default DragPan;\n//# sourceMappingURL=DragPan.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragRotate\n */\nimport { disable } from '../rotationconstraint.js';\nimport { altShiftKeysOnly, mouseOnly, mouseActionButton } from '../events/condition.js';\nimport { FALSE } from '../functions.js';\nimport PointerInteraction from './Pointer.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nvar DragRotate = /** @class */ (function (_super) {\n    __extends(DragRotate, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragRotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            stopDown: FALSE\n        }) || this;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastAngle_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    DragRotate.prototype.handleDragEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return;\n        }\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (view.getConstraints().rotation === disable) {\n            return;\n        }\n        var size = map.getSize();\n        var offset = mapBrowserEvent.pixel;\n        var theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n        if (this.lastAngle_ !== undefined) {\n            var delta = theta - this.lastAngle_;\n            view.adjustRotationInternal(-delta);\n        }\n        this.lastAngle_ = theta;\n    };\n    /**\n     * @inheritDoc\n     */\n    DragRotate.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return true;\n        }\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        view.endInteraction(this.duration_);\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    DragRotate.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return false;\n        }\n        if (mouseActionButton(mapBrowserEvent) && this.condition_(mapBrowserEvent)) {\n            var map = mapBrowserEvent.map;\n            map.getView().beginInteraction();\n            this.lastAngle_ = undefined;\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return DragRotate;\n}(PointerInteraction));\nexport default DragRotate;\n//# sourceMappingURL=DragRotate.js.map","/**\n * @module ol/render/Box\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\nvar RenderBox = /** @class */ (function (_super) {\n    __extends(RenderBox, _super);\n    /**\n     * @param {string} className CSS class name.\n     */\n    function RenderBox(className) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {import(\"../geom/Polygon.js\").default}\n         * @private\n         */\n        _this.geometry_ = null;\n        /**\n         * @type {HTMLDivElement}\n         * @private\n         */\n        _this.element_ = document.createElement('div');\n        _this.element_.style.position = 'absolute';\n        _this.element_.className = 'ol-box ' + className;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        /**\n         * @private\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.startPixel_ = null;\n        /**\n         * @private\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.endPixel_ = null;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    RenderBox.prototype.disposeInternal = function () {\n        this.setMap(null);\n    };\n    /**\n     * @private\n     */\n    RenderBox.prototype.render_ = function () {\n        var startPixel = this.startPixel_;\n        var endPixel = this.endPixel_;\n        var px = 'px';\n        var style = this.element_.style;\n        style.left = Math.min(startPixel[0], endPixel[0]) + px;\n        style.top = Math.min(startPixel[1], endPixel[1]) + px;\n        style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n        style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    RenderBox.prototype.setMap = function (map) {\n        if (this.map_) {\n            this.map_.getOverlayContainer().removeChild(this.element_);\n            var style = this.element_.style;\n            style.left = style.top = style.width = style.height = 'inherit';\n        }\n        this.map_ = map;\n        if (this.map_) {\n            this.map_.getOverlayContainer().appendChild(this.element_);\n        }\n    };\n    /**\n     * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n     * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n     */\n    RenderBox.prototype.setPixels = function (startPixel, endPixel) {\n        this.startPixel_ = startPixel;\n        this.endPixel_ = endPixel;\n        this.createOrUpdateGeometry();\n        this.render_();\n    };\n    /**\n     * Creates or updates the cached geometry.\n     */\n    RenderBox.prototype.createOrUpdateGeometry = function () {\n        var startPixel = this.startPixel_;\n        var endPixel = this.endPixel_;\n        var pixels = [\n            startPixel,\n            [startPixel[0], endPixel[1]],\n            endPixel,\n            [endPixel[0], startPixel[1]]\n        ];\n        var coordinates = pixels.map(this.map_.getCoordinateFromPixelInternal, this.map_);\n        // close the polygon\n        coordinates[4] = coordinates[0].slice();\n        if (!this.geometry_) {\n            this.geometry_ = new Polygon([coordinates]);\n        }\n        else {\n            this.geometry_.setCoordinates([coordinates]);\n        }\n    };\n    /**\n     * @return {import(\"../geom/Polygon.js\").default} Geometry.\n     */\n    RenderBox.prototype.getGeometry = function () {\n        return this.geometry_;\n    };\n    return RenderBox;\n}(Disposable));\nexport default RenderBox;\n//# sourceMappingURL=Box.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport { always, mouseOnly, mouseActionButton } from '../events/condition.js';\nimport { VOID } from '../functions.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~always}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default)} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n/**\n * @enum {string}\n */\nvar DragBoxEventType = {\n    /**\n     * Triggered upon drag box start.\n     * @event DragBoxEvent#boxstart\n     * @api\n     */\n    BOXSTART: 'boxstart',\n    /**\n     * Triggered on drag when box is active.\n     * @event DragBoxEvent#boxdrag\n     * @api\n     */\n    BOXDRAG: 'boxdrag',\n    /**\n     * Triggered upon drag box end.\n     * @event DragBoxEvent#boxend\n     * @api\n     */\n    BOXEND: 'boxend'\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nvar DragBoxEvent = /** @class */ (function (_super) {\n    __extends(DragBoxEvent, _super);\n    /**\n     * @param {string} type The event type.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n     */\n    function DragBoxEvent(type, coordinate, mapBrowserEvent) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The coordinate of the drag event.\n         * @const\n         * @type {import(\"../coordinate.js\").Coordinate}\n         * @api\n         */\n        _this.coordinate = coordinate;\n        /**\n         * @const\n         * @type {import(\"../MapBrowserEvent.js\").default}\n         * @api\n         */\n        _this.mapBrowserEvent = mapBrowserEvent;\n        return _this;\n    }\n    return DragBoxEvent;\n}(Event));\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * This interaction is only supported for mouse devices.\n *\n * @fires DragBoxEvent\n * @api\n */\nvar DragBox = /** @class */ (function (_super) {\n    __extends(DragBox, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragBox(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @type {import(\"../render/Box.js\").default}\n         * @private\n         */\n        _this.box_ = new RenderBox(options.className || 'ol-dragbox');\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n        /**\n         * Function to execute just before `onboxend` is fired\n         * @type {function(this:DragBox, import(\"../MapBrowserEvent.js\").default): void}\n         * @private\n         */\n        _this.onBoxEnd_ = options.onBoxEnd ? options.onBoxEnd : VOID;\n        /**\n         * @type {import(\"../pixel.js\").Pixel}\n         * @private\n         */\n        _this.startPixel_ = null;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : always;\n        /**\n         * @private\n         * @type {EndCondition}\n         */\n        _this.boxEndCondition_ = options.boxEndCondition ?\n            options.boxEndCondition : _this.defaultBoxEndCondition;\n        return _this;\n    }\n    /**\n     * The default condition for determining whether the boxend event\n     * should fire.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n     *     leading to the box end.\n     * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n     * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n     * @return {boolean} Whether or not the boxend condition should be fired.\n     */\n    DragBox.prototype.defaultBoxEndCondition = function (mapBrowserEvent, startPixel, endPixel) {\n        var width = endPixel[0] - startPixel[0];\n        var height = endPixel[1] - startPixel[1];\n        return width * width + height * height >= this.minArea_;\n    };\n    /**\n     * Returns geometry of last drawn box.\n     * @return {import(\"../geom/Polygon.js\").default} Geometry.\n     * @api\n     */\n    DragBox.prototype.getGeometry = function () {\n        return this.box_.getGeometry();\n    };\n    /**\n     * @inheritDoc\n     */\n    DragBox.prototype.handleDragEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return;\n        }\n        this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n        this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXDRAG, mapBrowserEvent.coordinate, mapBrowserEvent));\n    };\n    /**\n     * @inheritDoc\n     */\n    DragBox.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return true;\n        }\n        this.box_.setMap(null);\n        if (this.boxEndCondition_(mapBrowserEvent, this.startPixel_, mapBrowserEvent.pixel)) {\n            this.onBoxEnd_(mapBrowserEvent);\n            this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXEND, mapBrowserEvent.coordinate, mapBrowserEvent));\n        }\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    DragBox.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return false;\n        }\n        if (mouseActionButton(mapBrowserEvent) &&\n            this.condition_(mapBrowserEvent)) {\n            this.startPixel_ = mapBrowserEvent.pixel;\n            this.box_.setMap(mapBrowserEvent.map);\n            this.box_.setPixels(this.startPixel_, this.startPixel_);\n            this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXSTART, mapBrowserEvent.coordinate, mapBrowserEvent));\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return DragBox;\n}(PointerInteraction));\nexport default DragBox;\n//# sourceMappingURL=DragBox.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragZoom\n */\nimport { easeOut } from '../easing.js';\nimport { shiftKeyOnly } from '../events/condition.js';\nimport { createOrUpdateFromCoordinates, getBottomLeft, getCenter, getTopRight, scaleFromCenter } from '../extent.js';\nimport DragBox from './DragBox.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nvar DragZoom = /** @class */ (function (_super) {\n    __extends(DragZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var condition = options.condition ? options.condition : shiftKeyOnly;\n        _this = _super.call(this, {\n            condition: condition,\n            className: options.className || 'ol-dragzoom',\n            minArea: options.minArea,\n            onBoxEnd: onBoxEnd\n        }) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 200;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.out_ = options.out !== undefined ? options.out : false;\n        return _this;\n    }\n    return DragZoom;\n}(DragBox));\n/**\n * @this {DragZoom}\n */\nfunction onBoxEnd() {\n    var map = this.getMap();\n    var view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    var size = /** @type {!import(\"../size.js\").Size} */ (map.getSize());\n    var extent = this.getGeometry().getExtent();\n    if (this.out_) {\n        var mapExtent = view.calculateExtentInternal(size);\n        var boxPixelExtent = createOrUpdateFromCoordinates([\n            map.getPixelFromCoordinateInternal(getBottomLeft(extent)),\n            map.getPixelFromCoordinateInternal(getTopRight(extent))\n        ]);\n        var factor = view.getResolutionForExtentInternal(boxPixelExtent, size);\n        scaleFromCenter(mapExtent, 1 / factor);\n        extent = mapExtent;\n    }\n    var resolution = view.getConstrainedResolution(view.getResolutionForExtentInternal(extent, size));\n    var center = view.getConstrainedCenter(getCenter(extent), resolution);\n    view.animateInternal({\n        resolution: resolution,\n        center: center,\n        duration: this.duration_,\n        easing: easeOut\n    });\n}\nexport default DragZoom;\n//# sourceMappingURL=DragZoom.js.map","/**\n * @module ol/events/KeyCode\n */\n/**\n * @enum {number}\n * @const\n */\nexport default {\n    LEFT: 37,\n    UP: 38,\n    RIGHT: 39,\n    DOWN: 40\n};\n//# sourceMappingURL=KeyCode.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/KeyboardPan\n */\nimport { rotate as rotateCoordinate } from '../coordinate.js';\nimport EventType from '../events/EventType.js';\nimport KeyCode from '../events/KeyCode.js';\nimport { noModifierKeys, targetNotEditable } from '../events/condition.js';\nimport Interaction, { pan } from './Interaction.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~noModifierKeys} and\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nvar KeyboardPan = /** @class */ (function (_super) {\n    __extends(KeyboardPan, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function KeyboardPan(opt_options) {\n        var _this = _super.call(this, {\n            handleEvent: handleEvent\n        }) || this;\n        var options = opt_options || {};\n        /**\n         * @private\n         * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n         * @return {boolean} Combined condition result.\n         */\n        _this.defaultCondition_ = function (mapBrowserEvent) {\n            return noModifierKeys(mapBrowserEvent) &&\n                targetNotEditable(mapBrowserEvent);\n        };\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition !== undefined ?\n            options.condition : _this.defaultCondition_;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 100;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelDelta_ = options.pixelDelta !== undefined ?\n            options.pixelDelta : 128;\n        return _this;\n    }\n    return KeyboardPan;\n}(Interaction));\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n * pressed).\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {KeyboardPan}\n */\nfunction handleEvent(mapBrowserEvent) {\n    var stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n        var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n        var keyCode = keyEvent.keyCode;\n        if (this.condition_(mapBrowserEvent) &&\n            (keyCode == KeyCode.DOWN ||\n                keyCode == KeyCode.LEFT ||\n                keyCode == KeyCode.RIGHT ||\n                keyCode == KeyCode.UP)) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            var mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n            var deltaX = 0, deltaY = 0;\n            if (keyCode == KeyCode.DOWN) {\n                deltaY = -mapUnitsDelta;\n            }\n            else if (keyCode == KeyCode.LEFT) {\n                deltaX = -mapUnitsDelta;\n            }\n            else if (keyCode == KeyCode.RIGHT) {\n                deltaX = mapUnitsDelta;\n            }\n            else {\n                deltaY = mapUnitsDelta;\n            }\n            var delta = [deltaX, deltaY];\n            rotateCoordinate(delta, view.getRotation());\n            pan(view, delta, this.duration_);\n            mapBrowserEvent.preventDefault();\n            stopEvent = true;\n        }\n    }\n    return !stopEvent;\n}\nexport default KeyboardPan;\n//# sourceMappingURL=KeyboardPan.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport { targetNotEditable } from '../events/condition.js';\nimport Interaction, { zoomByDelta } from './Interaction.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nvar KeyboardZoom = /** @class */ (function (_super) {\n    __extends(KeyboardZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function KeyboardZoom(opt_options) {\n        var _this = _super.call(this, {\n            handleEvent: handleEvent\n        }) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : targetNotEditable;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.delta_ = options.delta ? options.delta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 100;\n        return _this;\n    }\n    return KeyboardZoom;\n}(Interaction));\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n * key pressed was '+' or '-').\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {KeyboardZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n    var stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN ||\n        mapBrowserEvent.type == EventType.KEYPRESS) {\n        var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n        var charCode = keyEvent.charCode;\n        if (this.condition_(mapBrowserEvent) &&\n            (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))) {\n            var map = mapBrowserEvent.map;\n            var delta = (charCode == '+'.charCodeAt(0)) ? this.delta_ : -this.delta_;\n            var view = map.getView();\n            zoomByDelta(view, delta, undefined, this.duration_);\n            mapBrowserEvent.preventDefault();\n            stopEvent = true;\n        }\n    }\n    return !stopEvent;\n}\nexport default KeyboardZoom;\n//# sourceMappingURL=KeyboardZoom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport { always } from '../events/condition.js';\nimport EventType from '../events/EventType.js';\nimport { DEVICE_PIXEL_RATIO, FIREFOX } from '../has.js';\nimport Interaction, { zoomByDelta } from './Interaction.js';\nimport { clamp } from '../math.js';\n/**\n * @enum {string}\n */\nexport var Mode = {\n    TRACKPAD: 'trackpad',\n    WHEEL: 'wheel'\n};\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~always}.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nvar MouseWheelZoom = /** @class */ (function (_super) {\n    __extends(MouseWheelZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function MouseWheelZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.totalDelta_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.lastDelta_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.useAnchor_ = options.useAnchor !== undefined ? options.useAnchor : true;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : always;\n        /**\n         * @private\n         * @type {?import(\"../coordinate.js\").Coordinate}\n         */\n        _this.lastAnchor_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.startTime_ = undefined;\n        /**\n         * @private\n         * @type {?}\n         */\n        _this.timeoutId_;\n        /**\n         * @private\n         * @type {Mode|undefined}\n         */\n        _this.mode_ = undefined;\n        /**\n         * Trackpad events separated by this delay will be considered separate\n         * interactions.\n         * @type {number}\n         */\n        _this.trackpadEventGap_ = 400;\n        /**\n         * @type {?}\n         */\n        _this.trackpadTimeoutId_;\n        /**\n         * The number of delta values per zoom level\n         * @private\n         * @type {number}\n         */\n        _this.trackpadDeltaPerZoom_ = 300;\n        return _this;\n    }\n    /**\n     * @private\n     */\n    MouseWheelZoom.prototype.endInteraction_ = function () {\n        this.trackpadTimeoutId_ = undefined;\n        var view = this.getMap().getView();\n        view.endInteraction(undefined, Math.sign(this.lastDelta_), this.lastAnchor_);\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n     * zooms the map.\n     * @override\n     */\n    MouseWheelZoom.prototype.handleEvent = function (mapBrowserEvent) {\n        if (!this.condition_(mapBrowserEvent)) {\n            return true;\n        }\n        var type = mapBrowserEvent.type;\n        if (type !== EventType.WHEEL) {\n            return true;\n        }\n        mapBrowserEvent.preventDefault();\n        var map = mapBrowserEvent.map;\n        var wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);\n        if (this.useAnchor_) {\n            this.lastAnchor_ = mapBrowserEvent.coordinate;\n        }\n        // Delta normalisation inspired by\n        // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n        var delta;\n        if (mapBrowserEvent.type == EventType.WHEEL) {\n            delta = wheelEvent.deltaY;\n            if (FIREFOX &&\n                wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n                delta /= DEVICE_PIXEL_RATIO;\n            }\n            if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n                delta *= 40;\n            }\n        }\n        if (delta === 0) {\n            return false;\n        }\n        else {\n            this.lastDelta_ = delta;\n        }\n        var now = Date.now();\n        if (this.startTime_ === undefined) {\n            this.startTime_ = now;\n        }\n        if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n            this.mode_ = Math.abs(delta) < 4 ?\n                Mode.TRACKPAD :\n                Mode.WHEEL;\n        }\n        if (this.mode_ === Mode.TRACKPAD) {\n            var view = map.getView();\n            if (this.trackpadTimeoutId_) {\n                clearTimeout(this.trackpadTimeoutId_);\n            }\n            else {\n                view.beginInteraction();\n            }\n            this.trackpadTimeoutId_ = setTimeout(this.endInteraction_.bind(this), this.trackpadEventGap_);\n            view.adjustZoom(-delta / this.trackpadDeltaPerZoom_, this.lastAnchor_);\n            this.startTime_ = now;\n            return false;\n        }\n        this.totalDelta_ += delta;\n        var timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n        clearTimeout(this.timeoutId_);\n        this.timeoutId_ = setTimeout(this.handleWheelZoom_.bind(this, map), timeLeft);\n        return false;\n    };\n    /**\n     * @private\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    MouseWheelZoom.prototype.handleWheelZoom_ = function (map) {\n        var view = map.getView();\n        if (view.getAnimating()) {\n            view.cancelAnimations();\n        }\n        var delta = clamp(this.totalDelta_, -this.maxDelta_, this.maxDelta_);\n        zoomByDelta(view, -delta, this.lastAnchor_, this.duration_);\n        this.mode_ = undefined;\n        this.totalDelta_ = 0;\n        this.lastAnchor_ = null;\n        this.startTime_ = undefined;\n        this.timeoutId_ = undefined;\n    };\n    /**\n     * Enable or disable using the mouse's location as an anchor when zooming\n     * @param {boolean} useAnchor true to zoom to the mouse's location, false\n     * to zoom to the center of the map\n     * @api\n     */\n    MouseWheelZoom.prototype.setMouseAnchor = function (useAnchor) {\n        this.useAnchor_ = useAnchor;\n        if (!useAnchor) {\n            this.lastAnchor_ = null;\n        }\n    };\n    return MouseWheelZoom;\n}(Interaction));\nexport default MouseWheelZoom;\n//# sourceMappingURL=MouseWheelZoom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/PinchRotate\n */\nimport { FALSE } from '../functions.js';\nimport PointerInteraction, { centroid as centroidFromPointers } from './Pointer.js';\nimport { disable } from '../rotationconstraint.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchRotate = /** @class */ (function (_super) {\n    __extends(PinchRotate, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function PinchRotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n        if (!pointerOptions.stopDown) {\n            pointerOptions.stopDown = FALSE;\n        }\n        _this = _super.call(this, pointerOptions) || this;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.anchor_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastAngle_ = undefined;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.rotating_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.rotationDelta_ = 0.0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    PinchRotate.prototype.handleDragEvent = function (mapBrowserEvent) {\n        var rotationDelta = 0.0;\n        var touch0 = this.targetPointers[0];\n        var touch1 = this.targetPointers[1];\n        // angle between touches\n        var angle = Math.atan2(touch1.clientY - touch0.clientY, touch1.clientX - touch0.clientX);\n        if (this.lastAngle_ !== undefined) {\n            var delta = angle - this.lastAngle_;\n            this.rotationDelta_ += delta;\n            if (!this.rotating_ &&\n                Math.abs(this.rotationDelta_) > this.threshold_) {\n                this.rotating_ = true;\n            }\n            rotationDelta = delta;\n        }\n        this.lastAngle_ = angle;\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (view.getConstraints().rotation === disable) {\n            return;\n        }\n        // rotate anchor point.\n        // FIXME: should be the intersection point between the lines:\n        //     touch0,touch1 and previousTouch0,previousTouch1\n        var viewportPosition = map.getViewport().getBoundingClientRect();\n        var centroid = centroidFromPointers(this.targetPointers);\n        centroid[0] -= viewportPosition.left;\n        centroid[1] -= viewportPosition.top;\n        this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n        // rotate\n        if (this.rotating_) {\n            map.render();\n            view.adjustRotationInternal(rotationDelta, this.anchor_);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PinchRotate.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length < 2) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            view.endInteraction(this.duration_);\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PinchRotate.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length >= 2) {\n            var map = mapBrowserEvent.map;\n            this.anchor_ = null;\n            this.lastAngle_ = undefined;\n            this.rotating_ = false;\n            this.rotationDelta_ = 0.0;\n            if (!this.handlingDownUpSequence) {\n                map.getView().beginInteraction();\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return PinchRotate;\n}(PointerInteraction));\nexport default PinchRotate;\n//# sourceMappingURL=PinchRotate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/PinchZoom\n */\nimport { FALSE } from '../functions.js';\nimport PointerInteraction, { centroid as centroidFromPointers } from './Pointer.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchZoom = /** @class */ (function (_super) {\n    __extends(PinchZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function PinchZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n        if (!pointerOptions.stopDown) {\n            pointerOptions.stopDown = FALSE;\n        }\n        _this = _super.call(this, pointerOptions) || this;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.anchor_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 400;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastDistance_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.lastScaleDelta_ = 1;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    PinchZoom.prototype.handleDragEvent = function (mapBrowserEvent) {\n        var scaleDelta = 1.0;\n        var touch0 = this.targetPointers[0];\n        var touch1 = this.targetPointers[1];\n        var dx = touch0.clientX - touch1.clientX;\n        var dy = touch0.clientY - touch1.clientY;\n        // distance between touches\n        var distance = Math.sqrt(dx * dx + dy * dy);\n        if (this.lastDistance_ !== undefined) {\n            scaleDelta = this.lastDistance_ / distance;\n        }\n        this.lastDistance_ = distance;\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (scaleDelta != 1.0) {\n            this.lastScaleDelta_ = scaleDelta;\n        }\n        // scale anchor point.\n        var viewportPosition = map.getViewport().getBoundingClientRect();\n        var centroid = centroidFromPointers(this.targetPointers);\n        centroid[0] -= viewportPosition.left;\n        centroid[1] -= viewportPosition.top;\n        this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n        // scale, bypass the resolution constraint\n        map.render();\n        view.adjustResolutionInternal(scaleDelta, this.anchor_);\n    };\n    /**\n     * @inheritDoc\n     */\n    PinchZoom.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length < 2) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            var direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n            view.endInteraction(this.duration_, direction);\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PinchZoom.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length >= 2) {\n            var map = mapBrowserEvent.map;\n            this.anchor_ = null;\n            this.lastDistance_ = undefined;\n            this.lastScaleDelta_ = 1;\n            if (!this.handlingDownUpSequence) {\n                map.getView().beginInteraction();\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return PinchZoom;\n}(PointerInteraction));\nexport default PinchZoom;\n//# sourceMappingURL=PinchZoom.js.map","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { equals } from '../../array.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { intersects } from '../../extent.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport { transformGeom2D } from '../../geom/SimpleGeometry.js';\nimport { transform2D } from '../../geom/flat/transform.js';\nimport VectorContext from '../VectorContext.js';\nimport { defaultTextAlign, defaultFillStyle, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline, defaultFont } from '../canvas.js';\nimport { create as createTransform, compose as composeTransform } from '../../transform.js';\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nvar CanvasImmediateRenderer = /** @class */ (function (_super) {\n    __extends(CanvasImmediateRenderer, _super);\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../../extent.js\").Extent} extent Extent.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {number=} opt_squaredTolerance Optional squared tolerance for simplification.\n     * @param {import(\"../../proj.js\").TransformFunction=} opt_userTransform Transform from user to view projection.\n     */\n    function CanvasImmediateRenderer(context, pixelRatio, extent, transform, viewRotation, opt_squaredTolerance, opt_userTransform) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {CanvasRenderingContext2D}\n         */\n        _this.context_ = context;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.extent_ = extent;\n        /**\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.transform_ = transform;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.viewRotation_ = viewRotation;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.squaredTolerance_ = opt_squaredTolerance;\n        /**\n         * @private\n         * @type {import(\"../../proj.js\").TransformFunction}\n         */\n        _this.userTransform_ = opt_userTransform;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.contextFillState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.contextStrokeState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").TextState}\n         */\n        _this.contextTextState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.fillState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.strokeState_ = null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n         */\n        _this.image_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageAnchorX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageAnchorY_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageHeight_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageOpacity_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageOriginX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageOriginY_ = 0;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.imageRotateWithView_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageRotation_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageScale_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageWidth_ = 0;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.text_ = '';\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetY_ = 0;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.textRotateWithView_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textRotation_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textScale_ = 0;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.textFillState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.textStrokeState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").TextState}\n         */\n        _this.textState_ = null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.pixelCoordinates_ = [];\n        /**\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.tmpLocalTransform_ = createTransform();\n        return _this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.drawImages_ = function (flatCoordinates, offset, end, stride) {\n        if (!this.image_) {\n            return;\n        }\n        var pixelCoordinates = transform2D(flatCoordinates, offset, end, 2, this.transform_, this.pixelCoordinates_);\n        var context = this.context_;\n        var localTransform = this.tmpLocalTransform_;\n        var alpha = context.globalAlpha;\n        if (this.imageOpacity_ != 1) {\n            context.globalAlpha = alpha * this.imageOpacity_;\n        }\n        var rotation = this.imageRotation_;\n        if (this.imageRotateWithView_) {\n            rotation += this.viewRotation_;\n        }\n        for (var i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n            var x = pixelCoordinates[i] - this.imageAnchorX_;\n            var y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n            if (rotation !== 0 || this.imageScale_ != 1) {\n                var centerX = x + this.imageAnchorX_;\n                var centerY = y + this.imageAnchorY_;\n                composeTransform(localTransform, centerX, centerY, this.imageScale_, this.imageScale_, rotation, -centerX, -centerY);\n                context.setTransform.apply(context, localTransform);\n            }\n            context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_, this.imageWidth_, this.imageHeight_, x, y, this.imageWidth_, this.imageHeight_);\n        }\n        if (rotation !== 0 || this.imageScale_ != 1) {\n            context.setTransform(1, 0, 0, 1, 0, 0);\n        }\n        if (this.imageOpacity_ != 1) {\n            context.globalAlpha = alpha;\n        }\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.drawText_ = function (flatCoordinates, offset, end, stride) {\n        if (!this.textState_ || this.text_ === '') {\n            return;\n        }\n        if (this.textFillState_) {\n            this.setContextFillState_(this.textFillState_);\n        }\n        if (this.textStrokeState_) {\n            this.setContextStrokeState_(this.textStrokeState_);\n        }\n        this.setContextTextState_(this.textState_);\n        var pixelCoordinates = transform2D(flatCoordinates, offset, end, stride, this.transform_, this.pixelCoordinates_);\n        var context = this.context_;\n        var rotation = this.textRotation_;\n        if (this.textRotateWithView_) {\n            rotation += this.viewRotation_;\n        }\n        for (; offset < end; offset += stride) {\n            var x = pixelCoordinates[offset] + this.textOffsetX_;\n            var y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n            if (rotation !== 0 || this.textScale_ != 1) {\n                var localTransform = composeTransform(this.tmpLocalTransform_, x, y, this.textScale_, this.textScale_, rotation, -x, -y);\n                context.setTransform.apply(context, localTransform);\n            }\n            if (this.textStrokeState_) {\n                context.strokeText(this.text_, x, y);\n            }\n            if (this.textFillState_) {\n                context.fillText(this.text_, x, y);\n            }\n        }\n        if (rotation !== 0 || this.textScale_ != 1) {\n            context.setTransform(1, 0, 0, 1, 0, 0);\n        }\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @param {boolean} close Close.\n     * @private\n     * @return {number} end End.\n     */\n    CanvasImmediateRenderer.prototype.moveToLineTo_ = function (flatCoordinates, offset, end, stride, close) {\n        var context = this.context_;\n        var pixelCoordinates = transform2D(flatCoordinates, offset, end, stride, this.transform_, this.pixelCoordinates_);\n        context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n        var length = pixelCoordinates.length;\n        if (close) {\n            length -= 2;\n        }\n        for (var i = 2; i < length; i += 2) {\n            context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n        }\n        if (close) {\n            context.closePath();\n        }\n        return end;\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {Array<number>} ends Ends.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} End.\n     */\n    CanvasImmediateRenderer.prototype.drawRings_ = function (flatCoordinates, offset, ends, stride) {\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, true);\n        }\n        return offset;\n    };\n    /**\n     * Render a circle geometry into the canvas.  Rendering is immediate and uses\n     * the current fill and stroke styles.\n     *\n     * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n     * @override\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.drawCircle = function (geometry) {\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.fillState_ || this.strokeState_) {\n            if (this.fillState_) {\n                this.setContextFillState_(this.fillState_);\n            }\n            if (this.strokeState_) {\n                this.setContextStrokeState_(this.strokeState_);\n            }\n            var pixelCoordinates = transformGeom2D(geometry, this.transform_, this.pixelCoordinates_);\n            var dx = pixelCoordinates[2] - pixelCoordinates[0];\n            var dy = pixelCoordinates[3] - pixelCoordinates[1];\n            var radius = Math.sqrt(dx * dx + dy * dy);\n            var context = this.context_;\n            context.beginPath();\n            context.arc(pixelCoordinates[0], pixelCoordinates[1], radius, 0, 2 * Math.PI);\n            if (this.fillState_) {\n                context.fill();\n            }\n            if (this.strokeState_) {\n                context.stroke();\n            }\n        }\n        if (this.text_ !== '') {\n            this.drawText_(geometry.getCenter(), 0, 2, 2);\n        }\n    };\n    /**\n     * Set the rendering style.  Note that since this is an immediate rendering API,\n     * any `zIndex` on the provided style will be ignored.\n     *\n     * @param {import(\"../../style/Style.js\").default} style The rendering style.\n     * @override\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.setStyle = function (style) {\n        this.setFillStrokeStyle(style.getFill(), style.getStroke());\n        this.setImageStyle(style.getImage());\n        this.setTextStyle(style.getText());\n    };\n    /**\n     * Render a geometry into the canvas.  Call\n     * {@link module:ol/render/canvas/Immediate#setStyle} first to set the rendering style.\n     *\n     * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n     * @override\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.drawGeometry = function (geometry) {\n        var type = geometry.getType();\n        switch (type) {\n            case GeometryType.POINT:\n                this.drawPoint(/** @type {import(\"../../geom/Point.js\").default} */ (geometry));\n                break;\n            case GeometryType.LINE_STRING:\n                this.drawLineString(/** @type {import(\"../../geom/LineString.js\").default} */ (geometry));\n                break;\n            case GeometryType.POLYGON:\n                this.drawPolygon(/** @type {import(\"../../geom/Polygon.js\").default} */ (geometry));\n                break;\n            case GeometryType.MULTI_POINT:\n                this.drawMultiPoint(/** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry));\n                break;\n            case GeometryType.MULTI_LINE_STRING:\n                this.drawMultiLineString(/** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry));\n                break;\n            case GeometryType.MULTI_POLYGON:\n                this.drawMultiPolygon(/** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry));\n                break;\n            case GeometryType.GEOMETRY_COLLECTION:\n                this.drawGeometryCollection(/** @type {import(\"../../geom/GeometryCollection.js\").default} */ (geometry));\n                break;\n            case GeometryType.CIRCLE:\n                this.drawCircle(/** @type {import(\"../../geom/Circle.js\").default} */ (geometry));\n                break;\n            default:\n        }\n    };\n    /**\n     * Render a feature into the canvas.  Note that any `zIndex` on the provided\n     * style will be ignored - features are rendered immediately in the order that\n     * this method is called.  If you need `zIndex` support, you should be using an\n     * {@link module:ol/layer/Vector~VectorLayer} instead.\n     *\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     * @param {import(\"../../style/Style.js\").default} style Style.\n     * @override\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.drawFeature = function (feature, style) {\n        var geometry = style.getGeometryFunction()(feature);\n        if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        this.setStyle(style);\n        this.drawGeometry(geometry);\n    };\n    /**\n     * Render a GeometryCollection to the canvas.  Rendering is immediate and\n     * uses the current styles appropriate for each geometry in the collection.\n     *\n     * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.drawGeometryCollection = function (geometry) {\n        var geometries = geometry.getGeometriesArray();\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            this.drawGeometry(geometries[i]);\n        }\n    };\n    /**\n     * Render a Point geometry into the canvas.  Rendering is immediate and uses\n     * the current style.\n     *\n     * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.drawPoint = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/Point.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        var flatCoordinates = geometry.getFlatCoordinates();\n        var stride = geometry.getStride();\n        if (this.image_) {\n            this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n        if (this.text_ !== '') {\n            this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n    };\n    /**\n     * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n     * uses the current style.\n     *\n     * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.drawMultiPoint = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        var flatCoordinates = geometry.getFlatCoordinates();\n        var stride = geometry.getStride();\n        if (this.image_) {\n            this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n        if (this.text_ !== '') {\n            this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n    };\n    /**\n     * Render a LineString into the canvas.  Rendering is immediate and uses\n     * the current style.\n     *\n     * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.drawLineString = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.strokeState_) {\n            this.setContextStrokeState_(this.strokeState_);\n            var context = this.context_;\n            var flatCoordinates = geometry.getFlatCoordinates();\n            context.beginPath();\n            this.moveToLineTo_(flatCoordinates, 0, flatCoordinates.length, geometry.getStride(), false);\n            context.stroke();\n        }\n        if (this.text_ !== '') {\n            var flatMidpoint = geometry.getFlatMidpoint();\n            this.drawText_(flatMidpoint, 0, 2, 2);\n        }\n    };\n    /**\n     * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n     * and uses the current style.\n     *\n     * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.drawMultiLineString = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        var geometryExtent = geometry.getExtent();\n        if (!intersects(this.extent_, geometryExtent)) {\n            return;\n        }\n        if (this.strokeState_) {\n            this.setContextStrokeState_(this.strokeState_);\n            var context = this.context_;\n            var flatCoordinates = geometry.getFlatCoordinates();\n            var offset = 0;\n            var ends = /** @type {Array<number>} */ (geometry.getEnds());\n            var stride = geometry.getStride();\n            context.beginPath();\n            for (var i = 0, ii = ends.length; i < ii; ++i) {\n                offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, false);\n            }\n            context.stroke();\n        }\n        if (this.text_ !== '') {\n            var flatMidpoints = geometry.getFlatMidpoints();\n            this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n        }\n    };\n    /**\n     * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n     * the current style.\n     *\n     * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.drawPolygon = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.strokeState_ || this.fillState_) {\n            if (this.fillState_) {\n                this.setContextFillState_(this.fillState_);\n            }\n            if (this.strokeState_) {\n                this.setContextStrokeState_(this.strokeState_);\n            }\n            var context = this.context_;\n            context.beginPath();\n            this.drawRings_(geometry.getOrientedFlatCoordinates(), 0, /** @type {Array<number>} */ (geometry.getEnds()), geometry.getStride());\n            if (this.fillState_) {\n                context.fill();\n            }\n            if (this.strokeState_) {\n                context.stroke();\n            }\n        }\n        if (this.text_ !== '') {\n            var flatInteriorPoint = geometry.getFlatInteriorPoint();\n            this.drawText_(flatInteriorPoint, 0, 2, 2);\n        }\n    };\n    /**\n     * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n     * uses the current style.\n     * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.drawMultiPolygon = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.strokeState_ || this.fillState_) {\n            if (this.fillState_) {\n                this.setContextFillState_(this.fillState_);\n            }\n            if (this.strokeState_) {\n                this.setContextStrokeState_(this.strokeState_);\n            }\n            var context = this.context_;\n            var flatCoordinates = geometry.getOrientedFlatCoordinates();\n            var offset = 0;\n            var endss = geometry.getEndss();\n            var stride = geometry.getStride();\n            context.beginPath();\n            for (var i = 0, ii = endss.length; i < ii; ++i) {\n                var ends = endss[i];\n                offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n            }\n            if (this.fillState_) {\n                context.fill();\n            }\n            if (this.strokeState_) {\n                context.stroke();\n            }\n        }\n        if (this.text_ !== '') {\n            var flatInteriorPoints = geometry.getFlatInteriorPoints();\n            this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.setContextFillState_ = function (fillState) {\n        var context = this.context_;\n        var contextFillState = this.contextFillState_;\n        if (!contextFillState) {\n            context.fillStyle = fillState.fillStyle;\n            this.contextFillState_ = {\n                fillStyle: fillState.fillStyle\n            };\n        }\n        else {\n            if (contextFillState.fillStyle != fillState.fillStyle) {\n                contextFillState.fillStyle = context.fillStyle = fillState.fillStyle;\n            }\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.setContextStrokeState_ = function (strokeState) {\n        var context = this.context_;\n        var contextStrokeState = this.contextStrokeState_;\n        if (!contextStrokeState) {\n            context.lineCap = strokeState.lineCap;\n            if (context.setLineDash) {\n                context.setLineDash(strokeState.lineDash);\n                context.lineDashOffset = strokeState.lineDashOffset;\n            }\n            context.lineJoin = strokeState.lineJoin;\n            context.lineWidth = strokeState.lineWidth;\n            context.miterLimit = strokeState.miterLimit;\n            context.strokeStyle = strokeState.strokeStyle;\n            this.contextStrokeState_ = {\n                lineCap: strokeState.lineCap,\n                lineDash: strokeState.lineDash,\n                lineDashOffset: strokeState.lineDashOffset,\n                lineJoin: strokeState.lineJoin,\n                lineWidth: strokeState.lineWidth,\n                miterLimit: strokeState.miterLimit,\n                strokeStyle: strokeState.strokeStyle\n            };\n        }\n        else {\n            if (contextStrokeState.lineCap != strokeState.lineCap) {\n                contextStrokeState.lineCap = context.lineCap = strokeState.lineCap;\n            }\n            if (context.setLineDash) {\n                if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n                    context.setLineDash(contextStrokeState.lineDash = strokeState.lineDash);\n                }\n                if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n                    contextStrokeState.lineDashOffset = context.lineDashOffset =\n                        strokeState.lineDashOffset;\n                }\n            }\n            if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n                contextStrokeState.lineJoin = context.lineJoin = strokeState.lineJoin;\n            }\n            if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n                contextStrokeState.lineWidth = context.lineWidth = strokeState.lineWidth;\n            }\n            if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n                contextStrokeState.miterLimit = context.miterLimit =\n                    strokeState.miterLimit;\n            }\n            if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n                contextStrokeState.strokeStyle = context.strokeStyle =\n                    strokeState.strokeStyle;\n            }\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").TextState} textState Text state.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.setContextTextState_ = function (textState) {\n        var context = this.context_;\n        var contextTextState = this.contextTextState_;\n        var textAlign = textState.textAlign ?\n            textState.textAlign : defaultTextAlign;\n        if (!contextTextState) {\n            context.font = textState.font;\n            context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n            context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n            this.contextTextState_ = {\n                font: textState.font,\n                textAlign: textAlign,\n                textBaseline: textState.textBaseline\n            };\n        }\n        else {\n            if (contextTextState.font != textState.font) {\n                contextTextState.font = context.font = textState.font;\n            }\n            if (contextTextState.textAlign != textAlign) {\n                contextTextState.textAlign = context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n            }\n            if (contextTextState.textBaseline != textState.textBaseline) {\n                contextTextState.textBaseline = context.textBaseline =\n                    /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n            }\n        }\n    };\n    /**\n     * Set the fill and stroke style for subsequent draw operations.  To clear\n     * either fill or stroke styles, pass null for the appropriate parameter.\n     *\n     * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n     * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) {\n        if (!fillStyle) {\n            this.fillState_ = null;\n        }\n        else {\n            var fillStyleColor = fillStyle.getColor();\n            this.fillState_ = {\n                fillStyle: asColorLike(fillStyleColor ?\n                    fillStyleColor : defaultFillStyle)\n            };\n        }\n        if (!strokeStyle) {\n            this.strokeState_ = null;\n        }\n        else {\n            var strokeStyleColor = strokeStyle.getColor();\n            var strokeStyleLineCap = strokeStyle.getLineCap();\n            var strokeStyleLineDash = strokeStyle.getLineDash();\n            var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n            var strokeStyleLineJoin = strokeStyle.getLineJoin();\n            var strokeStyleWidth = strokeStyle.getWidth();\n            var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n            this.strokeState_ = {\n                lineCap: strokeStyleLineCap !== undefined ?\n                    strokeStyleLineCap : defaultLineCap,\n                lineDash: strokeStyleLineDash ?\n                    strokeStyleLineDash : defaultLineDash,\n                lineDashOffset: strokeStyleLineDashOffset ?\n                    strokeStyleLineDashOffset : defaultLineDashOffset,\n                lineJoin: strokeStyleLineJoin !== undefined ?\n                    strokeStyleLineJoin : defaultLineJoin,\n                lineWidth: this.pixelRatio_ * (strokeStyleWidth !== undefined ?\n                    strokeStyleWidth : defaultLineWidth),\n                miterLimit: strokeStyleMiterLimit !== undefined ?\n                    strokeStyleMiterLimit : defaultMiterLimit,\n                strokeStyle: asColorLike(strokeStyleColor ?\n                    strokeStyleColor : defaultStrokeStyle)\n            };\n        }\n    };\n    /**\n     * Set the image style for subsequent draw operations.  Pass null to remove\n     * the image style.\n     *\n     * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.setImageStyle = function (imageStyle) {\n        if (!imageStyle) {\n            this.image_ = null;\n        }\n        else {\n            var imageAnchor = imageStyle.getAnchor();\n            // FIXME pixel ratio\n            var imageImage = imageStyle.getImage(1);\n            var imageOrigin = imageStyle.getOrigin();\n            var imageSize = imageStyle.getSize();\n            this.imageAnchorX_ = imageAnchor[0];\n            this.imageAnchorY_ = imageAnchor[1];\n            this.imageHeight_ = imageSize[1];\n            this.image_ = imageImage;\n            this.imageOpacity_ = imageStyle.getOpacity();\n            this.imageOriginX_ = imageOrigin[0];\n            this.imageOriginY_ = imageOrigin[1];\n            this.imageRotateWithView_ = imageStyle.getRotateWithView();\n            this.imageRotation_ = imageStyle.getRotation();\n            this.imageScale_ = imageStyle.getScale() * this.pixelRatio_;\n            this.imageWidth_ = imageSize[0];\n        }\n    };\n    /**\n     * Set the text style for subsequent draw operations.  Pass null to\n     * remove the text style.\n     *\n     * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.setTextStyle = function (textStyle) {\n        if (!textStyle) {\n            this.text_ = '';\n        }\n        else {\n            var textFillStyle = textStyle.getFill();\n            if (!textFillStyle) {\n                this.textFillState_ = null;\n            }\n            else {\n                var textFillStyleColor = textFillStyle.getColor();\n                this.textFillState_ = {\n                    fillStyle: asColorLike(textFillStyleColor ?\n                        textFillStyleColor : defaultFillStyle)\n                };\n            }\n            var textStrokeStyle = textStyle.getStroke();\n            if (!textStrokeStyle) {\n                this.textStrokeState_ = null;\n            }\n            else {\n                var textStrokeStyleColor = textStrokeStyle.getColor();\n                var textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n                var textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n                var textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();\n                var textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n                var textStrokeStyleWidth = textStrokeStyle.getWidth();\n                var textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n                this.textStrokeState_ = {\n                    lineCap: textStrokeStyleLineCap !== undefined ?\n                        textStrokeStyleLineCap : defaultLineCap,\n                    lineDash: textStrokeStyleLineDash ?\n                        textStrokeStyleLineDash : defaultLineDash,\n                    lineDashOffset: textStrokeStyleLineDashOffset ?\n                        textStrokeStyleLineDashOffset : defaultLineDashOffset,\n                    lineJoin: textStrokeStyleLineJoin !== undefined ?\n                        textStrokeStyleLineJoin : defaultLineJoin,\n                    lineWidth: textStrokeStyleWidth !== undefined ?\n                        textStrokeStyleWidth : defaultLineWidth,\n                    miterLimit: textStrokeStyleMiterLimit !== undefined ?\n                        textStrokeStyleMiterLimit : defaultMiterLimit,\n                    strokeStyle: asColorLike(textStrokeStyleColor ?\n                        textStrokeStyleColor : defaultStrokeStyle)\n                };\n            }\n            var textFont = textStyle.getFont();\n            var textOffsetX = textStyle.getOffsetX();\n            var textOffsetY = textStyle.getOffsetY();\n            var textRotateWithView = textStyle.getRotateWithView();\n            var textRotation = textStyle.getRotation();\n            var textScale = textStyle.getScale();\n            var textText = textStyle.getText();\n            var textTextAlign = textStyle.getTextAlign();\n            var textTextBaseline = textStyle.getTextBaseline();\n            this.textState_ = {\n                font: textFont !== undefined ?\n                    textFont : defaultFont,\n                textAlign: textTextAlign !== undefined ?\n                    textTextAlign : defaultTextAlign,\n                textBaseline: textTextBaseline !== undefined ?\n                    textTextBaseline : defaultTextBaseline\n            };\n            this.text_ = textText !== undefined ? textText : '';\n            this.textOffsetX_ =\n                textOffsetX !== undefined ? (this.pixelRatio_ * textOffsetX) : 0;\n            this.textOffsetY_ =\n                textOffsetY !== undefined ? (this.pixelRatio_ * textOffsetY) : 0;\n            this.textRotateWithView_ = textRotateWithView !== undefined ? textRotateWithView : false;\n            this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n            this.textScale_ = this.pixelRatio_ * (textScale !== undefined ?\n                textScale : 1);\n        }\n    };\n    return CanvasImmediateRenderer;\n}(VectorContext));\nexport default CanvasImmediateRenderer;\n//# sourceMappingURL=Immediate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Map\n */\nimport { abstract } from '../util.js';\nimport Disposable from '../Disposable.js';\nimport { getWidth } from '../extent.js';\nimport { TRUE } from '../functions.js';\nimport { inView } from '../layer/Layer.js';\nimport { shared as iconImageCache } from '../style/IconImageCache.js';\nimport { compose as composeTransform, makeInverse } from '../transform.js';\nimport { renderDeclutterItems } from '../render.js';\n/**\n * @abstract\n */\nvar MapRenderer = /** @class */ (function (_super) {\n    __extends(MapRenderer, _super);\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    function MapRenderer(map) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = map;\n        /**\n         * @private\n         */\n        _this.declutterTree_ = null;\n        return _this;\n    }\n    /**\n     * @abstract\n     * @param {import(\"../render/EventType.js\").default} type Event type.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    MapRenderer.prototype.dispatchRenderEvent = function (type, frameState) {\n        abstract();\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @protected\n     */\n    MapRenderer.prototype.calculateMatrices2D = function (frameState) {\n        var viewState = frameState.viewState;\n        var coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n        var pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n        composeTransform(coordinateToPixelTransform, frameState.size[0] / 2, frameState.size[1] / 2, 1 / viewState.resolution, -1 / viewState.resolution, -viewState.rotation, -viewState.center[0], -viewState.center[1]);\n        makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {boolean} checkWrapped Check for wrapped geometries.\n     * @param {function(this: S, import(\"../Feature.js\").FeatureLike,\n     *     import(\"../layer/Layer.js\").default): T} callback Feature callback.\n     * @param {S} thisArg Value to use as `this` when executing `callback`.\n     * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n     * @return {T|undefined} Callback result.\n     * @template S,T,U\n     */\n    MapRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, checkWrapped, callback, thisArg, layerFilter, thisArg2) {\n        var result;\n        var viewState = frameState.viewState;\n        /**\n         * @param {boolean} managed Managed layer.\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {?} Callback result.\n         */\n        function forEachFeatureAtCoordinate(managed, feature, layer) {\n            return callback.call(thisArg, feature, managed ? layer : null);\n        }\n        var projection = viewState.projection;\n        var translatedCoordinate = coordinate;\n        var offsets = [[0, 0]];\n        if (projection.canWrapX()) {\n            var projectionExtent = projection.getExtent();\n            var worldWidth = getWidth(projectionExtent);\n            var x = coordinate[0];\n            if (x < projectionExtent[0] || x > projectionExtent[2]) {\n                var worldsAway = Math.ceil((projectionExtent[0] - x) / worldWidth);\n                translatedCoordinate = [x + worldWidth * worldsAway, coordinate[1]];\n            }\n            if (checkWrapped) {\n                offsets.push([-worldWidth, 0], [worldWidth, 0]);\n            }\n        }\n        var layerStates = frameState.layerStatesArray;\n        var numLayers = layerStates.length;\n        var declutteredFeatures;\n        if (this.declutterTree_) {\n            declutteredFeatures = this.declutterTree_.all().map(function (entry) {\n                return entry.value;\n            });\n        }\n        var tmpCoord = [];\n        for (var i = 0; i < offsets.length; i++) {\n            for (var j = numLayers - 1; j >= 0; --j) {\n                var layerState = layerStates[j];\n                var layer = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer);\n                if (layer.hasRenderer() && inView(layerState, viewState) && layerFilter.call(thisArg2, layer)) {\n                    var layerRenderer = layer.getRenderer();\n                    var source = layer.getSource();\n                    var coordinates = source.getWrapX() ? translatedCoordinate : coordinate;\n                    if (layerRenderer && source) {\n                        var callback_1 = forEachFeatureAtCoordinate.bind(null, layerState.managed);\n                        tmpCoord[0] = coordinates[0] + offsets[i][0];\n                        tmpCoord[1] = coordinates[1] + offsets[i][1];\n                        result = layerRenderer.forEachFeatureAtCoordinate(tmpCoord, frameState, hitTolerance, callback_1, declutteredFeatures);\n                    }\n                    if (result) {\n                        return result;\n                    }\n                }\n            }\n        }\n        return undefined;\n    };\n    /**\n     * @abstract\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(this: S, import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n     *     callback.\n     * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @return {T|undefined} Callback result.\n     * @template S,T,U\n     */\n    MapRenderer.prototype.forEachLayerAtPixel = function (pixel, frameState, hitTolerance, callback, layerFilter) {\n        return abstract();\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {boolean} checkWrapped Check for wrapped geometries.\n     * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n     * @return {boolean} Is there a feature at the given coordinate?\n     * @template U\n     */\n    MapRenderer.prototype.hasFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, checkWrapped, layerFilter, thisArg) {\n        var hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, checkWrapped, TRUE, this, layerFilter, thisArg);\n        return hasFeature !== undefined;\n    };\n    /**\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     */\n    MapRenderer.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Render.\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    MapRenderer.prototype.renderFrame = function (frameState) {\n        this.declutterTree_ = renderDeclutterItems(frameState, this.declutterTree_);\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    MapRenderer.prototype.scheduleExpireIconCache = function (frameState) {\n        if (iconImageCache.canExpireCache()) {\n            frameState.postRenderFunctions.push(expireIconCache);\n        }\n    };\n    return MapRenderer;\n}(Disposable));\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n    iconImageCache.expire();\n}\nexport default MapRenderer;\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/render\n */\nimport { DEVICE_PIXEL_RATIO } from './has.js';\nimport { apply as applyTransform, create as createTransform, multiply as multiplyTransform, scale as scaleTransform } from './transform.js';\nimport CanvasImmediateRenderer from './render/canvas/Immediate.js';\nimport { getSquaredTolerance } from './renderer/vector.js';\nimport { getUserProjection, getTransformFromProjections } from './proj.js';\n/**\n * @typedef {Object} State\n * @property {CanvasRenderingContext2D} context Canvas context that the layer is being rendered to.\n * @property {import(\"./Feature.js\").FeatureLike} feature\n * @property {import(\"./geom/SimpleGeometry.js\").default} geometry\n * @property {number} pixelRatio Pixel ratio used by the layer renderer.\n * @property {number} resolution Resolution that the render batch was created and optimized for.\n * This is not the view's resolution that is being rendered.\n * @property {number} rotation Rotation of the rendered layer in radians.\n */\n/**\n * A function to be used when sorting features before rendering.\n * It takes two instances of {@link module:ol/Feature} or\n * {@link module:ol/render/Feature} and returns a `{number}`.\n *\n * @typedef {function(import(\"./Feature.js\").FeatureLike, import(\"./Feature.js\").FeatureLike):number} OrderFunction\n */\n/**\n * @typedef {Object} ToContextOptions\n * @property {import(\"./size.js\").Size} [size] Desired size of the canvas in css\n * pixels. When provided, both canvas and css size will be set according to the\n * `pixelRatio`. If not provided, the current canvas and css sizes will not be\n * altered.\n * @property {number} [pixelRatio=window.devicePixelRatio] Pixel ratio (canvas\n * pixel to css pixel ratio) for the canvas.\n */\n/**\n * Binds a Canvas Immediate API to a canvas context, to allow drawing geometries\n * to the context's canvas.\n *\n * The units for geometry coordinates are css pixels relative to the top left\n * corner of the canvas element.\n * ```js\n * import {toContext} from 'ol/render';\n * import Fill from 'ol/style/Fill';\n * import Polygon from 'ol/geom/Polygon';\n *\n * var canvas = document.createElement('canvas');\n * var render = toContext(canvas.getContext('2d'),\n *     { size: [100, 100] });\n * render.setFillStrokeStyle(new Fill({ color: blue }));\n * render.drawPolygon(\n *     new Polygon([[[0, 0], [100, 100], [100, 0], [0, 0]]]));\n * ```\n *\n * @param {CanvasRenderingContext2D} context Canvas context.\n * @param {ToContextOptions=} opt_options Options.\n * @return {CanvasImmediateRenderer} Canvas Immediate.\n * @api\n */\nexport function toContext(context, opt_options) {\n    var canvas = context.canvas;\n    var options = opt_options ? opt_options : {};\n    var pixelRatio = options.pixelRatio || DEVICE_PIXEL_RATIO;\n    var size = options.size;\n    if (size) {\n        canvas.width = size[0] * pixelRatio;\n        canvas.height = size[1] * pixelRatio;\n        canvas.style.width = size[0] + 'px';\n        canvas.style.height = size[1] + 'px';\n    }\n    var extent = [0, 0, canvas.width, canvas.height];\n    var transform = scaleTransform(createTransform(), pixelRatio, pixelRatio);\n    return new CanvasImmediateRenderer(context, pixelRatio, extent, transform, 0);\n}\n/**\n * Gets a vector context for drawing to the event's canvas.\n * @param {import(\"./render/Event.js\").default} event Render event.\n * @returns {CanvasImmediateRenderer} Vector context.\n * @api\n */\nexport function getVectorContext(event) {\n    var frameState = event.frameState;\n    var transform = multiplyTransform(event.inversePixelTransform.slice(), frameState.coordinateToPixelTransform);\n    var squaredTolerance = getSquaredTolerance(frameState.viewState.resolution, frameState.pixelRatio);\n    var userTransform;\n    var userProjection = getUserProjection();\n    if (userProjection) {\n        userTransform = getTransformFromProjections(userProjection, frameState.viewState.projection);\n    }\n    return new CanvasImmediateRenderer(event.context, frameState.pixelRatio, frameState.extent, transform, frameState.viewState.rotation, squaredTolerance, userTransform);\n}\n/**\n * Gets the pixel of the event's canvas context from the map viewport's CSS pixel.\n * @param {import(\"./render/Event.js\").default} event Render event.\n * @param {import(\"./pixel.js\").Pixel} pixel CSS pixel relative to the top-left\n * corner of the map viewport.\n * @returns {import(\"./pixel.js\").Pixel} Pixel on the event's canvas context.\n * @api\n */\nexport function getRenderPixel(event, pixel) {\n    var result = pixel.slice(0);\n    applyTransform(event.inversePixelTransform.slice(), result);\n    return result;\n}\n/**\n * @param {import(\"./PluggableMap.js\").FrameState} frameState Frame state.\n * @param {?} declutterTree Declutter tree.\n * @returns {?} Declutter tree.\n */\nexport function renderDeclutterItems(frameState, declutterTree) {\n    if (declutterTree) {\n        declutterTree.clear();\n    }\n    var items = frameState.declutterItems;\n    for (var z = items.length - 1; z >= 0; --z) {\n        var item = items[z];\n        var zIndexItems = item.items;\n        for (var i = 0, ii = zIndexItems.length; i < ii; i += 3) {\n            declutterTree = zIndexItems[i].renderDeclutter(zIndexItems[i + 1], zIndexItems[i + 2], item.opacity, declutterTree);\n        }\n    }\n    items.length = 0;\n    return declutterTree;\n}\n//# sourceMappingURL=render.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Composite\n */\nimport { CLASS_UNSELECTABLE } from '../css.js';\nimport { inView } from '../layer/Layer.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport MapRenderer from './Map.js';\nimport SourceState from '../source/State.js';\nimport { replaceChildren } from '../dom.js';\nimport { labelCache } from '../render/canvas.js';\nimport EventType from '../events/EventType.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nvar CompositeMapRenderer = /** @class */ (function (_super) {\n    __extends(CompositeMapRenderer, _super);\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    function CompositeMapRenderer(map) {\n        var _this = _super.call(this, map) || this;\n        /**\n         * @type {import(\"../events.js\").EventsKey}\n         */\n        _this.labelCacheKey_ = listen(labelCache, EventType.CLEAR, map.redrawText.bind(map));\n        /**\n         * @private\n         * @type {HTMLDivElement}\n         */\n        _this.element_ = document.createElement('div');\n        var style = _this.element_.style;\n        style.position = 'absolute';\n        style.width = '100%';\n        style.height = '100%';\n        style.zIndex = '0';\n        _this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n        var container = map.getViewport();\n        container.insertBefore(_this.element_, container.firstChild || null);\n        /**\n         * @private\n         * @type {Array<HTMLElement>}\n         */\n        _this.children_ = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderedVisible_ = true;\n        return _this;\n    }\n    /**\n     * @param {import(\"../render/EventType.js\").default} type Event type.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    CompositeMapRenderer.prototype.dispatchRenderEvent = function (type, frameState) {\n        var map = this.getMap();\n        if (map.hasListener(type)) {\n            var event_1 = new RenderEvent(type, undefined, frameState);\n            map.dispatchEvent(event_1);\n        }\n    };\n    CompositeMapRenderer.prototype.disposeInternal = function () {\n        unlistenByKey(this.labelCacheKey_);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    CompositeMapRenderer.prototype.renderFrame = function (frameState) {\n        if (!frameState) {\n            if (this.renderedVisible_) {\n                this.element_.style.display = 'none';\n                this.renderedVisible_ = false;\n            }\n            return;\n        }\n        this.calculateMatrices2D(frameState);\n        this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n        var layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n            return a.zIndex - b.zIndex;\n        });\n        var viewState = frameState.viewState;\n        this.children_.length = 0;\n        var hasOverlay = false;\n        var previousElement = null;\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layerState = layerStatesArray[i];\n            hasOverlay = hasOverlay || layerState.hasOverlay;\n            frameState.layerIndex = i;\n            if (!inView(layerState, viewState) ||\n                (layerState.sourceState != SourceState.READY && layerState.sourceState != SourceState.UNDEFINED)) {\n                continue;\n            }\n            var layer = layerState.layer;\n            var element = layer.render(frameState, previousElement);\n            if (!element) {\n                continue;\n            }\n            var childElementCount = element.childElementCount;\n            if ((element !== previousElement || i == ii - 1) && childElementCount === 2 && !hasOverlay) {\n                element.removeChild(element.lastElementChild);\n            }\n            if (element !== previousElement) {\n                this.children_.push(element);\n                hasOverlay = childElementCount === 2;\n                previousElement = element;\n            }\n        }\n        _super.prototype.renderFrame.call(this, frameState);\n        replaceChildren(this.element_, this.children_);\n        this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n        if (!this.renderedVisible_) {\n            this.element_.style.display = '';\n            this.renderedVisible_ = true;\n        }\n        this.scheduleExpireIconCache(frameState);\n    };\n    /**\n     * @inheritDoc\n     */\n    CompositeMapRenderer.prototype.forEachLayerAtPixel = function (pixel, frameState, hitTolerance, callback, layerFilter) {\n        var viewState = frameState.viewState;\n        var layerStates = frameState.layerStatesArray;\n        var numLayers = layerStates.length;\n        for (var i = numLayers - 1; i >= 0; --i) {\n            var layerState = layerStates[i];\n            var layer = layerState.layer;\n            if (layer.hasRenderer() && inView(layerState, viewState) && layerFilter(layer)) {\n                var layerRenderer = layer.getRenderer();\n                var data = layerRenderer.getDataAtPixel(pixel, frameState, hitTolerance);\n                if (data) {\n                    var result = callback(layer, data);\n                    if (result) {\n                        return result;\n                    }\n                }\n            }\n        }\n        return undefined;\n    };\n    return CompositeMapRenderer;\n}(MapRenderer));\nexport default CompositeMapRenderer;\n//# sourceMappingURL=Composite.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Map\n */\nimport PluggableMap from './PluggableMap.js';\nimport { defaults as defaultControls } from './control.js';\nimport { defaults as defaultInteractions } from './interaction.js';\nimport { assign } from './obj.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @api\n */\nvar Map = /** @class */ (function (_super) {\n    __extends(Map, _super);\n    /**\n     * @param {import(\"./PluggableMap.js\").MapOptions} options Map options.\n     */\n    function Map(options) {\n        var _this = this;\n        options = assign({}, options);\n        if (!options.controls) {\n            options.controls = defaultControls();\n        }\n        if (!options.interactions) {\n            options.interactions = defaultInteractions();\n        }\n        _this = _super.call(this, options) || this;\n        return _this;\n    }\n    Map.prototype.createRenderer = function () {\n        return new CompositeMapRenderer(this);\n    };\n    return Map;\n}(PluggableMap));\nexport default Map;\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport Kinetic from './Kinetic.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\nimport { focus } from './events/condition.js';\nexport { default as DoubleClickZoom } from './interaction/DoubleClickZoom.js';\nexport { default as DragAndDrop } from './interaction/DragAndDrop.js';\nexport { default as DragBox } from './interaction/DragBox.js';\nexport { default as DragPan } from './interaction/DragPan.js';\nexport { default as DragRotate } from './interaction/DragRotate.js';\nexport { default as DragRotateAndZoom } from './interaction/DragRotateAndZoom.js';\nexport { default as DragZoom } from './interaction/DragZoom.js';\nexport { default as Draw } from './interaction/Draw.js';\nexport { default as Extent } from './interaction/Extent.js';\nexport { default as Interaction } from './interaction/Interaction.js';\nexport { default as KeyboardPan } from './interaction/KeyboardPan.js';\nexport { default as KeyboardZoom } from './interaction/KeyboardZoom.js';\nexport { default as Modify } from './interaction/Modify.js';\nexport { default as MouseWheelZoom } from './interaction/MouseWheelZoom.js';\nexport { default as PinchRotate } from './interaction/PinchRotate.js';\nexport { default as PinchZoom } from './interaction/PinchZoom.js';\nexport { default as Pointer } from './interaction/Pointer.js';\nexport { default as Select } from './interaction/Select.js';\nexport { default as Snap } from './interaction/Snap.js';\nexport { default as Translate } from './interaction/Translate.js';\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions=} opt_options Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n    var options = opt_options ? opt_options : {};\n    var interactions = new Collection();\n    var kinetic = new Kinetic(-0.005, 0.05, 100);\n    var altShiftDragRotate = options.altShiftDragRotate !== undefined ?\n        options.altShiftDragRotate : true;\n    if (altShiftDragRotate) {\n        interactions.push(new DragRotate());\n    }\n    var doubleClickZoom = options.doubleClickZoom !== undefined ?\n        options.doubleClickZoom : true;\n    if (doubleClickZoom) {\n        interactions.push(new DoubleClickZoom({\n            delta: options.zoomDelta,\n            duration: options.zoomDuration\n        }));\n    }\n    var dragPan = options.dragPan !== undefined ? options.dragPan : true;\n    if (dragPan) {\n        interactions.push(new DragPan({\n            condition: options.onFocusOnly ? focus : undefined,\n            kinetic: kinetic\n        }));\n    }\n    var pinchRotate = options.pinchRotate !== undefined ? options.pinchRotate :\n        true;\n    if (pinchRotate) {\n        interactions.push(new PinchRotate());\n    }\n    var pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n    if (pinchZoom) {\n        interactions.push(new PinchZoom({\n            duration: options.zoomDuration\n        }));\n    }\n    var keyboard = options.keyboard !== undefined ? options.keyboard : true;\n    if (keyboard) {\n        interactions.push(new KeyboardPan());\n        interactions.push(new KeyboardZoom({\n            delta: options.zoomDelta,\n            duration: options.zoomDuration\n        }));\n    }\n    var mouseWheelZoom = options.mouseWheelZoom !== undefined ?\n        options.mouseWheelZoom : true;\n    if (mouseWheelZoom) {\n        interactions.push(new MouseWheelZoom({\n            condition: options.onFocusOnly ? focus : undefined,\n            duration: options.zoomDuration\n        }));\n    }\n    var shiftDragZoom = options.shiftDragZoom !== undefined ?\n        options.shiftDragZoom : true;\n    if (shiftDragZoom) {\n        interactions.push(new DragZoom({\n            duration: options.zoomDuration\n        }));\n    }\n    return interactions;\n}\n//# sourceMappingURL=interaction.js.map","/**\n * @module ol/layer/TileProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    PRELOAD: 'preload',\n    USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError'\n};\n//# sourceMappingURL=TileProperty.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport { assign } from '../obj.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {import(\"../source/Tile.js\").default} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @extends {Layer<import(\"../source/Tile.js\").default>}\n * @api\n */\nvar BaseTileLayer = /** @class */ (function (_super) {\n    __extends(BaseTileLayer, _super);\n    /**\n     * @param {Options=} opt_options Tile layer options.\n     */\n    function BaseTileLayer(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var baseOptions = assign({}, options);\n        delete baseOptions.preload;\n        delete baseOptions.useInterimTilesOnError;\n        _this = _super.call(this, baseOptions) || this;\n        _this.setPreload(options.preload !== undefined ? options.preload : 0);\n        _this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined ?\n            options.useInterimTilesOnError : true);\n        return _this;\n    }\n    /**\n    * Return the level as number to which we will preload tiles up to.\n    * @return {number} The level to preload tiles up to.\n    * @observable\n    * @api\n    */\n    BaseTileLayer.prototype.getPreload = function () {\n        return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n    };\n    /**\n    * Set the level as number to which we will preload tiles up to.\n    * @param {number} preload The level to preload tiles up to.\n    * @observable\n    * @api\n    */\n    BaseTileLayer.prototype.setPreload = function (preload) {\n        this.set(TileProperty.PRELOAD, preload);\n    };\n    /**\n    * Whether we use interim tiles on error.\n    * @return {boolean} Use interim tiles on error.\n    * @observable\n    * @api\n    */\n    BaseTileLayer.prototype.getUseInterimTilesOnError = function () {\n        return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\n    };\n    /**\n    * Set whether we use interim tiles on error.\n    * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n    * @observable\n    * @api\n    */\n    BaseTileLayer.prototype.setUseInterimTilesOnError = function (useInterimTilesOnError) {\n        this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n    };\n    return BaseTileLayer;\n}(Layer));\nexport default BaseTileLayer;\n//# sourceMappingURL=BaseTile.js.map","/**\n * @module ol/TileRange\n */\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nvar TileRange = /** @class */ (function () {\n    /**\n     * @param {number} minX Minimum X.\n     * @param {number} maxX Maximum X.\n     * @param {number} minY Minimum Y.\n     * @param {number} maxY Maximum Y.\n     */\n    function TileRange(minX, maxX, minY, maxY) {\n        /**\n         * @type {number}\n         */\n        this.minX = minX;\n        /**\n         * @type {number}\n         */\n        this.maxX = maxX;\n        /**\n         * @type {number}\n         */\n        this.minY = minY;\n        /**\n         * @type {number}\n         */\n        this.maxY = maxY;\n    }\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @return {boolean} Contains tile coordinate.\n     */\n    TileRange.prototype.contains = function (tileCoord) {\n        return this.containsXY(tileCoord[1], tileCoord[2]);\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     * @return {boolean} Contains.\n     */\n    TileRange.prototype.containsTileRange = function (tileRange) {\n        return this.minX <= tileRange.minX && tileRange.maxX <= this.maxX &&\n            this.minY <= tileRange.minY && tileRange.maxY <= this.maxY;\n    };\n    /**\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @return {boolean} Contains coordinate.\n     */\n    TileRange.prototype.containsXY = function (x, y) {\n        return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     * @return {boolean} Equals.\n     */\n    TileRange.prototype.equals = function (tileRange) {\n        return this.minX == tileRange.minX && this.minY == tileRange.minY &&\n            this.maxX == tileRange.maxX && this.maxY == tileRange.maxY;\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     */\n    TileRange.prototype.extend = function (tileRange) {\n        if (tileRange.minX < this.minX) {\n            this.minX = tileRange.minX;\n        }\n        if (tileRange.maxX > this.maxX) {\n            this.maxX = tileRange.maxX;\n        }\n        if (tileRange.minY < this.minY) {\n            this.minY = tileRange.minY;\n        }\n        if (tileRange.maxY > this.maxY) {\n            this.maxY = tileRange.maxY;\n        }\n    };\n    /**\n     * @return {number} Height.\n     */\n    TileRange.prototype.getHeight = function () {\n        return this.maxY - this.minY + 1;\n    };\n    /**\n     * @return {import(\"./size.js\").Size} Size.\n     */\n    TileRange.prototype.getSize = function () {\n        return [this.getWidth(), this.getHeight()];\n    };\n    /**\n     * @return {number} Width.\n     */\n    TileRange.prototype.getWidth = function () {\n        return this.maxX - this.minX + 1;\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     * @return {boolean} Intersects.\n     */\n    TileRange.prototype.intersects = function (tileRange) {\n        return this.minX <= tileRange.maxX &&\n            this.maxX >= tileRange.minX &&\n            this.minY <= tileRange.maxY &&\n            this.maxY >= tileRange.minY;\n    };\n    return TileRange;\n}());\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange=} tileRange TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n    if (tileRange !== undefined) {\n        tileRange.minX = minX;\n        tileRange.maxX = maxX;\n        tileRange.minY = minY;\n        tileRange.maxY = maxY;\n        return tileRange;\n    }\n    else {\n        return new TileRange(minX, maxX, minY, maxY);\n    }\n}\nexport default TileRange;\n//# sourceMappingURL=TileRange.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport { getUid } from '../../util.js';\nimport { fromUserExtent } from '../../proj.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport { createEmpty, equals, getIntersection, getTopLeft } from '../../extent.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport { apply as applyTransform, compose as composeTransform, makeInverse, toString as transformToString } from '../../transform.js';\nimport { numberSafeCompareFunction } from '../../array.js';\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n */\nvar CanvasTileLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasTileLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default} tileLayer Tile layer.\n     */\n    function CanvasTileLayerRenderer(tileLayer) {\n        var _this = _super.call(this, tileLayer) || this;\n        /**\n         * Rendered extent has changed since the previous `renderFrame()` call\n         * @type {boolean}\n         */\n        _this.extentChanged = true;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.renderedExtent_ = null;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.renderedRevision;\n        /**\n         * @protected\n         * @type {!Array<import(\"../../Tile.js\").default>}\n         */\n        _this.renderedTiles = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.newTiles_ = false;\n        /**\n         * @protected\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.tmpExtent = createEmpty();\n        /**\n         * @private\n         * @type {import(\"../../TileRange.js\").default}\n         */\n        _this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n        return _this;\n    }\n    /**\n     * @protected\n     * @param {import(\"../../Tile.js\").default} tile Tile.\n     * @return {boolean} Tile is drawable.\n     */\n    CanvasTileLayerRenderer.prototype.isDrawableTile = function (tile) {\n        var tileLayer = this.getLayer();\n        var tileState = tile.getState();\n        var useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n        return tileState == TileState.LOADED ||\n            tileState == TileState.EMPTY ||\n            tileState == TileState.ERROR && !useInterimTilesOnError;\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {!import(\"../../Tile.js\").default} Tile.\n     */\n    CanvasTileLayerRenderer.prototype.getTile = function (z, x, y, frameState) {\n        var pixelRatio = frameState.pixelRatio;\n        var projection = frameState.viewState.projection;\n        var tileLayer = this.getLayer();\n        var tileSource = tileLayer.getSource();\n        var tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n        if (tile.getState() == TileState.ERROR) {\n            if (!tileLayer.getUseInterimTilesOnError()) {\n                // When useInterimTilesOnError is false, we consider the error tile as loaded.\n                tile.setState(TileState.LOADED);\n            }\n            else if (tileLayer.getPreload() > 0) {\n                // Preloaded tiles for lower resolutions might have finished loading.\n                this.newTiles_ = true;\n            }\n        }\n        if (!this.isDrawableTile(tile)) {\n            tile = tile.getInterimTile();\n        }\n        return tile;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasTileLayerRenderer.prototype.loadedTileCallback = function (tiles, zoom, tile) {\n        if (this.isDrawableTile(tile)) {\n            return _super.prototype.loadedTileCallback.call(this, tiles, zoom, tile);\n        }\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasTileLayerRenderer.prototype.prepareFrame = function (frameState) {\n        return !!this.getLayer().getSource();\n    };\n    /**\n     * TODO: File a TypeScript issue about inheritDoc not being followed\n     * all the way.  Without this explicit return type, the VectorTileLayer\n     * renderFrame function does not pass.\n     *\n     * @inheritDoc\n     * @returns {HTMLElement} The rendered element.\n     */\n    CanvasTileLayerRenderer.prototype.renderFrame = function (frameState, target) {\n        var layerState = frameState.layerStatesArray[frameState.layerIndex];\n        var viewState = frameState.viewState;\n        var projection = viewState.projection;\n        var viewResolution = viewState.resolution;\n        var viewCenter = viewState.center;\n        var rotation = viewState.rotation;\n        var pixelRatio = frameState.pixelRatio;\n        var tileLayer = this.getLayer();\n        var tileSource = tileLayer.getSource();\n        var sourceRevision = tileSource.getRevision();\n        var tileGrid = tileSource.getTileGridForProjection(projection);\n        var z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n        var tileResolution = tileGrid.getResolution(z);\n        var extent = frameState.extent;\n        var layerExtent = layerState.extent && fromUserExtent(layerState.extent, projection);\n        if (layerExtent) {\n            extent = getIntersection(extent, fromUserExtent(layerState.extent, projection));\n        }\n        var tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n        // desired dimensions of the canvas in pixels\n        var width = Math.round(frameState.size[0] * tilePixelRatio);\n        var height = Math.round(frameState.size[1] * tilePixelRatio);\n        if (rotation) {\n            var size = Math.round(Math.sqrt(width * width + height * height));\n            width = height = size;\n        }\n        var dx = tileResolution * width / 2 / tilePixelRatio;\n        var dy = tileResolution * height / 2 / tilePixelRatio;\n        var canvasExtent = [\n            viewCenter[0] - dx,\n            viewCenter[1] - dy,\n            viewCenter[0] + dx,\n            viewCenter[1] + dy\n        ];\n        var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n        /**\n         * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n         */\n        var tilesToDrawByZ = {};\n        tilesToDrawByZ[z] = {};\n        var findLoadedTiles = this.createLoadedTileFinder(tileSource, projection, tilesToDrawByZ);\n        var tmpExtent = this.tmpExtent;\n        var tmpTileRange = this.tmpTileRange_;\n        this.newTiles_ = false;\n        for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n            for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                var tile = this.getTile(z, x, y, frameState);\n                if (this.isDrawableTile(tile)) {\n                    var uid = getUid(this);\n                    if (tile.getState() == TileState.LOADED) {\n                        tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n                        var inTransition = tile.inTransition(uid);\n                        if (!this.newTiles_ && (inTransition || this.renderedTiles.indexOf(tile) === -1)) {\n                            this.newTiles_ = true;\n                        }\n                    }\n                    if (tile.getAlpha(uid, frameState.time) === 1) {\n                        // don't look for alt tiles if alpha is 1\n                        continue;\n                    }\n                }\n                var childTileRange = tileGrid.getTileCoordChildTileRange(tile.tileCoord, tmpTileRange, tmpExtent);\n                var covered = false;\n                if (childTileRange) {\n                    covered = findLoadedTiles(z + 1, childTileRange);\n                }\n                if (!covered) {\n                    tileGrid.forEachTileCoordParentTileRange(tile.tileCoord, findLoadedTiles, tmpTileRange, tmpExtent);\n                }\n            }\n        }\n        var canvasScale = tileResolution / viewResolution;\n        // set forward and inverse pixel transforms\n        composeTransform(this.pixelTransform, frameState.size[0] / 2, frameState.size[1] / 2, 1 / tilePixelRatio, 1 / tilePixelRatio, rotation, -width / 2, -height / 2);\n        this.useContainer(target, this.pixelTransform, layerState.opacity);\n        var context = this.context;\n        var canvas = context.canvas;\n        makeInverse(this.inversePixelTransform, this.pixelTransform);\n        // set scale transform for calculating tile positions on the canvas\n        composeTransform(this.tempTransform_, width / 2, height / 2, canvasScale, canvasScale, 0, -width / 2, -height / 2);\n        if (canvas.width != width || canvas.height != height) {\n            canvas.width = width;\n            canvas.height = height;\n        }\n        else if (!this.containerReused) {\n            context.clearRect(0, 0, width, height);\n        }\n        if (layerExtent) {\n            this.clipUnrotated(context, frameState, layerExtent);\n        }\n        this.preRender(context, frameState);\n        this.renderedTiles.length = 0;\n        /** @type {Array<number>} */\n        var zs = Object.keys(tilesToDrawByZ).map(Number);\n        zs.sort(numberSafeCompareFunction);\n        var clips, clipZs, currentClip;\n        if (layerState.opacity === 1 && (!this.containerReused || tileSource.getOpaque(frameState.viewState.projection))) {\n            zs = zs.reverse();\n        }\n        else {\n            clips = [];\n            clipZs = [];\n        }\n        for (var i = zs.length - 1; i >= 0; --i) {\n            var currentZ = zs[i];\n            var currentTilePixelSize = tileSource.getTilePixelSize(currentZ, pixelRatio, projection);\n            var currentResolution = tileGrid.getResolution(currentZ);\n            var currentScale = currentResolution / tileResolution;\n            var dx_1 = currentTilePixelSize[0] * currentScale * canvasScale;\n            var dy_1 = currentTilePixelSize[1] * currentScale * canvasScale;\n            var originTileCoord = tileGrid.getTileCoordForCoordAndZ(getTopLeft(canvasExtent), currentZ);\n            var originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n            var origin_1 = applyTransform(this.tempTransform_, [\n                tilePixelRatio * (originTileExtent[0] - canvasExtent[0]) / tileResolution,\n                tilePixelRatio * (canvasExtent[3] - originTileExtent[3]) / tileResolution\n            ]);\n            var tileGutter = tilePixelRatio * tileSource.getGutterForProjection(projection);\n            var tilesToDraw = tilesToDrawByZ[currentZ];\n            for (var tileCoordKey in tilesToDraw) {\n                var tile = /** @type {import(\"../../ImageTile.js\").default} */ (tilesToDraw[tileCoordKey]);\n                var tileCoord = tile.tileCoord;\n                // Calculate integer positions and sizes so that tiles align\n                var floatX = (origin_1[0] - (originTileCoord[1] - tileCoord[1]) * dx_1);\n                var nextX = Math.round(floatX + dx_1);\n                var floatY = (origin_1[1] - (originTileCoord[2] - tileCoord[2]) * dy_1);\n                var nextY = Math.round(floatY + dy_1);\n                var x = Math.round(floatX);\n                var y = Math.round(floatY);\n                var w = nextX - x;\n                var h = nextY - y;\n                var transition = z === currentZ;\n                var inTransition = transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n                if (!inTransition) {\n                    if (clips) {\n                        // Clip mask for regions in this tile that already filled by a higher z tile\n                        context.save();\n                        currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n                        for (var i_1 = 0, ii = clips.length; i_1 < ii; ++i_1) {\n                            if (z !== currentZ && currentZ < clipZs[i_1]) {\n                                var clip = clips[i_1];\n                                context.beginPath();\n                                // counter-clockwise (outer ring) for current tile\n                                context.moveTo(currentClip[0], currentClip[1]);\n                                context.lineTo(currentClip[2], currentClip[3]);\n                                context.lineTo(currentClip[4], currentClip[5]);\n                                context.lineTo(currentClip[6], currentClip[7]);\n                                // clockwise (inner ring) for higher z tile\n                                context.moveTo(clip[6], clip[7]);\n                                context.lineTo(clip[4], clip[5]);\n                                context.lineTo(clip[2], clip[3]);\n                                context.lineTo(clip[0], clip[1]);\n                                context.clip();\n                            }\n                        }\n                        clips.push(currentClip);\n                        clipZs.push(currentZ);\n                    }\n                    else {\n                        context.clearRect(x, y, w, h);\n                    }\n                }\n                this.drawTileImage(tile, frameState, x, y, w, h, tileGutter, transition, layerState.opacity);\n                if (clips && !inTransition) {\n                    context.restore();\n                }\n                this.renderedTiles.push(tile);\n                this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n            }\n        }\n        this.renderedRevision = sourceRevision;\n        this.renderedResolution = tileResolution;\n        this.extentChanged = !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n        this.renderedExtent_ = canvasExtent;\n        this.manageTilePyramid(frameState, tileSource, tileGrid, pixelRatio, projection, extent, z, tileLayer.getPreload());\n        this.updateCacheSize_(frameState, tileSource);\n        this.scheduleExpireCache(frameState, tileSource);\n        this.postRender(context, frameState);\n        if (layerState.extent) {\n            context.restore();\n        }\n        var canvasTransform = transformToString(this.pixelTransform);\n        if (canvasTransform !== canvas.style.transform) {\n            canvas.style.transform = canvasTransform;\n        }\n        return this.container;\n    };\n    /**\n     * @param {import(\"../../ImageTile.js\").default} tile Tile.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} x Left of the tile.\n     * @param {number} y Top of the tile.\n     * @param {number} w Width of the tile.\n     * @param {number} h Height of the tile.\n     * @param {number} gutter Tile gutter.\n     * @param {boolean} transition Apply an alpha transition.\n     * @param {number} opacity Opacity.\n     */\n    CanvasTileLayerRenderer.prototype.drawTileImage = function (tile, frameState, x, y, w, h, gutter, transition, opacity) {\n        var image = this.getTileImage(tile);\n        if (!image) {\n            return;\n        }\n        var uid = getUid(this);\n        var tileAlpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n        var alpha = opacity * tileAlpha;\n        var alphaChanged = alpha !== this.context.globalAlpha;\n        if (alphaChanged) {\n            this.context.save();\n            this.context.globalAlpha = alpha;\n        }\n        this.context.drawImage(image, gutter, gutter, image.width - 2 * gutter, image.height - 2 * gutter, x, y, w, h);\n        if (alphaChanged) {\n            this.context.restore();\n        }\n        if (tileAlpha !== 1) {\n            frameState.animate = true;\n        }\n        else if (transition) {\n            tile.endTransition(uid);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasTileLayerRenderer.prototype.getImage = function () {\n        var context = this.context;\n        return context ? context.canvas : null;\n    };\n    /**\n     * Get the image from a tile.\n     * @param {import(\"../../ImageTile.js\").default} tile Tile.\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.getTileImage = function (tile) {\n        return tile.getImage();\n    };\n    /**\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.scheduleExpireCache = function (frameState, tileSource) {\n        if (tileSource.canExpireCache()) {\n            /**\n             * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n             * @param {import(\"../../PluggableMap.js\").default} map Map.\n             * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n             */\n            var postRenderFunction = function (tileSource, map, frameState) {\n                var tileSourceKey = getUid(tileSource);\n                if (tileSourceKey in frameState.usedTiles) {\n                    tileSource.expireCache(frameState.viewState.projection, frameState.usedTiles[tileSourceKey]);\n                }\n            }.bind(null, tileSource);\n            frameState.postRenderFunctions.push(\n            /** @type {import(\"../../PluggableMap.js\").PostRenderFunction} */ (postRenderFunction));\n        }\n    };\n    /**\n     * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @param {import('../../Tile.js').default} tile Tile.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.updateUsedTiles = function (usedTiles, tileSource, tile) {\n        // FIXME should we use tilesToDrawByZ instead?\n        var tileSourceKey = getUid(tileSource);\n        if (!(tileSourceKey in usedTiles)) {\n            usedTiles[tileSourceKey] = {};\n        }\n        usedTiles[tileSourceKey][tile.getKey()] = true;\n    };\n    /**\n     * Check if the cache is big enough, and increase its size if necessary.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @private\n     */\n    CanvasTileLayerRenderer.prototype.updateCacheSize_ = function (frameState, tileSource) {\n        var tileSourceKey = getUid(tileSource);\n        var size = 0;\n        if (tileSourceKey in frameState.usedTiles) {\n            size += Object.keys(frameState.usedTiles[tileSourceKey]).length;\n        }\n        if (tileSourceKey in frameState.wantedTiles) {\n            size += Object.keys(frameState.wantedTiles[tileSourceKey]).length;\n        }\n        var tileCache = tileSource.tileCache;\n        if (tileCache.highWaterMark < size) {\n            tileCache.highWaterMark = size;\n        }\n    };\n    /**\n     * Manage tile pyramid.\n     * This function performs a number of functions related to the tiles at the\n     * current zoom and lower zoom levels:\n     * - registers idle tiles in frameState.wantedTiles so that they are not\n     *   discarded by the tile queue\n     * - enqueues missing tiles\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n     * @param {import(\"../../extent.js\").Extent} extent Extent.\n     * @param {number} currentZ Current Z.\n     * @param {number} preload Load low resolution tiles up to 'preload' levels.\n     * @param {function(import(\"../../Tile.js\").default)=} opt_tileCallback Tile callback.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.manageTilePyramid = function (frameState, tileSource, tileGrid, pixelRatio, projection, extent, currentZ, preload, opt_tileCallback) {\n        var tileSourceKey = getUid(tileSource);\n        if (!(tileSourceKey in frameState.wantedTiles)) {\n            frameState.wantedTiles[tileSourceKey] = {};\n        }\n        var wantedTiles = frameState.wantedTiles[tileSourceKey];\n        var tileQueue = frameState.tileQueue;\n        var minZoom = tileGrid.getMinZoom();\n        var tile, tileRange, tileResolution, x, y, z;\n        for (z = minZoom; z <= currentZ; ++z) {\n            tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n            tileResolution = tileGrid.getResolution(z);\n            for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n                for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                    if (currentZ - z <= preload) {\n                        tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n                        if (tile.getState() == TileState.IDLE) {\n                            wantedTiles[tile.getKey()] = true;\n                            if (!tileQueue.isKeyQueued(tile.getKey())) {\n                                tileQueue.enqueue([tile, tileSourceKey,\n                                    tileGrid.getTileCoordCenter(tile.tileCoord), tileResolution]);\n                            }\n                        }\n                        if (opt_tileCallback !== undefined) {\n                            opt_tileCallback(tile);\n                        }\n                    }\n                    else {\n                        tileSource.useTile(z, x, y, projection);\n                    }\n                }\n            }\n        }\n    };\n    return CanvasTileLayerRenderer;\n}(CanvasLayerRenderer));\n/**\n * @function\n * @return {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\nexport default CanvasTileLayerRenderer;\n//# sourceMappingURL=TileLayer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar TileLayer = /** @class */ (function (_super) {\n    __extends(TileLayer, _super);\n    /**\n     * @param {import(\"./BaseTile.js\").Options=} opt_options Tile layer options.\n     */\n    function TileLayer(opt_options) {\n        return _super.call(this, opt_options) || this;\n    }\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    TileLayer.prototype.createRenderer = function () {\n        return new CanvasTileLayerRenderer(this);\n    };\n    return TileLayer;\n}(BaseTileLayer));\nexport default TileLayer;\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/tilecoord\n */\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord=} opt_tileCoord Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n    if (opt_tileCoord !== undefined) {\n        opt_tileCoord[0] = z;\n        opt_tileCoord[1] = x;\n        opt_tileCoord[2] = y;\n        return opt_tileCoord;\n    }\n    else {\n        return [z, x, y];\n    }\n}\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n    return z + '/' + x + '/' + y;\n}\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n    return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n    return key.split('/').map(Number);\n}\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n    return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n    var z = tileCoord[0];\n    var x = tileCoord[1];\n    var y = tileCoord[2];\n    if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n        return false;\n    }\n    var extent = tileGrid.getExtent();\n    var tileRange;\n    if (!extent) {\n        tileRange = tileGrid.getFullTileRange(z);\n    }\n    else {\n        tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n    }\n    if (!tileRange) {\n        return true;\n    }\n    else {\n        return tileRange.containsXY(x, y);\n    }\n}\n//# sourceMappingURL=tilecoord.js.map","/**\n * @module ol/tileurlfunction\n */\nimport { assert } from './asserts.js';\nimport { modulo } from './math.js';\nimport { hash as tileCoordHash } from './tilecoord.js';\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n    var zRegEx = /\\{z\\}/g;\n    var xRegEx = /\\{x\\}/g;\n    var yRegEx = /\\{y\\}/g;\n    var dashYRegEx = /\\{-y\\}/g;\n    return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n            return undefined;\n        }\n        else {\n            return template.replace(zRegEx, tileCoord[0].toString())\n                .replace(xRegEx, tileCoord[1].toString())\n                .replace(yRegEx, tileCoord[2].toString())\n                .replace(dashYRegEx, function () {\n                var z = tileCoord[0];\n                var range = tileGrid.getFullTileRange(z);\n                assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n                var y = range.getHeight() - tileCoord[2] - 1;\n                return y.toString();\n            });\n        }\n    });\n}\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n    var len = templates.length;\n    var tileUrlFunctions = new Array(len);\n    for (var i = 0; i < len; ++i) {\n        tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n    }\n    return createFromTileUrlFunctions(tileUrlFunctions);\n}\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n    if (tileUrlFunctions.length === 1) {\n        return tileUrlFunctions[0];\n    }\n    return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n            return undefined;\n        }\n        else {\n            var h = tileCoordHash(tileCoord);\n            var index = modulo(h, tileUrlFunctions.length);\n            return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n        }\n    });\n}\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n}\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n    var urls = [];\n    var match = /\\{([a-z])-([a-z])\\}/.exec(url);\n    if (match) {\n        // char range\n        var startCharCode = match[1].charCodeAt(0);\n        var stopCharCode = match[2].charCodeAt(0);\n        var charCode = void 0;\n        for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n            urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n        }\n        return urls;\n    }\n    match = match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n    if (match) {\n        // number range\n        var stop_1 = parseInt(match[2], 10);\n        for (var i = parseInt(match[1], 10); i <= stop_1; i++) {\n            urls.push(url.replace(match[0], i.toString()));\n        }\n        return urls;\n    }\n    urls.push(url);\n    return urls;\n}\n//# sourceMappingURL=tileurlfunction.js.map","/**\n * @module ol/reproj/common\n */\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport var ERROR_THRESHOLD = 0.5;\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport var ENABLE_RASTER_REPROJECTION = true;\n//# sourceMappingURL=common.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Tile\n */\nimport TileState from './TileState.js';\nimport { easeIn } from './easing.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport { abstract } from './util.js';\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nvar Tile = /** @class */ (function (_super) {\n    __extends(Tile, _super);\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {TileState} state State.\n     * @param {Options=} opt_options Tile options.\n     */\n    function Tile(tileCoord, state, opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @type {import(\"./tilecoord.js\").TileCoord}\n         */\n        _this.tileCoord = tileCoord;\n        /**\n         * @protected\n         * @type {TileState}\n         */\n        _this.state = state;\n        /**\n         * An \"interim\" tile for this tile. The interim tile may be used while this\n         * one is loading, for \"smooth\" transitions when changing params/dimensions\n         * on the source.\n         * @type {Tile}\n         */\n        _this.interimTile = null;\n        /**\n         * The tile is available at the highest possible resolution. Subclasses can\n         * set this to `false` initially. Tile load listeners will not be\n         * unregistered before this is set to `true` and a `#changed()` is called.\n         * @type {boolean}\n         */\n        _this.hifi = true;\n        /**\n         * A key assigned to the tile. This is used by the tile source to determine\n         * if this tile can effectively be used, or if a new tile should be created\n         * and this one be used as an interim tile for this new tile.\n         * @type {string}\n         */\n        _this.key = '';\n        /**\n         * The duration for the opacity transition.\n         * @type {number}\n         */\n        _this.transition_ = options.transition === undefined ? 250 : options.transition;\n        /**\n         * Lookup of start times for rendering transitions.  If the start time is\n         * equal to -1, the transition is complete.\n         * @type {Object<string, number>}\n         */\n        _this.transitionStarts_ = {};\n        return _this;\n    }\n    /**\n     * @protected\n     */\n    Tile.prototype.changed = function () {\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * @return {string} Key.\n     */\n    Tile.prototype.getKey = function () {\n        return this.key + '/' + this.tileCoord;\n    };\n    /**\n     * Get the interim tile most suitable for rendering using the chain of interim\n     * tiles. This corresponds to the  most recent tile that has been loaded, if no\n     * such tile exists, the original tile is returned.\n     * @return {!Tile} Best tile for rendering.\n     */\n    Tile.prototype.getInterimTile = function () {\n        if (!this.interimTile) {\n            //empty chain\n            return this;\n        }\n        var tile = this.interimTile;\n        // find the first loaded tile and return it. Since the chain is sorted in\n        // decreasing order of creation time, there is no need to search the remainder\n        // of the list (all those tiles correspond to older requests and will be\n        // cleaned up by refreshInterimChain)\n        do {\n            if (tile.getState() == TileState.LOADED) {\n                // Show tile immediately instead of fading it in after loading, because\n                // the interim tile is in place already\n                this.transition_ = 0;\n                return tile;\n            }\n            tile = tile.interimTile;\n        } while (tile);\n        // we can not find a better tile\n        return this;\n    };\n    /**\n     * Goes through the chain of interim tiles and discards sections of the chain\n     * that are no longer relevant.\n     */\n    Tile.prototype.refreshInterimChain = function () {\n        if (!this.interimTile) {\n            return;\n        }\n        var tile = this.interimTile;\n        var prev = /** @type {Tile} */ (this);\n        do {\n            if (tile.getState() == TileState.LOADED) {\n                //we have a loaded tile, we can discard the rest of the list\n                //we would could abort any LOADING tile request\n                //older than this tile (i.e. any LOADING tile following this entry in the chain)\n                tile.interimTile = null;\n                break;\n            }\n            else if (tile.getState() == TileState.LOADING) {\n                //keep this LOADING tile any loaded tiles later in the chain are\n                //older than this tile, so we're still interested in the request\n                prev = tile;\n            }\n            else if (tile.getState() == TileState.IDLE) {\n                //the head of the list is the most current tile, we don't need\n                //to start any other requests for this chain\n                prev.interimTile = tile.interimTile;\n            }\n            else {\n                prev = tile;\n            }\n            tile = prev.interimTile;\n        } while (tile);\n    };\n    /**\n     * Get the tile coordinate for this tile.\n     * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n     * @api\n     */\n    Tile.prototype.getTileCoord = function () {\n        return this.tileCoord;\n    };\n    /**\n     * @return {TileState} State.\n     */\n    Tile.prototype.getState = function () {\n        return this.state;\n    };\n    /**\n     * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n     * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n     * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n     * the tile queue and will block other requests.\n     * @param {TileState} state State.\n     * @api\n     */\n    Tile.prototype.setState = function (state) {\n        if (this.state !== TileState.ERROR && this.state > state) {\n            throw new Error('Tile load sequence violation');\n        }\n        this.state = state;\n        this.changed();\n    };\n    /**\n     * Load the image or retry if loading previously failed.\n     * Loading is taken care of by the tile queue, and calling this method is\n     * only needed for preloading or for reloading in case of an error.\n     * @abstract\n     * @api\n     */\n    Tile.prototype.load = function () {\n        abstract();\n    };\n    /**\n     * Get the alpha value for rendering.\n     * @param {string} id An id for the renderer.\n     * @param {number} time The render frame time.\n     * @return {number} A number between 0 and 1.\n     */\n    Tile.prototype.getAlpha = function (id, time) {\n        if (!this.transition_) {\n            return 1;\n        }\n        var start = this.transitionStarts_[id];\n        if (!start) {\n            start = time;\n            this.transitionStarts_[id] = start;\n        }\n        else if (start === -1) {\n            return 1;\n        }\n        var delta = time - start + (1000 / 60); // avoid rendering at 0\n        if (delta >= this.transition_) {\n            return 1;\n        }\n        return easeIn(delta / this.transition_);\n    };\n    /**\n     * Determine if a tile is in an alpha transition.  A tile is considered in\n     * transition if tile.getAlpha() has not yet been called or has been called\n     * and returned 1.\n     * @param {string} id An id for the renderer.\n     * @return {boolean} The tile is in transition.\n     */\n    Tile.prototype.inTransition = function (id) {\n        if (!this.transition_) {\n            return false;\n        }\n        return this.transitionStarts_[id] !== -1;\n    };\n    /**\n     * Mark a transition as complete.\n     * @param {string} id An id for the renderer.\n     */\n    Tile.prototype.endTransition = function (id) {\n        if (this.transition_) {\n            this.transitionStarts_[id] = -1;\n        }\n    };\n    return Tile;\n}(EventTarget));\nexport default Tile;\n//# sourceMappingURL=Tile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport { createCanvasContext2D } from './dom.js';\nimport { listenImage } from './Image.js';\nvar ImageTile = /** @class */ (function (_super) {\n    __extends(ImageTile, _super);\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {TileState} state State.\n     * @param {string} src Image source URI.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n     * @param {import(\"./Tile.js\").Options=} opt_options Tile options.\n     */\n    function ImageTile(tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n        var _this = _super.call(this, tileCoord, state, opt_options) || this;\n        /**\n         * @private\n         * @type {?string}\n         */\n        _this.crossOrigin_ = crossOrigin;\n        /**\n         * Image URI\n         *\n         * @private\n         * @type {string}\n         */\n        _this.src_ = src;\n        /**\n         * @private\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        _this.image_ = new Image();\n        if (crossOrigin !== null) {\n            _this.image_.crossOrigin = crossOrigin;\n        }\n        /**\n         * @private\n         * @type {?function():void}\n         */\n        _this.unlisten_ = null;\n        /**\n         * @private\n         * @type {import(\"./Tile.js\").LoadFunction}\n         */\n        _this.tileLoadFunction_ = tileLoadFunction;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    ImageTile.prototype.disposeInternal = function () {\n        if (this.state == TileState.LOADING) {\n            this.unlistenImage_();\n            this.image_ = getBlankImage();\n        }\n        if (this.interimTile) {\n            this.interimTile.dispose();\n        }\n        this.state = TileState.ABORT;\n        this.changed();\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     * @api\n     */\n    ImageTile.prototype.getImage = function () {\n        return this.image_;\n    };\n    /**\n     * @inheritDoc\n     */\n    ImageTile.prototype.getKey = function () {\n        return this.src_;\n    };\n    /**\n     * Tracks loading or read errors.\n     *\n     * @private\n     */\n    ImageTile.prototype.handleImageError_ = function () {\n        this.state = TileState.ERROR;\n        this.unlistenImage_();\n        this.image_ = getBlankImage();\n        this.changed();\n    };\n    /**\n     * Tracks successful image load.\n     *\n     * @private\n     */\n    ImageTile.prototype.handleImageLoad_ = function () {\n        var image = /** @type {HTMLImageElement} */ (this.image_);\n        if (image.naturalWidth && image.naturalHeight) {\n            this.state = TileState.LOADED;\n        }\n        else {\n            this.state = TileState.EMPTY;\n        }\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    ImageTile.prototype.load = function () {\n        if (this.state == TileState.ERROR) {\n            this.state = TileState.IDLE;\n            this.image_ = new Image();\n            if (this.crossOrigin_ !== null) {\n                this.image_.crossOrigin = this.crossOrigin_;\n            }\n        }\n        if (this.state == TileState.IDLE) {\n            this.state = TileState.LOADING;\n            this.changed();\n            this.tileLoadFunction_(this, this.src_);\n            this.unlisten_ = listenImage(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));\n        }\n    };\n    /**\n     * Discards event handlers which listen for load completion or errors.\n     *\n     * @private\n     */\n    ImageTile.prototype.unlistenImage_ = function () {\n        if (this.unlisten_) {\n            this.unlisten_();\n            this.unlisten_ = null;\n        }\n    };\n    return ImageTile;\n}(Tile));\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n    var ctx = createCanvasContext2D(1, 1);\n    ctx.fillStyle = 'rgba(0,0,0,0)';\n    ctx.fillRect(0, 0, 1, 1);\n    return ctx.canvas;\n}\nexport default ImageTile;\n//# sourceMappingURL=ImageTile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport { fromKey, getKey } from './tilecoord.js';\nvar TileCache = /** @class */ (function (_super) {\n    __extends(TileCache, _super);\n    /**\n     * @param {number=} opt_highWaterMark High water mark.\n     */\n    function TileCache(opt_highWaterMark) {\n        return _super.call(this, opt_highWaterMark) || this;\n    }\n    /**\n     * @param {!Object<string, import(\"./TileRange.js\").default>} usedTiles Used tiles.\n     */\n    TileCache.prototype.expireCache = function (usedTiles) {\n        while (this.canExpireCache()) {\n            var tile = this.peekLast();\n            if (tile.getKey() in usedTiles) {\n                break;\n            }\n            else {\n                this.pop().dispose();\n            }\n        }\n    };\n    /**\n     * Prune all tiles from the cache that don't have the same z as the newest tile.\n     */\n    TileCache.prototype.pruneExceptNewestZ = function () {\n        if (this.getCount() === 0) {\n            return;\n        }\n        var key = this.peekFirstKey();\n        var tileCoord = fromKey(key);\n        var z = tileCoord[0];\n        this.forEach(function (tile) {\n            if (tile.tileCoord[0] !== z) {\n                this.remove(getKey(tile.tileCoord));\n                tile.dispose();\n            }\n        }.bind(this));\n    };\n    return TileCache;\n}(LRUCache));\nexport default TileCache;\n//# sourceMappingURL=TileCache.js.map","/**\n * @module ol/reproj\n */\nimport { createCanvasContext2D } from './dom.js';\nimport { containsCoordinate, createEmpty, extend, getHeight, getTopLeft, getWidth } from './extent.js';\nimport { solveLinearSystem } from './math.js';\nimport { getPointResolution, transform } from './proj.js';\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(sourceProj, targetProj, targetCenter, targetResolution) {\n    var sourceCenter = transform(targetCenter, targetProj, sourceProj);\n    // calculate the ideal resolution of the source data\n    var sourceResolution = getPointResolution(targetProj, targetResolution, targetCenter);\n    var targetMetersPerUnit = targetProj.getMetersPerUnit();\n    if (targetMetersPerUnit !== undefined) {\n        sourceResolution *= targetMetersPerUnit;\n    }\n    var sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n    if (sourceMetersPerUnit !== undefined) {\n        sourceResolution /= sourceMetersPerUnit;\n    }\n    // Based on the projection properties, the point resolution at the specified\n    // coordinates may be slightly different. We need to reverse-compensate this\n    // in order to achieve optimal results.\n    var sourceExtent = sourceProj.getExtent();\n    if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n        var compensationFactor = getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n            sourceResolution;\n        if (isFinite(compensationFactor) && compensationFactor > 0) {\n            sourceResolution /= compensationFactor;\n        }\n    }\n    return sourceResolution;\n}\n/**\n * Enlarge the clipping triangle point by 1 pixel to ensure the edges overlap\n * in order to mask gaps caused by antialiasing.\n *\n * @param {number} centroidX Centroid of the triangle (x coordinate in pixels).\n * @param {number} centroidY Centroid of the triangle (y coordinate in pixels).\n * @param {number} x X coordinate of the point (in pixels).\n * @param {number} y Y coordinate of the point (in pixels).\n * @return {import(\"./coordinate.js\").Coordinate} New point 1 px farther from the centroid.\n */\nfunction enlargeClipPoint(centroidX, centroidY, x, y) {\n    var dX = x - centroidX;\n    var dY = y - centroidY;\n    var distance = Math.sqrt(dX * dX + dY * dY);\n    return [Math.round(x + dX / distance), Math.round(y + dY / distance)];\n}\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation\n * Calculated triangulation.\n * @param {Array<{extent: import(\"./extent.js\").Extent,\n *                 image: (HTMLCanvasElement|HTMLImageElement|HTMLVideoElement)}>} sources\n * Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean=} opt_renderEdges Render reprojection edges.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(width, height, pixelRatio, sourceResolution, sourceExtent, targetResolution, targetExtent, triangulation, sources, gutter, opt_renderEdges) {\n    var context = createCanvasContext2D(Math.round(pixelRatio * width), Math.round(pixelRatio * height));\n    if (sources.length === 0) {\n        return context.canvas;\n    }\n    context.scale(pixelRatio, pixelRatio);\n    var sourceDataExtent = createEmpty();\n    sources.forEach(function (src, i, arr) {\n        extend(sourceDataExtent, src.extent);\n    });\n    var canvasWidthInUnits = getWidth(sourceDataExtent);\n    var canvasHeightInUnits = getHeight(sourceDataExtent);\n    var stitchContext = createCanvasContext2D(Math.round(pixelRatio * canvasWidthInUnits / sourceResolution), Math.round(pixelRatio * canvasHeightInUnits / sourceResolution));\n    var stitchScale = pixelRatio / sourceResolution;\n    sources.forEach(function (src, i, arr) {\n        var xPos = src.extent[0] - sourceDataExtent[0];\n        var yPos = -(src.extent[3] - sourceDataExtent[3]);\n        var srcWidth = getWidth(src.extent);\n        var srcHeight = getHeight(src.extent);\n        stitchContext.drawImage(src.image, gutter, gutter, src.image.width - 2 * gutter, src.image.height - 2 * gutter, xPos * stitchScale, yPos * stitchScale, srcWidth * stitchScale, srcHeight * stitchScale);\n    });\n    var targetTopLeft = getTopLeft(targetExtent);\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n        /* Calculate affine transform (src -> dst)\n         * Resulting matrix can be used to transform coordinate\n         * from `sourceProjection` to destination pixels.\n         *\n         * To optimize number of context calls and increase numerical stability,\n         * we also do the following operations:\n         * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n         * here before solving the linear system so [ui, vi] are pixel coordinates.\n         *\n         * Src points: xi, yi\n         * Dst points: ui, vi\n         * Affine coefficients: aij\n         *\n         * | x0 y0 1  0  0 0 |   |a00|   |u0|\n         * | x1 y1 1  0  0 0 |   |a01|   |u1|\n         * | x2 y2 1  0  0 0 | x |a02| = |u2|\n         * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n         * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n         * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n         */\n        var source = triangle.source;\n        var target = triangle.target;\n        var x0 = source[0][0], y0 = source[0][1];\n        var x1 = source[1][0], y1 = source[1][1];\n        var x2 = source[2][0], y2 = source[2][1];\n        var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n        var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n        var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n        var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n        var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n        var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n        // Shift all the source points to improve numerical stability\n        // of all the subsequent calculations. The [x0, y0] is used here.\n        // This is also used to simplify the linear system.\n        var sourceNumericalShiftX = x0;\n        var sourceNumericalShiftY = y0;\n        x0 = 0;\n        y0 = 0;\n        x1 -= sourceNumericalShiftX;\n        y1 -= sourceNumericalShiftY;\n        x2 -= sourceNumericalShiftX;\n        y2 -= sourceNumericalShiftY;\n        var augmentedMatrix = [\n            [x1, y1, 0, 0, u1 - u0],\n            [x2, y2, 0, 0, u2 - u0],\n            [0, 0, x1, y1, v1 - v0],\n            [0, 0, x2, y2, v2 - v0]\n        ];\n        var affineCoefs = solveLinearSystem(augmentedMatrix);\n        if (!affineCoefs) {\n            return;\n        }\n        context.save();\n        context.beginPath();\n        var centroidX = (u0 + u1 + u2) / 3;\n        var centroidY = (v0 + v1 + v2) / 3;\n        var p0 = enlargeClipPoint(centroidX, centroidY, u0, v0);\n        var p1 = enlargeClipPoint(centroidX, centroidY, u1, v1);\n        var p2 = enlargeClipPoint(centroidX, centroidY, u2, v2);\n        context.moveTo(p1[0], p1[1]);\n        context.lineTo(p0[0], p0[1]);\n        context.lineTo(p2[0], p2[1]);\n        context.clip();\n        context.transform(affineCoefs[0], affineCoefs[2], affineCoefs[1], affineCoefs[3], u0, v0);\n        context.translate(sourceDataExtent[0] - sourceNumericalShiftX, sourceDataExtent[3] - sourceNumericalShiftY);\n        context.scale(sourceResolution / pixelRatio, -sourceResolution / pixelRatio);\n        context.drawImage(stitchContext.canvas, 0, 0);\n        context.restore();\n    });\n    if (opt_renderEdges) {\n        context.save();\n        context.strokeStyle = 'black';\n        context.lineWidth = 1;\n        triangulation.getTriangles().forEach(function (triangle, i, arr) {\n            var target = triangle.target;\n            var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n            var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n            var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n            var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n            var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n            var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n            context.beginPath();\n            context.moveTo(u1, v1);\n            context.lineTo(u0, v0);\n            context.lineTo(u2, v2);\n            context.closePath();\n            context.stroke();\n        });\n        context.restore();\n    }\n    return context.canvas;\n}\n//# sourceMappingURL=reproj.js.map","/**\n * @module ol/reproj/Triangulation\n */\nimport { boundingExtent, createEmpty, extendCoordinate, getBottomLeft, getBottomRight, getTopLeft, getTopRight, getWidth, intersects } from '../extent.js';\nimport { modulo } from '../math.js';\nimport { getTransform } from '../proj.js';\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target\n */\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nvar MAX_SUBDIVISION = 10;\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nvar MAX_TRIANGLE_WIDTH = 0.25;\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nvar Triangulation = /** @class */ (function () {\n    /**\n     * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n     * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n     * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n     * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n     * @param {number} errorThreshold Acceptable error (in source units).\n     */\n    function Triangulation(sourceProj, targetProj, targetExtent, maxSourceExtent, errorThreshold) {\n        /**\n         * @type {import(\"../proj/Projection.js\").default}\n         * @private\n         */\n        this.sourceProj_ = sourceProj;\n        /**\n         * @type {import(\"../proj/Projection.js\").default}\n         * @private\n         */\n        this.targetProj_ = targetProj;\n        /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n        var transformInvCache = {};\n        var transformInv = getTransform(this.targetProj_, this.sourceProj_);\n        /**\n         * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n         * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n         * @private\n         */\n        this.transformInv_ = function (c) {\n            var key = c[0] + '/' + c[1];\n            if (!transformInvCache[key]) {\n                transformInvCache[key] = transformInv(c);\n            }\n            return transformInvCache[key];\n        };\n        /**\n         * @type {import(\"../extent.js\").Extent}\n         * @private\n         */\n        this.maxSourceExtent_ = maxSourceExtent;\n        /**\n         * @type {number}\n         * @private\n         */\n        this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n        /**\n         * @type {Array<Triangle>}\n         * @private\n         */\n        this.triangles_ = [];\n        /**\n         * Indicates that the triangulation crosses edge of the source projection.\n         * @type {boolean}\n         * @private\n         */\n        this.wrapsXInSource_ = false;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this.canWrapXInSource_ = this.sourceProj_.canWrapX() &&\n            !!maxSourceExtent &&\n            !!this.sourceProj_.getExtent() &&\n            (getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent()));\n        /**\n         * @type {?number}\n         * @private\n         */\n        this.sourceWorldWidth_ = this.sourceProj_.getExtent() ?\n            getWidth(this.sourceProj_.getExtent()) : null;\n        /**\n         * @type {?number}\n         * @private\n         */\n        this.targetWorldWidth_ = this.targetProj_.getExtent() ?\n            getWidth(this.targetProj_.getExtent()) : null;\n        var destinationTopLeft = getTopLeft(targetExtent);\n        var destinationTopRight = getTopRight(targetExtent);\n        var destinationBottomRight = getBottomRight(targetExtent);\n        var destinationBottomLeft = getBottomLeft(targetExtent);\n        var sourceTopLeft = this.transformInv_(destinationTopLeft);\n        var sourceTopRight = this.transformInv_(destinationTopRight);\n        var sourceBottomRight = this.transformInv_(destinationBottomRight);\n        var sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n        this.addQuad_(destinationTopLeft, destinationTopRight, destinationBottomRight, destinationBottomLeft, sourceTopLeft, sourceTopRight, sourceBottomRight, sourceBottomLeft, MAX_SUBDIVISION);\n        if (this.wrapsXInSource_) {\n            var leftBound_1 = Infinity;\n            this.triangles_.forEach(function (triangle, i, arr) {\n                leftBound_1 = Math.min(leftBound_1, triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]);\n            });\n            // Shift triangles to be as close to `leftBound` as possible\n            // (if the distance is more than `worldWidth / 2` it can be closer.\n            this.triangles_.forEach(function (triangle) {\n                if (Math.max(triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]) - leftBound_1 > this.sourceWorldWidth_ / 2) {\n                    var newTriangle = [[triangle.source[0][0], triangle.source[0][1]],\n                        [triangle.source[1][0], triangle.source[1][1]],\n                        [triangle.source[2][0], triangle.source[2][1]]];\n                    if ((newTriangle[0][0] - leftBound_1) > this.sourceWorldWidth_ / 2) {\n                        newTriangle[0][0] -= this.sourceWorldWidth_;\n                    }\n                    if ((newTriangle[1][0] - leftBound_1) > this.sourceWorldWidth_ / 2) {\n                        newTriangle[1][0] -= this.sourceWorldWidth_;\n                    }\n                    if ((newTriangle[2][0] - leftBound_1) > this.sourceWorldWidth_ / 2) {\n                        newTriangle[2][0] -= this.sourceWorldWidth_;\n                    }\n                    // Rarely (if the extent contains both the dateline and prime meridian)\n                    // the shift can in turn break some triangles.\n                    // Detect this here and don't shift in such cases.\n                    var minX = Math.min(newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n                    var maxX = Math.max(newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n                    if ((maxX - minX) < this.sourceWorldWidth_ / 2) {\n                        triangle.source = newTriangle;\n                    }\n                }\n            }.bind(this));\n        }\n        transformInvCache = {};\n    }\n    /**\n     * Adds triangle to the triangulation.\n     * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n     * @private\n     */\n    Triangulation.prototype.addTriangle_ = function (a, b, c, aSrc, bSrc, cSrc) {\n        this.triangles_.push({\n            source: [aSrc, bSrc, cSrc],\n            target: [a, b, c]\n        });\n    };\n    /**\n     * Adds quad (points in clock-wise order) to the triangulation\n     * (and reprojects the vertices) if valid.\n     * Performs quad subdivision if needed to increase precision.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n     * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n     * @private\n     */\n    Triangulation.prototype.addQuad_ = function (a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n        var sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n        var sourceCoverageX = this.sourceWorldWidth_ ?\n            getWidth(sourceQuadExtent) / this.sourceWorldWidth_ : null;\n        var sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n        // when the quad is wrapped in the source projection\n        // it covers most of the projection extent, but not fully\n        var wrapsX = this.sourceProj_.canWrapX() &&\n            sourceCoverageX > 0.5 && sourceCoverageX < 1;\n        var needsSubdivision = false;\n        if (maxSubdivision > 0) {\n            if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n                var targetQuadExtent = boundingExtent([a, b, c, d]);\n                var targetCoverageX = getWidth(targetQuadExtent) / this.targetWorldWidth_;\n                needsSubdivision = targetCoverageX > MAX_TRIANGLE_WIDTH ||\n                    needsSubdivision;\n            }\n            if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n                needsSubdivision = sourceCoverageX > MAX_TRIANGLE_WIDTH ||\n                    needsSubdivision;\n            }\n        }\n        if (!needsSubdivision && this.maxSourceExtent_) {\n            if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n                // whole quad outside source projection extent -> ignore\n                return;\n            }\n        }\n        if (!needsSubdivision) {\n            if (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ||\n                !isFinite(bSrc[0]) || !isFinite(bSrc[1]) ||\n                !isFinite(cSrc[0]) || !isFinite(cSrc[1]) ||\n                !isFinite(dSrc[0]) || !isFinite(dSrc[1])) {\n                if (maxSubdivision > 0) {\n                    needsSubdivision = true;\n                }\n                else {\n                    return;\n                }\n            }\n        }\n        if (maxSubdivision > 0) {\n            if (!needsSubdivision) {\n                var center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n                var centerSrc = this.transformInv_(center);\n                var dx = void 0;\n                if (wrapsX) {\n                    var centerSrcEstimX = (modulo(aSrc[0], sourceWorldWidth) +\n                        modulo(cSrc[0], sourceWorldWidth)) / 2;\n                    dx = centerSrcEstimX -\n                        modulo(centerSrc[0], sourceWorldWidth);\n                }\n                else {\n                    dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n                }\n                var dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n                var centerSrcErrorSquared = dx * dx + dy * dy;\n                needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n            }\n            if (needsSubdivision) {\n                if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n                    // split horizontally (top & bottom)\n                    var bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n                    var bcSrc = this.transformInv_(bc);\n                    var da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n                    var daSrc = this.transformInv_(da);\n                    this.addQuad_(a, b, bc, da, aSrc, bSrc, bcSrc, daSrc, maxSubdivision - 1);\n                    this.addQuad_(da, bc, c, d, daSrc, bcSrc, cSrc, dSrc, maxSubdivision - 1);\n                }\n                else {\n                    // split vertically (left & right)\n                    var ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n                    var abSrc = this.transformInv_(ab);\n                    var cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n                    var cdSrc = this.transformInv_(cd);\n                    this.addQuad_(a, ab, cd, d, aSrc, abSrc, cdSrc, dSrc, maxSubdivision - 1);\n                    this.addQuad_(ab, b, c, cd, abSrc, bSrc, cSrc, cdSrc, maxSubdivision - 1);\n                }\n                return;\n            }\n        }\n        if (wrapsX) {\n            if (!this.canWrapXInSource_) {\n                return;\n            }\n            this.wrapsXInSource_ = true;\n        }\n        this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n        this.addTriangle_(a, b, c, aSrc, bSrc, cSrc);\n    };\n    /**\n     * Calculates extent of the 'source' coordinates from all the triangles.\n     *\n     * @return {import(\"../extent.js\").Extent} Calculated extent.\n     */\n    Triangulation.prototype.calculateSourceExtent = function () {\n        var extent = createEmpty();\n        this.triangles_.forEach(function (triangle, i, arr) {\n            var src = triangle.source;\n            extendCoordinate(extent, src[0]);\n            extendCoordinate(extent, src[1]);\n            extendCoordinate(extent, src[2]);\n        });\n        return extent;\n    };\n    /**\n     * @return {Array<Triangle>} Array of the calculated triangles.\n     */\n    Triangulation.prototype.getTriangles = function () {\n        return this.triangles_;\n    };\n    return Triangulation;\n}());\nexport default Triangulation;\n//# sourceMappingURL=Triangulation.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/reproj/Tile\n */\nimport { ERROR_THRESHOLD } from './common.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { getArea, getCenter, getIntersection } from '../extent.js';\nimport { clamp } from '../math.js';\nimport { calculateSourceResolution, render as renderReprojected } from '../reproj.js';\nimport Triangulation from './Triangulation.js';\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nvar ReprojTile = /** @class */ (function (_super) {\n    __extends(ReprojTile, _super);\n    /**\n     * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n     * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n     * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {number} gutter Gutter of the source tiles.\n     * @param {FunctionType} getTileFunction\n     *     Function returning source tiles (z, x, y, pixelRatio).\n     * @param {number=} opt_errorThreshold Acceptable reprojection error (in px).\n     * @param {boolean=} opt_renderEdges Render reprojection edges.\n     */\n    function ReprojTile(sourceProj, sourceTileGrid, targetProj, targetTileGrid, tileCoord, wrappedTileCoord, pixelRatio, gutter, getTileFunction, opt_errorThreshold, opt_renderEdges) {\n        var _this = _super.call(this, tileCoord, TileState.IDLE) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.gutter_ = gutter;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.canvas_ = null;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        _this.sourceTileGrid_ = sourceTileGrid;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        _this.targetTileGrid_ = targetTileGrid;\n        /**\n         * @private\n         * @type {import(\"../tilecoord.js\").TileCoord}\n         */\n        _this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n        /**\n         * @private\n         * @type {!Array<import(\"../Tile.js\").default>}\n         */\n        _this.sourceTiles_ = [];\n        /**\n         * @private\n         * @type {?Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.sourcesListenerKeys_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.sourceZ_ = 0;\n        var targetExtent = targetTileGrid.getTileCoordExtent(_this.wrappedTileCoord_);\n        var maxTargetExtent = _this.targetTileGrid_.getExtent();\n        var maxSourceExtent = _this.sourceTileGrid_.getExtent();\n        var limitedTargetExtent = maxTargetExtent ?\n            getIntersection(targetExtent, maxTargetExtent) : targetExtent;\n        if (getArea(limitedTargetExtent) === 0) {\n            // Tile is completely outside range -> EMPTY\n            // TODO: is it actually correct that the source even creates the tile ?\n            _this.state = TileState.EMPTY;\n            return _this;\n        }\n        var sourceProjExtent = sourceProj.getExtent();\n        if (sourceProjExtent) {\n            if (!maxSourceExtent) {\n                maxSourceExtent = sourceProjExtent;\n            }\n            else {\n                maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n            }\n        }\n        var targetResolution = targetTileGrid.getResolution(_this.wrappedTileCoord_[0]);\n        var targetCenter = getCenter(limitedTargetExtent);\n        var sourceResolution = calculateSourceResolution(sourceProj, targetProj, targetCenter, targetResolution);\n        if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n            // invalid sourceResolution -> EMPTY\n            // probably edges of the projections when no extent is defined\n            _this.state = TileState.EMPTY;\n            return _this;\n        }\n        var errorThresholdInPixels = opt_errorThreshold !== undefined ?\n            opt_errorThreshold : ERROR_THRESHOLD;\n        /**\n         * @private\n         * @type {!import(\"./Triangulation.js\").default}\n         */\n        _this.triangulation_ = new Triangulation(sourceProj, targetProj, limitedTargetExtent, maxSourceExtent, sourceResolution * errorThresholdInPixels);\n        if (_this.triangulation_.getTriangles().length === 0) {\n            // no valid triangles -> EMPTY\n            _this.state = TileState.EMPTY;\n            return _this;\n        }\n        _this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n        var sourceExtent = _this.triangulation_.calculateSourceExtent();\n        if (maxSourceExtent) {\n            if (sourceProj.canWrapX()) {\n                sourceExtent[1] = clamp(sourceExtent[1], maxSourceExtent[1], maxSourceExtent[3]);\n                sourceExtent[3] = clamp(sourceExtent[3], maxSourceExtent[1], maxSourceExtent[3]);\n            }\n            else {\n                sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n            }\n        }\n        if (!getArea(sourceExtent)) {\n            _this.state = TileState.EMPTY;\n        }\n        else {\n            var sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(sourceExtent, _this.sourceZ_);\n            for (var srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n                for (var srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n                    var tile = getTileFunction(_this.sourceZ_, srcX, srcY, pixelRatio);\n                    if (tile) {\n                        _this.sourceTiles_.push(tile);\n                    }\n                }\n            }\n            if (_this.sourceTiles_.length === 0) {\n                _this.state = TileState.EMPTY;\n            }\n        }\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    ReprojTile.prototype.disposeInternal = function () {\n        if (this.state == TileState.LOADING) {\n            this.unlistenSources_();\n        }\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Get the HTML Canvas element for this tile.\n     * @return {HTMLCanvasElement} Canvas.\n     */\n    ReprojTile.prototype.getImage = function () {\n        return this.canvas_;\n    };\n    /**\n     * @private\n     */\n    ReprojTile.prototype.reproject_ = function () {\n        var sources = [];\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n            if (tile && tile.getState() == TileState.LOADED) {\n                sources.push({\n                    extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n                    image: tile.getImage()\n                });\n            }\n        }.bind(this));\n        this.sourceTiles_.length = 0;\n        if (sources.length === 0) {\n            this.state = TileState.ERROR;\n        }\n        else {\n            var z = this.wrappedTileCoord_[0];\n            var size = this.targetTileGrid_.getTileSize(z);\n            var width = typeof size === 'number' ? size : size[0];\n            var height = typeof size === 'number' ? size : size[1];\n            var targetResolution = this.targetTileGrid_.getResolution(z);\n            var sourceResolution = this.sourceTileGrid_.getResolution(this.sourceZ_);\n            var targetExtent = this.targetTileGrid_.getTileCoordExtent(this.wrappedTileCoord_);\n            this.canvas_ = renderReprojected(width, height, this.pixelRatio_, sourceResolution, this.sourceTileGrid_.getExtent(), targetResolution, targetExtent, this.triangulation_, sources, this.gutter_, this.renderEdges_);\n            this.state = TileState.LOADED;\n        }\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     */\n    ReprojTile.prototype.load = function () {\n        if (this.state == TileState.IDLE) {\n            this.state = TileState.LOADING;\n            this.changed();\n            var leftToLoad_1 = 0;\n            this.sourcesListenerKeys_ = [];\n            this.sourceTiles_.forEach(function (tile, i, arr) {\n                var state = tile.getState();\n                if (state == TileState.IDLE || state == TileState.LOADING) {\n                    leftToLoad_1++;\n                    var sourceListenKey_1 = listen(tile, EventType.CHANGE, function (e) {\n                        var state = tile.getState();\n                        if (state == TileState.LOADED ||\n                            state == TileState.ERROR ||\n                            state == TileState.EMPTY) {\n                            unlistenByKey(sourceListenKey_1);\n                            leftToLoad_1--;\n                            if (leftToLoad_1 === 0) {\n                                this.unlistenSources_();\n                                this.reproject_();\n                            }\n                        }\n                    }, this);\n                    this.sourcesListenerKeys_.push(sourceListenKey_1);\n                }\n            }.bind(this));\n            this.sourceTiles_.forEach(function (tile, i, arr) {\n                var state = tile.getState();\n                if (state == TileState.IDLE) {\n                    tile.load();\n                }\n            });\n            if (leftToLoad_1 === 0) {\n                setTimeout(this.reproject_.bind(this), 0);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    ReprojTile.prototype.unlistenSources_ = function () {\n        this.sourcesListenerKeys_.forEach(unlistenByKey);\n        this.sourcesListenerKeys_ = null;\n    };\n    return ReprojTile;\n}(Tile));\nexport default ReprojTile;\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/tilegrid/TileGrid\n */\nimport { DEFAULT_TILE_SIZE } from './common.js';\nimport { assert } from '../asserts.js';\nimport TileRange, { createOrUpdate as createOrUpdateTileRange } from '../TileRange.js';\nimport { isSorted, linearFindNearest } from '../array.js';\nimport { createOrUpdate, getTopLeft } from '../extent.js';\nimport { clamp } from '../math.js';\nimport { toSize } from '../size.js';\nimport { createOrUpdate as createOrUpdateTileCoord } from '../tilecoord.js';\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nvar tmpTileCoord = [0, 0, 0];\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and upwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and upwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Sizes.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nvar TileGrid = /** @class */ (function () {\n    /**\n     * @param {Options} options Tile grid options.\n     */\n    function TileGrid(options) {\n        /**\n         * @protected\n         * @type {number}\n         */\n        this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n        /**\n         * @private\n         * @type {!Array<number>}\n         */\n        this.resolutions_ = options.resolutions;\n        assert(isSorted(this.resolutions_, function (a, b) {\n            return b - a;\n        }, true), 17); // `resolutions` must be sorted in descending order\n        // check if we've got a consistent zoom factor and origin\n        var zoomFactor;\n        if (!options.origins) {\n            for (var i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n                if (!zoomFactor) {\n                    zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n                }\n                else {\n                    if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n                        zoomFactor = undefined;\n                        break;\n                    }\n                }\n            }\n        }\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.zoomFactor_ = zoomFactor;\n        /**\n         * @protected\n         * @type {number}\n         */\n        this.maxZoom = this.resolutions_.length - 1;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        this.origin_ = options.origin !== undefined ? options.origin : null;\n        /**\n         * @private\n         * @type {Array<import(\"../coordinate.js\").Coordinate>}\n         */\n        this.origins_ = null;\n        if (options.origins !== undefined) {\n            this.origins_ = options.origins;\n            assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n        }\n        var extent = options.extent;\n        if (extent !== undefined &&\n            !this.origin_ && !this.origins_) {\n            this.origin_ = getTopLeft(extent);\n        }\n        assert((!this.origin_ && this.origins_) || (this.origin_ && !this.origins_), 18); // Either `origin` or `origins` must be configured, never both\n        /**\n         * @private\n         * @type {Array<number|import(\"../size.js\").Size>}\n         */\n        this.tileSizes_ = null;\n        if (options.tileSizes !== undefined) {\n            this.tileSizes_ = options.tileSizes;\n            assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n        }\n        /**\n         * @private\n         * @type {number|import(\"../size.js\").Size}\n         */\n        this.tileSize_ = options.tileSize !== undefined ?\n            options.tileSize :\n            !this.tileSizes_ ? DEFAULT_TILE_SIZE : null;\n        assert((!this.tileSize_ && this.tileSizes_) ||\n            (this.tileSize_ && !this.tileSizes_), 22); // Either `tileSize` or `tileSizes` must be configured, never both\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.extent_ = extent !== undefined ? extent : null;\n        /**\n         * @private\n         * @type {Array<import(\"../TileRange.js\").default>}\n         */\n        this.fullTileRanges_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        this.tmpSize_ = [0, 0];\n        if (options.sizes !== undefined) {\n            this.fullTileRanges_ = options.sizes.map(function (size, z) {\n                var tileRange = new TileRange(Math.min(0, size[0]), Math.max(size[0] - 1, -1), Math.min(0, size[1]), Math.max(size[1] - 1, -1));\n                return tileRange;\n            }, this);\n        }\n        else if (extent) {\n            this.calculateTileRanges_(extent);\n        }\n    }\n    /**\n     * Call a function with each tile coordinate for a given extent and zoom level.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} zoom Integer zoom level.\n     * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n     * @api\n     */\n    TileGrid.prototype.forEachTileCoord = function (extent, zoom, callback) {\n        var tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n        for (var i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n            for (var j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n                callback([zoom, i, j]);\n            }\n        }\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n     * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n     * @return {boolean} Callback succeeded.\n     */\n    TileGrid.prototype.forEachTileCoordParentTileRange = function (tileCoord, callback, opt_tileRange, opt_extent) {\n        var tileRange, x, y;\n        var tileCoordExtent = null;\n        var z = tileCoord[0] - 1;\n        if (this.zoomFactor_ === 2) {\n            x = tileCoord[1];\n            y = tileCoord[2];\n        }\n        else {\n            tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n        }\n        while (z >= this.minZoom) {\n            if (this.zoomFactor_ === 2) {\n                x = Math.floor(x / 2);\n                y = Math.floor(y / 2);\n                tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n            }\n            else {\n                tileRange = this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n            }\n            if (callback(z, tileRange)) {\n                return true;\n            }\n            --z;\n        }\n        return false;\n    };\n    /**\n     * Get the extent for this tile grid, if it was configured.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    TileGrid.prototype.getExtent = function () {\n        return this.extent_;\n    };\n    /**\n     * Get the maximum zoom level for the grid.\n     * @return {number} Max zoom.\n     * @api\n     */\n    TileGrid.prototype.getMaxZoom = function () {\n        return this.maxZoom;\n    };\n    /**\n     * Get the minimum zoom level for the grid.\n     * @return {number} Min zoom.\n     * @api\n     */\n    TileGrid.prototype.getMinZoom = function () {\n        return this.minZoom;\n    };\n    /**\n     * Get the origin for the grid at the given zoom level.\n     * @param {number} z Integer zoom level.\n     * @return {import(\"../coordinate.js\").Coordinate} Origin.\n     * @api\n     */\n    TileGrid.prototype.getOrigin = function (z) {\n        if (this.origin_) {\n            return this.origin_;\n        }\n        else {\n            return this.origins_[z];\n        }\n    };\n    /**\n     * Get the resolution for the given zoom level.\n     * @param {number} z Integer zoom level.\n     * @return {number} Resolution.\n     * @api\n     */\n    TileGrid.prototype.getResolution = function (z) {\n        return this.resolutions_[z];\n    };\n    /**\n     * Get the list of resolutions for the tile grid.\n     * @return {Array<number>} Resolutions.\n     * @api\n     */\n    TileGrid.prototype.getResolutions = function () {\n        return this.resolutions_;\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n     * @return {import(\"../TileRange.js\").default} Tile range.\n     */\n    TileGrid.prototype.getTileCoordChildTileRange = function (tileCoord, opt_tileRange, opt_extent) {\n        if (tileCoord[0] < this.maxZoom) {\n            if (this.zoomFactor_ === 2) {\n                var minX = tileCoord[1] * 2;\n                var minY = tileCoord[2] * 2;\n                return createOrUpdateTileRange(minX, minX + 1, minY, minY + 1, opt_tileRange);\n            }\n            var tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n            return this.getTileRangeForExtentAndZ(tileCoordExtent, tileCoord[0] + 1, opt_tileRange);\n        }\n        return null;\n    };\n    /**\n     * Get the extent for a tile range.\n     * @param {number} z Integer zoom level.\n     * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     */\n    TileGrid.prototype.getTileRangeExtent = function (z, tileRange, opt_extent) {\n        var origin = this.getOrigin(z);\n        var resolution = this.getResolution(z);\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n        var minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n        var maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n        var minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n        var maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n        return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n    };\n    /**\n     * Get a tile range for the given extent and integer zoom level.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} z Integer zoom level.\n     * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary tile range object.\n     * @return {import(\"../TileRange.js\").default} Tile range.\n     */\n    TileGrid.prototype.getTileRangeForExtentAndZ = function (extent, z, opt_tileRange) {\n        var tileCoord = tmpTileCoord;\n        this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tileCoord);\n        var minX = tileCoord[1];\n        var minY = tileCoord[2];\n        this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tileCoord);\n        return createOrUpdateTileRange(minX, tileCoord[1], minY, tileCoord[2], opt_tileRange);\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n     */\n    TileGrid.prototype.getTileCoordCenter = function (tileCoord) {\n        var origin = this.getOrigin(tileCoord[0]);\n        var resolution = this.getResolution(tileCoord[0]);\n        var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n        return [\n            origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n            origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution\n        ];\n    };\n    /**\n     * Get the extent of a tile coordinate.\n     *\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary extent object.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    TileGrid.prototype.getTileCoordExtent = function (tileCoord, opt_extent) {\n        var origin = this.getOrigin(tileCoord[0]);\n        var resolution = this.getResolution(tileCoord[0]);\n        var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n        var minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n        var minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n        var maxX = minX + tileSize[0] * resolution;\n        var maxY = minY + tileSize[1] * resolution;\n        return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n    };\n    /**\n     * Get the tile coordinate for the given map coordinate and resolution.  This\n     * method considers that coordinates that intersect tile boundaries should be\n     * assigned the higher tile coordinate.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @api\n     */\n    TileGrid.prototype.getTileCoordForCoordAndResolution = function (coordinate, resolution, opt_tileCoord) {\n        return this.getTileCoordForXYAndResolution_(coordinate[0], coordinate[1], resolution, false, opt_tileCoord);\n    };\n    /**\n     * Note that this method should not be called for resolutions that correspond\n     * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {number} resolution Resolution (for a non-integer zoom level).\n     * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n     *     intersections go to the higher tile coordinate, let edge intersections\n     *     go to the lower tile coordinate.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @private\n     */\n    TileGrid.prototype.getTileCoordForXYAndResolution_ = function (x, y, resolution, reverseIntersectionPolicy, opt_tileCoord) {\n        var z = this.getZForResolution(resolution);\n        var scale = resolution / this.getResolution(z);\n        var origin = this.getOrigin(z);\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n        var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n        var adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n        var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n        var yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n        var tileCoordX = scale * xFromOrigin / tileSize[0];\n        var tileCoordY = scale * yFromOrigin / tileSize[1];\n        if (reverseIntersectionPolicy) {\n            tileCoordX = Math.ceil(tileCoordX) - 1;\n            tileCoordY = Math.ceil(tileCoordY) - 1;\n        }\n        else {\n            tileCoordX = Math.floor(tileCoordX);\n            tileCoordY = Math.floor(tileCoordY);\n        }\n        return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n    };\n    /**\n     * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n     * they should have separate implementations.  This method is for integer zoom\n     * levels.  The other method should only be called for resolutions corresponding\n     * to non-integer zoom levels.\n     * @param {number} x Map x coordinate.\n     * @param {number} y Map y coordinate.\n     * @param {number} z Integer zoom level.\n     * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n     *     intersections go to the higher tile coordinate, let edge intersections\n     *     go to the lower tile coordinate.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @private\n     */\n    TileGrid.prototype.getTileCoordForXYAndZ_ = function (x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n        var origin = this.getOrigin(z);\n        var resolution = this.getResolution(z);\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n        var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n        var adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n        var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n        var yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n        var tileCoordX = xFromOrigin / tileSize[0];\n        var tileCoordY = yFromOrigin / tileSize[1];\n        if (reverseIntersectionPolicy) {\n            tileCoordX = Math.ceil(tileCoordX) - 1;\n            tileCoordY = Math.ceil(tileCoordY) - 1;\n        }\n        else {\n            tileCoordX = Math.floor(tileCoordX);\n            tileCoordY = Math.floor(tileCoordY);\n        }\n        return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n    };\n    /**\n     * Get a tile coordinate given a map coordinate and zoom level.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} z Zoom level.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @api\n     */\n    TileGrid.prototype.getTileCoordForCoordAndZ = function (coordinate, z, opt_tileCoord) {\n        return this.getTileCoordForXYAndZ_(coordinate[0], coordinate[1], z, false, opt_tileCoord);\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @return {number} Tile resolution.\n     */\n    TileGrid.prototype.getTileCoordResolution = function (tileCoord) {\n        return this.resolutions_[tileCoord[0]];\n    };\n    /**\n     * Get the tile size for a zoom level. The type of the return value matches the\n     * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n     * get an `import(\"../size.js\").Size`, run the result through `import(\"../size.js\").Size.toSize()`.\n     * @param {number} z Z.\n     * @return {number|import(\"../size.js\").Size} Tile size.\n     * @api\n     */\n    TileGrid.prototype.getTileSize = function (z) {\n        if (this.tileSize_) {\n            return this.tileSize_;\n        }\n        else {\n            return this.tileSizes_[z];\n        }\n    };\n    /**\n     * @param {number} z Zoom level.\n     * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n     */\n    TileGrid.prototype.getFullTileRange = function (z) {\n        if (!this.fullTileRanges_) {\n            return null;\n        }\n        else {\n            return this.fullTileRanges_[z];\n        }\n    };\n    /**\n     * @param {number} resolution Resolution.\n     * @param {number=} opt_direction If 0, the nearest resolution will be used.\n     *     If 1, the nearest lower resolution will be used. If -1, the nearest\n     *     higher resolution will be used. Default is 0.\n     * @return {number} Z.\n     * @api\n     */\n    TileGrid.prototype.getZForResolution = function (resolution, opt_direction) {\n        var z = linearFindNearest(this.resolutions_, resolution, opt_direction || 0);\n        return clamp(z, this.minZoom, this.maxZoom);\n    };\n    /**\n     * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n     * @private\n     */\n    TileGrid.prototype.calculateTileRanges_ = function (extent) {\n        var length = this.resolutions_.length;\n        var fullTileRanges = new Array(length);\n        for (var z = this.minZoom; z < length; ++z) {\n            fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n        }\n        this.fullTileRanges_ = fullTileRanges;\n    };\n    return TileGrid;\n}());\nexport default TileGrid;\n//# sourceMappingURL=TileGrid.js.map","/**\n * @module ol/tilegrid\n */\nimport { DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE } from './tilegrid/common.js';\nimport { toSize } from './size.js';\nimport { containsCoordinate, createOrUpdate, getCorner, getHeight, getWidth } from './extent.js';\nimport Corner from './extent/Corner.js';\nimport { get as getProjection, METERS_PER_UNIT } from './proj.js';\nimport Units from './proj/Units.js';\nimport TileGrid from './tilegrid/TileGrid.js';\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n    var tileGrid = projection.getDefaultTileGrid();\n    if (!tileGrid) {\n        tileGrid = createForProjection(projection);\n        projection.setDefaultTileGrid(tileGrid);\n    }\n    return tileGrid;\n}\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n    var z = tileCoord[0];\n    var center = tileGrid.getTileCoordCenter(tileCoord);\n    var projectionExtent = extentFromProjection(projection);\n    if (!containsCoordinate(projectionExtent, center)) {\n        var worldWidth = getWidth(projectionExtent);\n        var worldsAway = Math.ceil((projectionExtent[0] - center[0]) / worldWidth);\n        center[0] += worldWidth * worldsAway;\n        return tileGrid.getTileCoordForCoordAndZ(center, z);\n    }\n    else {\n        return tileCoord;\n    }\n}\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n    var corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n    var resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n    return new TileGrid({\n        extent: extent,\n        origin: getCorner(extent, corner),\n        resolutions: resolutions,\n        tileSize: opt_tileSize\n    });\n}\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. The zero level of the grid is defined by the resolution at which one tile fits in the\n * provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions=} opt_options Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n    /** @type {XYZOptions} */\n    var xyzOptions = opt_options || {};\n    var extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n    /** @type {import(\"./tilegrid/TileGrid.js\").Options} */\n    var gridOptions = {\n        extent: extent,\n        minZoom: xyzOptions.minZoom,\n        tileSize: xyzOptions.tileSize,\n        resolutions: resolutionsFromExtent(extent, xyzOptions.maxZoom, xyzOptions.tileSize)\n    };\n    return new TileGrid(gridOptions);\n}\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize) {\n    var maxZoom = opt_maxZoom !== undefined ?\n        opt_maxZoom : DEFAULT_MAX_ZOOM;\n    var height = getHeight(extent);\n    var width = getWidth(extent);\n    var tileSize = toSize(opt_tileSize !== undefined ?\n        opt_tileSize : DEFAULT_TILE_SIZE);\n    var maxResolution = Math.max(width / tileSize[0], height / tileSize[1]);\n    var length = maxZoom + 1;\n    var resolutions = new Array(length);\n    for (var z = 0; z < length; ++z) {\n        resolutions[z] = maxResolution / Math.pow(2, z);\n    }\n    return resolutions;\n}\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, opt_maxZoom, opt_tileSize, opt_corner) {\n    var extent = extentFromProjection(projection);\n    return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n    projection = getProjection(projection);\n    var extent = projection.getExtent();\n    if (!extent) {\n        var half = 180 * METERS_PER_UNIT[Units.DEGREES] / projection.getMetersPerUnit();\n        extent = createOrUpdate(-half, -half, half, half);\n    }\n    return extent;\n}\n//# sourceMappingURL=tilegrid.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Tile\n */\nimport { abstract } from '../util.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport Event from '../events/Event.js';\nimport { equivalent } from '../proj.js';\nimport { toSize, scale as scaleSize } from '../size.js';\nimport Source from './Source.js';\nimport { getKeyZXY, withinExtentAndZ } from '../tilecoord.js';\nimport { wrapX, getForProjection as getTileGridForProjection } from '../tilegrid.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque]\n * @property {number} [tilePixelRatio]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n * @property {number} [zDirection=0]\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nvar TileSource = /** @class */ (function (_super) {\n    __extends(TileSource, _super);\n    /**\n     * @param {Options} options SourceTile source options.\n     */\n    function TileSource(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            attributionsCollapsible: options.attributionsCollapsible,\n            projection: options.projection,\n            state: options.state,\n            wrapX: options.wrapX\n        }) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.tilePixelRatio_ = options.tilePixelRatio !== undefined ?\n            options.tilePixelRatio : 1;\n        /**\n         * @protected\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        _this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n        var cacheSize = options.cacheSize;\n        if (cacheSize === undefined) {\n            var tileSize = [256, 256];\n            var tileGrid = options.tileGrid;\n            if (tileGrid) {\n                toSize(tileGrid.getTileSize(tileGrid.getMinZoom()), tileSize);\n            }\n            var canUseScreen = typeof screen !== 'undefined';\n            var width = canUseScreen ? (screen.availWidth || screen.width) : 1920;\n            var height = canUseScreen ? (screen.availHeight || screen.height) : 1080;\n            cacheSize = 4 * Math.ceil(width / tileSize[0]) * Math.ceil(height / tileSize[1]);\n        }\n        /**\n         * @protected\n         * @type {import(\"../TileCache.js\").default}\n         */\n        _this.tileCache = new TileCache(cacheSize);\n        /**\n         * @protected\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.tmpSize = [0, 0];\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.key_ = options.key || '';\n        /**\n         * @protected\n         * @type {import(\"../Tile.js\").Options}\n         */\n        _this.tileOptions = { transition: options.transition };\n        /**\n         * zDirection hint, read by the renderer. Indicates which resolution should be used\n         * by a renderer if the views resolution does not match any resolution of the tile source.\n         * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n         * will be used. If -1, the nearest higher resolution will be used.\n         * @type {number}\n         */\n        _this.zDirection = options.zDirection ? options.zDirection : 0;\n        return _this;\n    }\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    TileSource.prototype.canExpireCache = function () {\n        return this.tileCache.canExpireCache();\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {!Object<string, import(\"../TileRange.js\").default>} usedTiles Used tiles.\n     */\n    TileSource.prototype.expireCache = function (projection, usedTiles) {\n        var tileCache = this.getTileCacheForProjection(projection);\n        if (tileCache) {\n            tileCache.expireCache(usedTiles);\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {number} z Zoom level.\n     * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n     * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n     *     loaded tile.  If the callback returns `false`, the tile will not be\n     *     considered loaded.\n     * @return {boolean} The tile range is fully covered with loaded tiles.\n     */\n    TileSource.prototype.forEachLoadedTile = function (projection, z, tileRange, callback) {\n        var tileCache = this.getTileCacheForProjection(projection);\n        if (!tileCache) {\n            return false;\n        }\n        var covered = true;\n        var tile, tileCoordKey, loaded;\n        for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n            for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                tileCoordKey = getKeyZXY(z, x, y);\n                loaded = false;\n                if (tileCache.containsKey(tileCoordKey)) {\n                    tile = /** @type {!import(\"../Tile.js\").default} */ (tileCache.get(tileCoordKey));\n                    loaded = tile.getState() === TileState.LOADED;\n                    if (loaded) {\n                        loaded = (callback(tile) !== false);\n                    }\n                }\n                if (!loaded) {\n                    covered = false;\n                }\n            }\n        }\n        return covered;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {number} Gutter.\n     */\n    TileSource.prototype.getGutterForProjection = function (projection) {\n        return 0;\n    };\n    /**\n     * Return the key to be used for all tiles in the source.\n     * @return {string} The key for all tiles.\n     * @protected\n     */\n    TileSource.prototype.getKey = function () {\n        return this.key_;\n    };\n    /**\n     * Set the value to be used as the key for all tiles in the source.\n     * @param {string} key The key for tiles.\n     * @protected\n     */\n    TileSource.prototype.setKey = function (key) {\n        if (this.key_ !== key) {\n            this.key_ = key;\n            this.changed();\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {boolean} Opaque.\n     */\n    TileSource.prototype.getOpaque = function (projection) {\n        return this.opaque_;\n    };\n    /**\n     * @inheritDoc\n     */\n    TileSource.prototype.getResolutions = function () {\n        return this.tileGrid.getResolutions();\n    };\n    /**\n     * @abstract\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     */\n    TileSource.prototype.getTile = function (z, x, y, pixelRatio, projection) {\n        return abstract();\n    };\n    /**\n     * Return the tile grid of the tile source.\n     * @return {import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n     * @api\n     */\n    TileSource.prototype.getTileGrid = function () {\n        return this.tileGrid;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n     */\n    TileSource.prototype.getTileGridForProjection = function (projection) {\n        if (!this.tileGrid) {\n            return getTileGridForProjection(projection);\n        }\n        else {\n            return this.tileGrid;\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../TileCache.js\").default} Tile cache.\n     * @protected\n     */\n    TileSource.prototype.getTileCacheForProjection = function (projection) {\n        var thisProj = this.getProjection();\n        if (thisProj && !equivalent(thisProj, projection)) {\n            return null;\n        }\n        else {\n            return this.tileCache;\n        }\n    };\n    /**\n     * Get the tile pixel ratio for this source. Subclasses may override this\n     * method, which is meant to return a supported pixel ratio that matches the\n     * provided `pixelRatio` as close as possible.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {number} Tile pixel ratio.\n     */\n    TileSource.prototype.getTilePixelRatio = function (pixelRatio) {\n        return this.tilePixelRatio_;\n    };\n    /**\n     * @param {number} z Z.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../size.js\").Size} Tile size.\n     */\n    TileSource.prototype.getTilePixelSize = function (z, pixelRatio, projection) {\n        var tileGrid = this.getTileGridForProjection(projection);\n        var tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n        var tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n        if (tilePixelRatio == 1) {\n            return tileSize;\n        }\n        else {\n            return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n        }\n    };\n    /**\n     * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n     * is outside the resolution and extent range of the tile grid, `null` will be\n     * returned.\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../proj/Projection.js\").default=} opt_projection Projection.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n     *     null if no tile URL should be created for the passed `tileCoord`.\n     */\n    TileSource.prototype.getTileCoordForTileUrlFunction = function (tileCoord, opt_projection) {\n        var projection = opt_projection !== undefined ?\n            opt_projection : this.getProjection();\n        var tileGrid = this.getTileGridForProjection(projection);\n        if (this.getWrapX() && projection.isGlobal()) {\n            tileCoord = wrapX(tileGrid, tileCoord, projection);\n        }\n        return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n    };\n    /**\n     * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n     * @api\n     */\n    TileSource.prototype.clear = function () {\n        this.tileCache.clear();\n    };\n    /**\n     * @inheritDoc\n     */\n    TileSource.prototype.refresh = function () {\n        this.clear();\n        _super.prototype.refresh.call(this);\n    };\n    /**\n     * Marks a tile coord as being used, without triggering a load.\n     * @abstract\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    TileSource.prototype.useTile = function (z, x, y, projection) { };\n    return TileSource;\n}(Source));\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nvar TileSourceEvent = /** @class */ (function (_super) {\n    __extends(TileSourceEvent, _super);\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../Tile.js\").default} tile The tile.\n     */\n    function TileSourceEvent(type, tile) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The tile related to the event.\n         * @type {import(\"../Tile.js\").default}\n         * @api\n         */\n        _this.tile = tile;\n        return _this;\n    }\n    return TileSourceEvent;\n}(Event));\nexport { TileSourceEvent };\nexport default TileSource;\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/source/TileEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a tile starts loading.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n     * @api\n     */\n    TILELOADSTART: 'tileloadstart',\n    /**\n     * Triggered when a tile finishes loading, either when its data is loaded,\n     * or when loading was aborted because the tile is no longer needed.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n     * @api\n     */\n    TILELOADEND: 'tileloadend',\n    /**\n     * Triggered if tile loading results in an error.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n     * @api\n     */\n    TILELOADERROR: 'tileloaderror'\n};\n//# sourceMappingURL=TileEventType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/UrlTile\n */\nimport { getUid } from '../util.js';\nimport TileState from '../TileState.js';\nimport { expandUrl, createFromTemplates, nullTileUrlFunction } from '../tileurlfunction.js';\nimport TileSource, { TileSourceEvent } from './Tile.js';\nimport TileEventType from './TileEventType.js';\nimport { getKeyZXY } from '../tilecoord.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction\n * @property {number} [tilePixelRatio]\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction]\n * @property {string} [url]\n * @property {Array<string>} [urls]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n * @property {number} [zDirection=0]\n */\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nvar UrlTile = /** @class */ (function (_super) {\n    __extends(UrlTile, _super);\n    /**\n     * @param {Options} options Image tile options.\n     */\n    function UrlTile(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            opaque: options.opaque,\n            projection: options.projection,\n            state: options.state,\n            tileGrid: options.tileGrid,\n            tilePixelRatio: options.tilePixelRatio,\n            wrapX: options.wrapX,\n            transition: options.transition,\n            key: options.key,\n            attributionsCollapsible: options.attributionsCollapsible,\n            zDirection: options.zDirection\n        }) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.generateTileUrlFunction_ = !options.tileUrlFunction;\n        /**\n         * @protected\n         * @type {import(\"../Tile.js\").LoadFunction}\n         */\n        _this.tileLoadFunction = options.tileLoadFunction;\n        /**\n         * @protected\n         * @type {import(\"../Tile.js\").UrlFunction}\n         */\n        _this.tileUrlFunction = options.tileUrlFunction ? options.tileUrlFunction.bind(_this) : nullTileUrlFunction;\n        /**\n         * @protected\n         * @type {!Array<string>|null}\n         */\n        _this.urls = null;\n        if (options.urls) {\n            _this.setUrls(options.urls);\n        }\n        else if (options.url) {\n            _this.setUrl(options.url);\n        }\n        /**\n         * @private\n         * @type {!Object<string, boolean>}\n         */\n        _this.tileLoadingKeys_ = {};\n        return _this;\n    }\n    /**\n     * Return the tile load function of the source.\n     * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n     * @api\n     */\n    UrlTile.prototype.getTileLoadFunction = function () {\n        return this.tileLoadFunction;\n    };\n    /**\n     * Return the tile URL function of the source.\n     * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n     * @api\n     */\n    UrlTile.prototype.getTileUrlFunction = function () {\n        return this.tileUrlFunction;\n    };\n    /**\n     * Return the URLs used for this source.\n     * When a tileUrlFunction is used instead of url or urls,\n     * null will be returned.\n     * @return {!Array<string>|null} URLs.\n     * @api\n     */\n    UrlTile.prototype.getUrls = function () {\n        return this.urls;\n    };\n    /**\n     * Handle tile change events.\n     * @param {import(\"../events/Event.js\").default} event Event.\n     * @protected\n     */\n    UrlTile.prototype.handleTileChange = function (event) {\n        var tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n        var uid = getUid(tile);\n        var tileState = tile.getState();\n        var type;\n        if (tileState == TileState.LOADING) {\n            this.tileLoadingKeys_[uid] = true;\n            type = TileEventType.TILELOADSTART;\n        }\n        else if (uid in this.tileLoadingKeys_) {\n            delete this.tileLoadingKeys_[uid];\n            type = tileState == TileState.ERROR ? TileEventType.TILELOADERROR :\n                (tileState == TileState.LOADED || tileState == TileState.ABORT) ?\n                    TileEventType.TILELOADEND : undefined;\n        }\n        if (type != undefined) {\n            this.dispatchEvent(new TileSourceEvent(type, tile));\n        }\n    };\n    /**\n     * Set the tile load function of the source.\n     * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n     * @api\n     */\n    UrlTile.prototype.setTileLoadFunction = function (tileLoadFunction) {\n        this.tileCache.clear();\n        this.tileLoadFunction = tileLoadFunction;\n        this.changed();\n    };\n    /**\n     * Set the tile URL function of the source.\n     * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n     * @param {string=} key Optional new tile key for the source.\n     * @api\n     */\n    UrlTile.prototype.setTileUrlFunction = function (tileUrlFunction, key) {\n        this.tileUrlFunction = tileUrlFunction;\n        this.tileCache.pruneExceptNewestZ();\n        if (typeof key !== 'undefined') {\n            this.setKey(key);\n        }\n        else {\n            this.changed();\n        }\n    };\n    /**\n     * Set the URL to use for requests.\n     * @param {string} url URL.\n     * @api\n     */\n    UrlTile.prototype.setUrl = function (url) {\n        var urls = this.urls = expandUrl(url);\n        this.setUrls(urls);\n    };\n    /**\n     * Set the URLs to use for requests.\n     * @param {Array<string>} urls URLs.\n     * @api\n     */\n    UrlTile.prototype.setUrls = function (urls) {\n        this.urls = urls;\n        var key = urls.join('\\n');\n        if (this.generateTileUrlFunction_) {\n            this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n        }\n        else {\n            this.setKey(key);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    UrlTile.prototype.useTile = function (z, x, y) {\n        var tileCoordKey = getKeyZXY(z, x, y);\n        if (this.tileCache.containsKey(tileCoordKey)) {\n            this.tileCache.get(tileCoordKey);\n        }\n    };\n    return UrlTile;\n}(TileSource));\nexport default UrlTile;\n//# sourceMappingURL=UrlTile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/TileImage\n */\nimport { ENABLE_RASTER_REPROJECTION } from '../reproj/common.js';\nimport { getUid } from '../util.js';\nimport ImageTile from '../ImageTile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport EventType from '../events/EventType.js';\nimport { equivalent, get as getProjection } from '../proj.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport UrlTile from './UrlTile.js';\nimport { getKey, getKeyZXY } from '../tilecoord.js';\nimport { getForProjection as getTileGridForProjection } from '../tilegrid.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number} [zDirection=0] Indicate which resolution should be used\n * by a renderer if the view resolution does not match any resolution of the tile source.\n * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n * will be used. If -1, the nearest higher resolution will be used.\n */\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nvar TileImage = /** @class */ (function (_super) {\n    __extends(TileImage, _super);\n    /**\n     * @param {!Options} options Image tile options.\n     */\n    function TileImage(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            opaque: options.opaque,\n            projection: options.projection,\n            state: options.state,\n            tileGrid: options.tileGrid,\n            tileLoadFunction: options.tileLoadFunction ?\n                options.tileLoadFunction : defaultTileLoadFunction,\n            tilePixelRatio: options.tilePixelRatio,\n            tileUrlFunction: options.tileUrlFunction,\n            url: options.url,\n            urls: options.urls,\n            wrapX: options.wrapX,\n            transition: options.transition,\n            key: options.key,\n            attributionsCollapsible: options.attributionsCollapsible,\n            zDirection: options.zDirection\n        }) || this;\n        /**\n         * @protected\n         * @type {?string}\n         */\n        _this.crossOrigin =\n            options.crossOrigin !== undefined ? options.crossOrigin : null;\n        /**\n         * @protected\n         * @type {typeof ImageTile}\n         */\n        _this.tileClass = options.tileClass !== undefined ?\n            options.tileClass : ImageTile;\n        /**\n         * @protected\n         * @type {!Object<string, TileCache>}\n         */\n        _this.tileCacheForProjection = {};\n        /**\n         * @protected\n         * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n         */\n        _this.tileGridForProjection = {};\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderReprojectionEdges_ = false;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.canExpireCache = function () {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.canExpireCache.call(this);\n        }\n        if (this.tileCache.canExpireCache()) {\n            return true;\n        }\n        else {\n            for (var key in this.tileCacheForProjection) {\n                if (this.tileCacheForProjection[key].canExpireCache()) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.expireCache = function (projection, usedTiles) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            _super.prototype.expireCache.call(this, projection, usedTiles);\n            return;\n        }\n        var usedTileCache = this.getTileCacheForProjection(projection);\n        this.tileCache.expireCache(this.tileCache == usedTileCache ? usedTiles : {});\n        for (var id in this.tileCacheForProjection) {\n            var tileCache = this.tileCacheForProjection[id];\n            tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.getGutterForProjection = function (projection) {\n        if (ENABLE_RASTER_REPROJECTION &&\n            this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n            return 0;\n        }\n        else {\n            return this.getGutter();\n        }\n    };\n    /**\n     * @return {number} Gutter.\n     */\n    TileImage.prototype.getGutter = function () {\n        return 0;\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.getOpaque = function (projection) {\n        if (ENABLE_RASTER_REPROJECTION &&\n            this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n            return false;\n        }\n        else {\n            return _super.prototype.getOpaque.call(this, projection);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.getTileGridForProjection = function (projection) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.getTileGridForProjection.call(this, projection);\n        }\n        var thisProj = this.getProjection();\n        if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n            return this.tileGrid;\n        }\n        else {\n            var projKey = getUid(projection);\n            if (!(projKey in this.tileGridForProjection)) {\n                this.tileGridForProjection[projKey] = getTileGridForProjection(projection);\n            }\n            return (\n            /** @type {!import(\"../tilegrid/TileGrid.js\").default} */ (this.tileGridForProjection[projKey]));\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.getTileCacheForProjection = function (projection) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.getTileCacheForProjection.call(this, projection);\n        }\n        var thisProj = this.getProjection();\n        if (!thisProj || equivalent(thisProj, projection)) {\n            return this.tileCache;\n        }\n        else {\n            var projKey = getUid(projection);\n            if (!(projKey in this.tileCacheForProjection)) {\n                this.tileCacheForProjection[projKey] = new TileCache(this.tileCache.highWaterMark);\n            }\n            return this.tileCacheForProjection[projKey];\n        }\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {string} key The key set on the tile.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     * @private\n     */\n    TileImage.prototype.createTile_ = function (z, x, y, pixelRatio, projection, key) {\n        var tileCoord = [z, x, y];\n        var urlTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);\n        var tileUrl = urlTileCoord ?\n            this.tileUrlFunction(urlTileCoord, pixelRatio, projection) : undefined;\n        var tile = new this.tileClass(tileCoord, tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY, tileUrl !== undefined ? tileUrl : '', this.crossOrigin, this.tileLoadFunction, this.tileOptions);\n        tile.key = key;\n        tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n        return tile;\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.getTile = function (z, x, y, pixelRatio, projection) {\n        var sourceProjection = /** @type {!import(\"../proj/Projection.js\").default} */ (this.getProjection());\n        if (!ENABLE_RASTER_REPROJECTION ||\n            !sourceProjection || !projection || equivalent(sourceProjection, projection)) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection || projection);\n        }\n        else {\n            var cache = this.getTileCacheForProjection(projection);\n            var tileCoord = [z, x, y];\n            var tile = void 0;\n            var tileCoordKey = getKey(tileCoord);\n            if (cache.containsKey(tileCoordKey)) {\n                tile = /** @type {!import(\"../Tile.js\").default} */ (cache.get(tileCoordKey));\n            }\n            var key = this.getKey();\n            if (tile && tile.key == key) {\n                return tile;\n            }\n            else {\n                var sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n                var targetTileGrid = this.getTileGridForProjection(projection);\n                var wrappedTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);\n                var newTile = new ReprojTile(sourceProjection, sourceTileGrid, projection, targetTileGrid, tileCoord, wrappedTileCoord, this.getTilePixelRatio(pixelRatio), this.getGutter(), function (z, x, y, pixelRatio) {\n                    return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n                }.bind(this), this.reprojectionErrorThreshold_, this.renderReprojectionEdges_);\n                newTile.key = key;\n                if (tile) {\n                    newTile.interimTile = tile;\n                    newTile.refreshInterimChain();\n                    cache.replace(tileCoordKey, newTile);\n                }\n                else {\n                    cache.set(tileCoordKey, newTile);\n                }\n                return newTile;\n            }\n        }\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     * @protected\n     */\n    TileImage.prototype.getTileInternal = function (z, x, y, pixelRatio, projection) {\n        var tile = null;\n        var tileCoordKey = getKeyZXY(z, x, y);\n        var key = this.getKey();\n        if (!this.tileCache.containsKey(tileCoordKey)) {\n            tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n            this.tileCache.set(tileCoordKey, tile);\n        }\n        else {\n            tile = this.tileCache.get(tileCoordKey);\n            if (tile.key != key) {\n                // The source's params changed. If the tile has an interim tile and if we\n                // can use it then we use it. Otherwise we create a new tile.  In both\n                // cases we attempt to assign an interim tile to the new tile.\n                var interimTile = tile;\n                tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n                //make the new tile the head of the list,\n                if (interimTile.getState() == TileState.IDLE) {\n                    //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n                    tile.interimTile = interimTile.interimTile;\n                }\n                else {\n                    tile.interimTile = interimTile;\n                }\n                tile.refreshInterimChain();\n                this.tileCache.replace(tileCoordKey, tile);\n            }\n        }\n        return tile;\n    };\n    /**\n     * Sets whether to render reprojection edges or not (usually for debugging).\n     * @param {boolean} render Render the edges.\n     * @api\n     */\n    TileImage.prototype.setRenderReprojectionEdges = function (render) {\n        if (!ENABLE_RASTER_REPROJECTION ||\n            this.renderReprojectionEdges_ == render) {\n            return;\n        }\n        this.renderReprojectionEdges_ = render;\n        for (var id in this.tileCacheForProjection) {\n            this.tileCacheForProjection[id].clear();\n        }\n        this.changed();\n    };\n    /**\n     * Sets the tile grid to use when reprojecting the tiles to the given\n     * projection instead of the default tile grid for the projection.\n     *\n     * This can be useful when the default tile grid cannot be created\n     * (e.g. projection has no extent defined) or\n     * for optimization reasons (custom tile size, resolutions, ...).\n     *\n     * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n     * @api\n     */\n    TileImage.prototype.setTileGridForProjection = function (projection, tilegrid) {\n        if (ENABLE_RASTER_REPROJECTION) {\n            var proj = getProjection(projection);\n            if (proj) {\n                var projKey = getUid(proj);\n                if (!(projKey in this.tileGridForProjection)) {\n                    this.tileGridForProjection[projKey] = tilegrid;\n                }\n            }\n        }\n    };\n    return TileImage;\n}(UrlTile));\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n    /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src = src;\n}\nexport default TileImage;\n//# sourceMappingURL=TileImage.js.map","/**\n * @module ol/source/BingMaps\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { createFromTileUrlFunctions } from '../tileurlfunction.js';\nimport { applyTransform, intersects } from '../extent.js';\nimport { jsonp as requestJSONP } from '../net.js';\nimport { get as getProjection, getTransformFromProjections } from '../proj.js';\nimport SourceState from './State.js';\nimport TileImage from './TileImage.js';\nimport { createOrUpdate } from '../tilecoord.js';\nimport { createXYZ, extentFromProjection } from '../tilegrid.js';\n/**\n * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coord.\n * @return {string} Quad key.\n */\nexport function quadKey(tileCoord) {\n    var z = tileCoord[0];\n    var digits = new Array(z);\n    var mask = 1 << (z - 1);\n    var i, charCode;\n    for (i = 0; i < z; ++i) {\n        // 48 is charCode for 0 - '0'.charCodeAt(0)\n        charCode = 48;\n        if (tileCoord[1] & mask) {\n            charCode += 1;\n        }\n        if (tileCoord[2] & mask) {\n            charCode += 2;\n        }\n        digits[i] = String.fromCharCode(charCode);\n        mask >>= 1;\n    }\n    return digits.join('');\n}\n/**\n * The attribution containing a link to the Microsoft® Bing™ Maps Platform APIs’\n * Terms Of Use.\n * @const\n * @type {string}\n */\nvar TOS_ATTRIBUTION = '<a class=\"ol-attribution-bing-tos\" ' +\n    'href=\"https://www.microsoft.com/maps/product/terms.html\">' +\n    'Terms of Use</a>';\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\n * @property {boolean} [hidpi=false] If `true` hidpi tiles will be requested.\n * @property {string} [culture='en-us'] Culture code.\n * @property {string} key Bing Maps API key. Get yours at http://www.bingmapsportal.com/.\n * @property {string} imagerySet Type of imagery.\n * @property {number} [maxZoom=21] Max zoom. Default is what's advertized by the BingMaps service.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n/**\n * @typedef {Object} BingMapsImageryMetadataResponse\n * @property {number} statusCode The response status code\n * @property {string} statusDescription The response status description\n * @property {string} authenticationResultCode The authentication result code\n * @property {Array<ResourceSet>} resourceSets The array of resource sets\n */\n/**\n * @typedef {Object} ResourceSet\n * @property {Array<Resource>} resources\n */\n/**\n * @typedef {Object} Resource\n * @property {number} imageHeight The image height\n * @property {number} imageWidth The image width\n * @property {number} zoomMin The minimum zoom level\n * @property {number} zoomMax The maximum zoom level\n * @property {string} imageUrl The image URL\n * @property {Array<string>} imageUrlSubdomains The image URL subdomains for rotation\n * @property {Array<ImageryProvider>} [imageryProviders] The array of ImageryProviders\n */\n/**\n * @typedef {Object} ImageryProvider\n * @property {Array<CoverageArea>} coverageAreas The coverage areas\n * @property {string} [attribution] The attribution\n */\n/**\n * @typedef {Object} CoverageArea\n * @property {number} zoomMin The minimum zoom\n * @property {number} zoomMax The maximum zoom\n * @property {Array<number>} bbox The coverage bounding box\n */\n/**\n * @classdesc\n * Layer source for Bing Maps tile data.\n * @api\n */\nvar BingMaps = /** @class */ (function (_super) {\n    __extends(BingMaps, _super);\n    /**\n     * @param {Options} options Bing Maps options.\n     */\n    function BingMaps(options) {\n        var _this = this;\n        var hidpi = options.hidpi !== undefined ? options.hidpi : false;\n        _this = _super.call(this, {\n            cacheSize: options.cacheSize,\n            crossOrigin: 'anonymous',\n            opaque: true,\n            projection: getProjection('EPSG:3857'),\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            state: SourceState.LOADING,\n            tileLoadFunction: options.tileLoadFunction,\n            tilePixelRatio: hidpi ? 2 : 1,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\n            transition: options.transition\n        }) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.hidpi_ = hidpi;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.culture_ = options.culture !== undefined ? options.culture : 'en-us';\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxZoom_ = options.maxZoom !== undefined ? options.maxZoom : -1;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.apiKey_ = options.key;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.imagerySet_ = options.imagerySet;\n        var url = 'https://dev.virtualearth.net/REST/v1/Imagery/Metadata/' +\n            _this.imagerySet_ +\n            '?uriScheme=https&include=ImageryProviders&key=' + _this.apiKey_ +\n            '&c=' + _this.culture_;\n        requestJSONP(url, _this.handleImageryMetadataResponse.bind(_this), undefined, 'jsonp');\n        return _this;\n    }\n    /**\n     * Get the api key used for this source.\n     *\n     * @return {string} The api key.\n     * @api\n     */\n    BingMaps.prototype.getApiKey = function () {\n        return this.apiKey_;\n    };\n    /**\n     * Get the imagery set associated with this source.\n     *\n     * @return {string} The imagery set.\n     * @api\n     */\n    BingMaps.prototype.getImagerySet = function () {\n        return this.imagerySet_;\n    };\n    /**\n     * @param {BingMapsImageryMetadataResponse} response Response.\n     */\n    BingMaps.prototype.handleImageryMetadataResponse = function (response) {\n        if (response.statusCode != 200 ||\n            response.statusDescription != 'OK' ||\n            response.authenticationResultCode != 'ValidCredentials' ||\n            response.resourceSets.length != 1 ||\n            response.resourceSets[0].resources.length != 1) {\n            this.setState(SourceState.ERROR);\n            return;\n        }\n        var resource = response.resourceSets[0].resources[0];\n        var maxZoom = this.maxZoom_ == -1 ? resource.zoomMax : this.maxZoom_;\n        var sourceProjection = this.getProjection();\n        var extent = extentFromProjection(sourceProjection);\n        var scale = this.hidpi_ ? 2 : 1;\n        var tileSize = resource.imageWidth == resource.imageHeight ?\n            resource.imageWidth / scale :\n            [resource.imageWidth / scale, resource.imageHeight / scale];\n        var tileGrid = createXYZ({\n            extent: extent,\n            minZoom: resource.zoomMin,\n            maxZoom: maxZoom,\n            tileSize: tileSize\n        });\n        this.tileGrid = tileGrid;\n        var culture = this.culture_;\n        var hidpi = this.hidpi_;\n        this.tileUrlFunction = createFromTileUrlFunctions(resource.imageUrlSubdomains.map(function (subdomain) {\n            /** @type {import('../tilecoord.js').TileCoord} */\n            var quadKeyTileCoord = [0, 0, 0];\n            var imageUrl = resource.imageUrl\n                .replace('{subdomain}', subdomain)\n                .replace('{culture}', culture);\n            return (\n            /**\n             * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n             * @param {number} pixelRatio Pixel ratio.\n             * @param {import(\"../proj/Projection.js\").default} projection Projection.\n             * @return {string|undefined} Tile URL.\n             */\n            function (tileCoord, pixelRatio, projection) {\n                if (!tileCoord) {\n                    return undefined;\n                }\n                else {\n                    createOrUpdate(tileCoord[0], tileCoord[1], tileCoord[2], quadKeyTileCoord);\n                    var url = imageUrl;\n                    if (hidpi) {\n                        url += '&dpi=d1&device=mobile';\n                    }\n                    return url.replace('{quadkey}', quadKey(quadKeyTileCoord));\n                }\n            });\n        }));\n        if (resource.imageryProviders) {\n            var transform_1 = getTransformFromProjections(getProjection('EPSG:4326'), this.getProjection());\n            this.setAttributions(function (frameState) {\n                var attributions = [];\n                var viewState = frameState.viewState;\n                var tileGrid = this.getTileGrid();\n                var z = tileGrid.getZForResolution(viewState.resolution, this.zDirection);\n                var tileCoord = tileGrid.getTileCoordForCoordAndZ(viewState.center, z);\n                var zoom = tileCoord[0];\n                resource.imageryProviders.map(function (imageryProvider) {\n                    var intersecting = false;\n                    var coverageAreas = imageryProvider.coverageAreas;\n                    for (var i = 0, ii = coverageAreas.length; i < ii; ++i) {\n                        var coverageArea = coverageAreas[i];\n                        if (zoom >= coverageArea.zoomMin && zoom <= coverageArea.zoomMax) {\n                            var bbox = coverageArea.bbox;\n                            var epsg4326Extent = [bbox[1], bbox[0], bbox[3], bbox[2]];\n                            var extent_1 = applyTransform(epsg4326Extent, transform_1);\n                            if (intersects(extent_1, frameState.extent)) {\n                                intersecting = true;\n                                break;\n                            }\n                        }\n                    }\n                    if (intersecting) {\n                        attributions.push(imageryProvider.attribution);\n                    }\n                });\n                attributions.push(TOS_ATTRIBUTION);\n                return attributions;\n            }.bind(this));\n        }\n        this.setState(SourceState.READY);\n    };\n    return BingMaps;\n}(TileImage));\nexport default BingMaps;\n//# sourceMappingURL=BingMaps.js.map","/**\n * @module ol/net\n */\nimport { getUid } from './util.js';\n/**\n * Simple JSONP helper. Supports error callbacks and a custom callback param.\n * The error callback will be called when no JSONP is executed after 10 seconds.\n *\n * @param {string} url Request url. A 'callback' query parameter will be\n *     appended.\n * @param {Function} callback Callback on success.\n * @param {function()=} opt_errback Callback on error.\n * @param {string=} opt_callbackParam Custom query parameter for the JSONP\n *     callback. Default is 'callback'.\n */\nexport function jsonp(url, callback, opt_errback, opt_callbackParam) {\n    var script = document.createElement('script');\n    var key = 'olc_' + getUid(callback);\n    function cleanup() {\n        delete window[key];\n        script.parentNode.removeChild(script);\n    }\n    script.async = true;\n    script.src = url + (url.indexOf('?') == -1 ? '?' : '&') +\n        (opt_callbackParam || 'callback') + '=' + key;\n    var timer = setTimeout(function () {\n        cleanup();\n        if (opt_errback) {\n            opt_errback();\n        }\n    }, 10000);\n    window[key] = function (data) {\n        clearTimeout(timer);\n        cleanup();\n        callback(data);\n    };\n    document.getElementsByTagName('head')[0].appendChild(script);\n}\n//# sourceMappingURL=net.js.map","/**\n * @module ol/source/XYZ\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport TileImage from './TileImage.js';\nimport { createXYZ, extentFromProjection } from '../tilegrid.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=18] Optional max zoom level.\n * @property {number} [minZoom=0] Optional min zoom level.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if url or urls are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number} [zDirection=0] Indicate which resolution should be used\n * by a renderer if the view resolution does not match any resolution of the tile source.\n * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n * will be used. If -1, the nearest higher resolution will be used.\n */\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link module:ol/source/TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n * @api\n */\nvar XYZ = /** @class */ (function (_super) {\n    __extends(XYZ, _super);\n    /**\n     * @param {Options=} opt_options XYZ options.\n     */\n    function XYZ(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var projection = options.projection !== undefined ?\n            options.projection : 'EPSG:3857';\n        var tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n            createXYZ({\n                extent: extentFromProjection(projection),\n                maxZoom: options.maxZoom,\n                minZoom: options.minZoom,\n                tileSize: options.tileSize\n            });\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            crossOrigin: options.crossOrigin,\n            opaque: options.opaque,\n            projection: projection,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileGrid: tileGrid,\n            tileLoadFunction: options.tileLoadFunction,\n            tilePixelRatio: options.tilePixelRatio,\n            tileUrlFunction: options.tileUrlFunction,\n            url: options.url,\n            urls: options.urls,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\n            transition: options.transition,\n            attributionsCollapsible: options.attributionsCollapsible,\n            zDirection: options.zDirection\n        }) || this;\n        return _this;\n    }\n    return XYZ;\n}(TileImage));\nexport default XYZ;\n//# sourceMappingURL=XYZ.js.map","/**\n * @module ol/source/OSM\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport XYZ from './XYZ.js';\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport var ATTRIBUTION = '&#169; ' +\n    '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n    'contributors.';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=1.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url='https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nvar OSM = /** @class */ (function (_super) {\n    __extends(OSM, _super);\n    /**\n     * @param {Options=} [opt_options] Open Street Map options.\n     */\n    function OSM(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var attributions;\n        if (options.attributions !== undefined) {\n            attributions = options.attributions;\n        }\n        else {\n            attributions = [ATTRIBUTION];\n        }\n        var crossOrigin = options.crossOrigin !== undefined ?\n            options.crossOrigin : 'anonymous';\n        var url = options.url !== undefined ?\n            options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n        _this = _super.call(this, {\n            attributions: attributions,\n            cacheSize: options.cacheSize,\n            crossOrigin: crossOrigin,\n            opaque: options.opaque !== undefined ? options.opaque : true,\n            maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileLoadFunction: options.tileLoadFunction,\n            url: url,\n            wrapX: options.wrapX,\n            attributionsCollapsible: false\n        }) || this;\n        return _this;\n    }\n    return OSM;\n}(XYZ));\nexport default OSM;\n//# sourceMappingURL=OSM.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/FullScreen\n */\nimport Control from './Control.js';\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_UNSUPPORTED } from '../css.js';\nimport { replaceNode } from '../dom.js';\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\nvar events = ['fullscreenchange', 'webkitfullscreenchange', 'MSFullscreenChange'];\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-full-screen'] CSS class name.\n * @property {string|Text} [label='\\u2922'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|Text} [labelActive='\\u00d7'] Text label to use for the\n * button when full-screen is active.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Toggle full-screen'] Text label to use for the button tip.\n * @property {boolean} [keys=false] Full keyboard access.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {HTMLElement|string} [source] The element to be displayed\n * fullscreen. When not provided, the element containing the map viewport will\n * be displayed fullscreen.\n */\n/**\n * @classdesc\n * Provides a button that when clicked fills up the full screen with the map.\n * The full screen source element is by default the element containing the map viewport unless\n * overridden by providing the `source` option. In which case, the dom\n * element introduced using this parameter will be displayed in full screen.\n *\n * When in full screen mode, a close button is shown to exit full screen mode.\n * The [Fullscreen API](http://www.w3.org/TR/fullscreen/) is used to\n * toggle the map in full screen mode.\n *\n * @api\n */\nvar FullScreen = /** @class */ (function (_super) {\n    __extends(FullScreen, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function FullScreen(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            target: options.target\n        }) || this;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.cssClassName_ = options.className !== undefined ? options.className :\n            'ol-full-screen';\n        var label = options.label !== undefined ? options.label : '\\u2922';\n        /**\n         * @private\n         * @type {Text}\n         */\n        _this.labelNode_ = typeof label === 'string' ?\n            document.createTextNode(label) : label;\n        var labelActive = options.labelActive !== undefined ? options.labelActive : '\\u00d7';\n        /**\n         * @private\n         * @type {Text}\n         */\n        _this.labelActiveNode_ = typeof labelActive === 'string' ?\n            document.createTextNode(labelActive) : labelActive;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.button_ = document.createElement('button');\n        var tipLabel = options.tipLabel ? options.tipLabel : 'Toggle full-screen';\n        _this.setClassName_(_this.button_, isFullScreen());\n        _this.button_.setAttribute('type', 'button');\n        _this.button_.title = tipLabel;\n        _this.button_.appendChild(_this.labelNode_);\n        _this.button_.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this), false);\n        var cssClasses = _this.cssClassName_ + ' ' + CLASS_UNSELECTABLE +\n            ' ' + CLASS_CONTROL + ' ' +\n            (!isFullScreenSupported() ? CLASS_UNSUPPORTED : '');\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(_this.button_);\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.keys_ = options.keys !== undefined ? options.keys : false;\n        /**\n         * @private\n         * @type {HTMLElement|string|undefined}\n         */\n        _this.source_ = options.source;\n        return _this;\n    }\n    /**\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    FullScreen.prototype.handleClick_ = function (event) {\n        event.preventDefault();\n        this.handleFullScreen_();\n    };\n    /**\n     * @private\n     */\n    FullScreen.prototype.handleFullScreen_ = function () {\n        if (!isFullScreenSupported()) {\n            return;\n        }\n        var map = this.getMap();\n        if (!map) {\n            return;\n        }\n        if (isFullScreen()) {\n            exitFullScreen();\n        }\n        else {\n            var element = void 0;\n            if (this.source_) {\n                element = typeof this.source_ === 'string' ?\n                    document.getElementById(this.source_) :\n                    this.source_;\n            }\n            else {\n                element = map.getTargetElement();\n            }\n            if (this.keys_) {\n                requestFullScreenWithKeys(element);\n            }\n            else {\n                requestFullScreen(element);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    FullScreen.prototype.handleFullScreenChange_ = function () {\n        var map = this.getMap();\n        if (isFullScreen()) {\n            this.setClassName_(this.button_, true);\n            replaceNode(this.labelActiveNode_, this.labelNode_);\n        }\n        else {\n            this.setClassName_(this.button_, false);\n            replaceNode(this.labelNode_, this.labelActiveNode_);\n        }\n        if (map) {\n            map.updateSize();\n        }\n    };\n    /**\n     * @param {HTMLElement} element Target element\n     * @param {boolean} fullscreen True if fullscreen class name should be active\n     * @private\n     */\n    FullScreen.prototype.setClassName_ = function (element, fullscreen) {\n        var activeClassName = this.cssClassName_ + '-true';\n        var inactiveClassName = this.cssClassName_ + '-false';\n        var nextClassName = fullscreen ? activeClassName : inactiveClassName;\n        element.classList.remove(activeClassName);\n        element.classList.remove(inactiveClassName);\n        element.classList.add(nextClassName);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    FullScreen.prototype.setMap = function (map) {\n        _super.prototype.setMap.call(this, map);\n        if (map) {\n            for (var i = 0, ii = events.length; i < ii; ++i) {\n                this.listenerKeys.push(listen(document, events[i], this.handleFullScreenChange_, this));\n            }\n        }\n    };\n    return FullScreen;\n}(Control));\n/**\n * @return {boolean} Fullscreen is supported by the current platform.\n */\nfunction isFullScreenSupported() {\n    var body = document.body;\n    return !!(body.webkitRequestFullscreen ||\n        (body.msRequestFullscreen && document.msFullscreenEnabled) ||\n        (body.requestFullscreen && document.fullscreenEnabled));\n}\n/**\n * @return {boolean} Element is currently in fullscreen.\n */\nfunction isFullScreen() {\n    return !!(document.webkitIsFullScreen || document.msFullscreenElement || document.fullscreenElement);\n}\n/**\n * Request to fullscreen an element.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreen(element) {\n    if (element.requestFullscreen) {\n        element.requestFullscreen();\n    }\n    else if (element.msRequestFullscreen) {\n        element.msRequestFullscreen();\n    }\n    else if (element.webkitRequestFullscreen) {\n        element.webkitRequestFullscreen();\n    }\n}\n/**\n * Request to fullscreen an element with keyboard input.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreenWithKeys(element) {\n    if (element.webkitRequestFullscreen) {\n        element.webkitRequestFullscreen();\n    }\n    else {\n        requestFullScreen(element);\n    }\n}\n/**\n * Exit fullscreen.\n */\nfunction exitFullScreen() {\n    if (document.exitFullscreen) {\n        document.exitFullscreen();\n    }\n    else if (document.msExitFullscreen) {\n        document.msExitFullscreen();\n    }\n    else if (document.webkitExitFullscreen) {\n        document.webkitExitFullscreen();\n    }\n}\nexport default FullScreen;\n//# sourceMappingURL=FullScreen.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/MousePosition\n */\nimport { listen } from '../events.js';\nimport EventType from '../pointer/EventType.js';\nimport { getChangeEventType } from '../Object.js';\nimport Control from './Control.js';\nimport { getTransformFromProjections, identityTransform, get as getProjection, getUserProjection } from '../proj.js';\nimport '@openlayers/pepjs';\n/**\n * @type {string}\n */\nvar PROJECTION = 'projection';\n/**\n * @type {string}\n */\nvar COORDINATE_FORMAT = 'coordinateFormat';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-mouse-position'] CSS class name.\n * @property {import(\"../coordinate.js\").CoordinateFormat} [coordinateFormat] Coordinate format.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the\n * control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {string} [undefinedHTML='&#160;'] Markup to show when coordinates are not\n * available (e.g. when the pointer leaves the map viewport).  By default, the last position\n * will be replaced with `'&#160;'` (`&nbsp;`) when the pointer leaves the viewport.  To\n * retain the last rendered position, set this option to something falsey (like an empty\n * string `''`).\n */\n/**\n * @classdesc\n * A control to show the 2D coordinates of the mouse cursor. By default, these\n * are in the view projection, but can be in any supported projection.\n * By default the control is shown in the top right corner of the map, but this\n * can be changed by using the css selector `.ol-mouse-position`.\n *\n * On touch devices, which usually do not have a mouse cursor, the coordinates\n * of the currently touched position are shown.\n *\n * @api\n */\nvar MousePosition = /** @class */ (function (_super) {\n    __extends(MousePosition, _super);\n    /**\n     * @param {Options=} opt_options Mouse position options.\n     */\n    function MousePosition(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var element = document.createElement('div');\n        element.className = options.className !== undefined ? options.className : 'ol-mouse-position';\n        _this = _super.call(this, {\n            element: element,\n            render: options.render || render,\n            target: options.target\n        }) || this;\n        _this.addEventListener(getChangeEventType(PROJECTION), _this.handleProjectionChanged_);\n        if (options.coordinateFormat) {\n            _this.setCoordinateFormat(options.coordinateFormat);\n        }\n        if (options.projection) {\n            _this.setProjection(options.projection);\n        }\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.undefinedHTML_ = options.undefinedHTML !== undefined ? options.undefinedHTML : '&#160;';\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderOnMouseOut_ = !!_this.undefinedHTML_;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.renderedHTML_ = element.innerHTML;\n        /**\n         * @private\n         * @type {?import(\"../proj/Projection.js\").default}\n         */\n        _this.mapProjection_ = null;\n        /**\n         * @private\n         * @type {?import(\"../proj.js\").TransformFunction}\n         */\n        _this.transform_ = null;\n        return _this;\n    }\n    /**\n     * @private\n     */\n    MousePosition.prototype.handleProjectionChanged_ = function () {\n        this.transform_ = null;\n    };\n    /**\n     * Return the coordinate format type used to render the current position or\n     * undefined.\n     * @return {import(\"../coordinate.js\").CoordinateFormat|undefined} The format to render the current\n     *     position in.\n     * @observable\n     * @api\n     */\n    MousePosition.prototype.getCoordinateFormat = function () {\n        return (\n        /** @type {import(\"../coordinate.js\").CoordinateFormat|undefined} */ (this.get(COORDINATE_FORMAT)));\n    };\n    /**\n     * Return the projection that is used to report the mouse position.\n     * @return {import(\"../proj/Projection.js\").default|undefined} The projection to report mouse\n     *     position in.\n     * @observable\n     * @api\n     */\n    MousePosition.prototype.getProjection = function () {\n        return (\n        /** @type {import(\"../proj/Projection.js\").default|undefined} */ (this.get(PROJECTION)));\n    };\n    /**\n     * @param {Event} event Browser event.\n     * @protected\n     */\n    MousePosition.prototype.handleMouseMove = function (event) {\n        var map = this.getMap();\n        this.updateHTML_(map.getEventPixel(event));\n    };\n    /**\n     * @param {Event} event Browser event.\n     * @protected\n     */\n    MousePosition.prototype.handleMouseOut = function (event) {\n        this.updateHTML_(null);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    MousePosition.prototype.setMap = function (map) {\n        _super.prototype.setMap.call(this, map);\n        if (map) {\n            var viewport = map.getViewport();\n            this.listenerKeys.push(listen(viewport, EventType.POINTERMOVE, this.handleMouseMove, this));\n            if (this.renderOnMouseOut_) {\n                this.listenerKeys.push(listen(viewport, EventType.POINTEROUT, this.handleMouseOut, this));\n            }\n        }\n    };\n    /**\n     * Set the coordinate format type used to render the current position.\n     * @param {import(\"../coordinate.js\").CoordinateFormat} format The format to render the current\n     *     position in.\n     * @observable\n     * @api\n     */\n    MousePosition.prototype.setCoordinateFormat = function (format) {\n        this.set(COORDINATE_FORMAT, format);\n    };\n    /**\n     * Set the projection that is used to report the mouse position.\n     * @param {import(\"../proj.js\").ProjectionLike} projection The projection to report mouse\n     *     position in.\n     * @observable\n     * @api\n     */\n    MousePosition.prototype.setProjection = function (projection) {\n        this.set(PROJECTION, getProjection(projection));\n    };\n    /**\n     * @param {?import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @private\n     */\n    MousePosition.prototype.updateHTML_ = function (pixel) {\n        var html = this.undefinedHTML_;\n        if (pixel && this.mapProjection_) {\n            if (!this.transform_) {\n                var projection = this.getProjection();\n                if (projection) {\n                    this.transform_ = getTransformFromProjections(this.mapProjection_, projection);\n                }\n                else {\n                    this.transform_ = identityTransform;\n                }\n            }\n            var map = this.getMap();\n            var coordinate = map.getCoordinateFromPixelInternal(pixel);\n            if (coordinate) {\n                var userProjection = getUserProjection();\n                if (userProjection) {\n                    this.transform_ = getTransformFromProjections(this.mapProjection_, userProjection);\n                }\n                this.transform_(coordinate, coordinate);\n                var coordinateFormat = this.getCoordinateFormat();\n                if (coordinateFormat) {\n                    html = coordinateFormat(coordinate);\n                }\n                else {\n                    html = coordinate.toString();\n                }\n            }\n        }\n        if (!this.renderedHTML_ || html !== this.renderedHTML_) {\n            this.element.innerHTML = html;\n            this.renderedHTML_ = html;\n        }\n    };\n    return MousePosition;\n}(Control));\n/**\n * Update the projection. Rendering of the coordinates is done in\n * `handleMouseMove` and `handleMouseUp`.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {MousePosition}\n * @api\n */\nexport function render(mapEvent) {\n    var frameState = mapEvent.frameState;\n    if (!frameState) {\n        this.mapProjection_ = null;\n    }\n    else {\n        if (this.mapProjection_ != frameState.viewState.projection) {\n            this.mapProjection_ = frameState.viewState.projection;\n            this.transform_ = null;\n        }\n    }\n}\nexport default MousePosition;\n//# sourceMappingURL=MousePosition.js.map","import React, { useContext, useEffect, useRef } from \"react\";\nimport Map from \"ol/Map\";\nimport View from \"ol/View\";\nimport { Tile as TileLayer } from \"ol/layer.js\";\nimport BingMaps from \"ol/source/BingMaps\";\nimport { OSM } from \"ol/source\";\nimport { fromLonLat } from \"ol/proj\";\nimport { createStringXY } from \"ol/coordinate.js\";\nimport { defaults as defaultControls, FullScreen } from \"ol/control.js\";\nimport MousePosition from \"ol/control/MousePosition.js\";\nimport { MapContext } from \"./MapContext\";\nimport \"ol/ol.css\";\n\nexport default function OpenLayersMap({\n  projection = \"EPSG:3857\",\n  center = [-95.79, 34.48],\n  zoom = 4,\n  minZoom = 0,\n  maxZoom = 28,\n  cssClass = \"olmap\",\n  ...props\n}) {\n  const context = useContext(MapContext);\n  const mapContainer = useRef(null);\n\n  const baseLayer = props.bingAPIKey\n    ? new BingMaps({\n        key: props.bingAPIKey,\n        imagerySet: props.bingImagerySet || \"AerialWithLabels\"\n      })\n    : new OSM();\n\n  // create the map when component first mounts\n  useEffect(() => {\n    console.log(\"OpenLayersMap creating new map instance\");\n    const extend = [];\n    if (props.allowFullScreen) {\n      extend.push(new FullScreen());\n    }\n    if (props.showMousePosition) {\n      extend.push(\n        new MousePosition({\n          coordinateFormat: createStringXY(4),\n          projection: projection\n        })\n      );\n    }\n    const map = new Map({\n      target: mapContainer.current,\n      layers: [\n        new TileLayer({\n          source: baseLayer\n        })\n      ],\n      view: new View({\n        projection: projection,\n        center: fromLonLat(center), // does this need to consider projection?\n        zoom: zoom,\n        maxZoom: props.maxZoom,\n        minZoom: props.minZoom\n      }),\n      controls: defaultControls().extend(extend)\n    });\n\n    context.setMap(map);\n  }, []);\n\n  return <div className={cssClass} ref={mapContainer} />;\n}\n","/**\n * @module ol/format/Feature\n */\nimport { assign } from '../obj.js';\nimport { abstract } from '../util.js';\nimport { get as getProjection, equivalent as equivalentProjection, transformExtent } from '../proj.js';\nimport Units from '../proj/Units.js';\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nvar FeatureFormat = /** @class */ (function () {\n    function FeatureFormat() {\n        /**\n         * @protected\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        this.dataProjection = null;\n        /**\n         * @protected\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        this.defaultFeatureProjection = null;\n    }\n    /**\n     * Adds the data projection to the read options.\n     * @param {Document|Node|Object|string} source Source.\n     * @param {ReadOptions=} opt_options Options.\n     * @return {ReadOptions|undefined} Options.\n     * @protected\n     */\n    FeatureFormat.prototype.getReadOptions = function (source, opt_options) {\n        var options;\n        if (opt_options) {\n            var dataProjection = opt_options.dataProjection ?\n                getProjection(opt_options.dataProjection) : this.readProjection(source);\n            if (opt_options.extent &&\n                dataProjection && dataProjection.getUnits() === Units.TILE_PIXELS) {\n                dataProjection = getProjection(dataProjection);\n                dataProjection.setWorldExtent(opt_options.extent);\n            }\n            options = {\n                dataProjection: dataProjection,\n                featureProjection: opt_options.featureProjection\n            };\n        }\n        return this.adaptOptions(options);\n    };\n    /**\n     * Sets the `dataProjection` on the options, if no `dataProjection`\n     * is set.\n     * @param {WriteOptions|ReadOptions|undefined} options\n     *     Options.\n     * @protected\n     * @return {WriteOptions|ReadOptions|undefined}\n     *     Updated options.\n     */\n    FeatureFormat.prototype.adaptOptions = function (options) {\n        return assign({\n            dataProjection: this.dataProjection,\n            featureProjection: this.defaultFeatureProjection\n        }, options);\n    };\n    /**\n     * @abstract\n     * @return {import(\"./FormatType.js\").default} Format.\n     */\n    FeatureFormat.prototype.getType = function () {\n        return abstract();\n    };\n    /**\n     * Read a single feature from a source.\n     *\n     * @abstract\n     * @param {Document|Node|Object|string} source Source.\n     * @param {ReadOptions=} opt_options Read options.\n     * @return {import(\"../Feature.js\").FeatureLike} Feature.\n     */\n    FeatureFormat.prototype.readFeature = function (source, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read all features from a source.\n     *\n     * @abstract\n     * @param {Document|Node|ArrayBuffer|Object|string} source Source.\n     * @param {ReadOptions=} opt_options Read options.\n     * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n     */\n    FeatureFormat.prototype.readFeatures = function (source, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read a single geometry from a source.\n     *\n     * @abstract\n     * @param {Document|Node|Object|string} source Source.\n     * @param {ReadOptions=} opt_options Read options.\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     */\n    FeatureFormat.prototype.readGeometry = function (source, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read the projection from a source.\n     *\n     * @abstract\n     * @param {Document|Node|Object|string} source Source.\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     */\n    FeatureFormat.prototype.readProjection = function (source) {\n        return abstract();\n    };\n    /**\n     * Encode a feature in this format.\n     *\n     * @abstract\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {WriteOptions=} opt_options Write options.\n     * @return {string} Result.\n     */\n    FeatureFormat.prototype.writeFeature = function (feature, opt_options) {\n        return abstract();\n    };\n    /**\n     * Encode an array of features in this format.\n     *\n     * @abstract\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {WriteOptions=} opt_options Write options.\n     * @return {string} Result.\n     */\n    FeatureFormat.prototype.writeFeatures = function (features, opt_options) {\n        return abstract();\n    };\n    /**\n     * Write a single geometry in this format.\n     *\n     * @abstract\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {WriteOptions=} opt_options Write options.\n     * @return {string} Result.\n     */\n    FeatureFormat.prototype.writeGeometry = function (geometry, opt_options) {\n        return abstract();\n    };\n    return FeatureFormat;\n}());\nexport default FeatureFormat;\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {(WriteOptions|ReadOptions)=} opt_options Options.\n * @return {import(\"../geom/Geometry.js\").default} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, opt_options) {\n    var featureProjection = opt_options ? getProjection(opt_options.featureProjection) : null;\n    var dataProjection = opt_options ? getProjection(opt_options.dataProjection) : null;\n    var transformed;\n    if (featureProjection && dataProjection && !equivalentProjection(featureProjection, dataProjection)) {\n        transformed = (write ? geometry.clone() : geometry).transform(write ? featureProjection : dataProjection, write ? dataProjection : featureProjection);\n    }\n    else {\n        transformed = geometry;\n    }\n    if (write && opt_options && /** @type {WriteOptions} */ (opt_options).decimals !== undefined) {\n        var power_1 = Math.pow(10, /** @type {WriteOptions} */ (opt_options).decimals);\n        // if decimals option on write, round each coordinate appropriately\n        /**\n         * @param {Array<number>} coordinates Coordinates.\n         * @return {Array<number>} Transformed coordinates.\n         */\n        var transform = function (coordinates) {\n            for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n                coordinates[i] = Math.round(coordinates[i] * power_1) / power_1;\n            }\n            return coordinates;\n        };\n        if (transformed === geometry) {\n            transformed = geometry.clone();\n        }\n        transformed.applyTransform(transform);\n    }\n    return transformed;\n}\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions=} opt_options Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, opt_options) {\n    var featureProjection = opt_options ? getProjection(opt_options.featureProjection) : null;\n    var dataProjection = opt_options ? getProjection(opt_options.dataProjection) : null;\n    if (featureProjection && dataProjection && !equivalentProjection(featureProjection, dataProjection)) {\n        return transformExtent(extent, dataProjection, featureProjection);\n    }\n    else {\n        return extent;\n    }\n}\n//# sourceMappingURL=Feature.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/JSONFeature\n */\nimport { abstract } from '../util.js';\nimport FeatureFormat from './Feature.js';\nimport FormatType from './FormatType.js';\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @abstract\n */\nvar JSONFeature = /** @class */ (function (_super) {\n    __extends(JSONFeature, _super);\n    function JSONFeature() {\n        return _super.call(this) || this;\n    }\n    /**\n     * @inheritDoc\n     */\n    JSONFeature.prototype.getType = function () {\n        return FormatType.JSON;\n    };\n    /**\n     * Read a feature.  Only works for a single feature. Use `readFeatures` to\n     * read a feature collection.\n     *\n     * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @return {import(\"../Feature.js\").default} Feature.\n     * @api\n     */\n    JSONFeature.prototype.readFeature = function (source, opt_options) {\n        return this.readFeatureFromObject(getObject(source), this.getReadOptions(source, opt_options));\n    };\n    /**\n     * Read all features.  Works with both a single feature and a feature\n     * collection.\n     *\n     * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     * @api\n     */\n    JSONFeature.prototype.readFeatures = function (source, opt_options) {\n        return this.readFeaturesFromObject(getObject(source), this.getReadOptions(source, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {Object} object Object.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @protected\n     * @return {import(\"../Feature.js\").default} Feature.\n     */\n    JSONFeature.prototype.readFeatureFromObject = function (object, opt_options) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {Object} object Object.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @protected\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     */\n    JSONFeature.prototype.readFeaturesFromObject = function (object, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read a geometry.\n     *\n     * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     * @api\n     */\n    JSONFeature.prototype.readGeometry = function (source, opt_options) {\n        return this.readGeometryFromObject(getObject(source), this.getReadOptions(source, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {Object} object Object.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @protected\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     */\n    JSONFeature.prototype.readGeometryFromObject = function (object, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read the projection.\n     *\n     * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     * @api\n     */\n    JSONFeature.prototype.readProjection = function (source) {\n        return this.readProjectionFromObject(getObject(source));\n    };\n    /**\n     * @abstract\n     * @param {Object} object Object.\n     * @protected\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     */\n    JSONFeature.prototype.readProjectionFromObject = function (object) {\n        return abstract();\n    };\n    /**\n     * Encode a feature as string.\n     *\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {string} Encoded feature.\n     * @api\n     */\n    JSONFeature.prototype.writeFeature = function (feature, opt_options) {\n        return JSON.stringify(this.writeFeatureObject(feature, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {Object} Object.\n     */\n    JSONFeature.prototype.writeFeatureObject = function (feature, opt_options) {\n        return abstract();\n    };\n    /**\n     * Encode an array of features as string.\n     *\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {string} Encoded features.\n     * @api\n     */\n    JSONFeature.prototype.writeFeatures = function (features, opt_options) {\n        return JSON.stringify(this.writeFeaturesObject(features, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {Object} Object.\n     */\n    JSONFeature.prototype.writeFeaturesObject = function (features, opt_options) {\n        return abstract();\n    };\n    /**\n     * Encode a geometry as string.\n     *\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {string} Encoded geometry.\n     * @api\n     */\n    JSONFeature.prototype.writeGeometry = function (geometry, opt_options) {\n        return JSON.stringify(this.writeGeometryObject(geometry, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {Object} Object.\n     */\n    JSONFeature.prototype.writeGeometryObject = function (geometry, opt_options) {\n        return abstract();\n    };\n    return JSONFeature;\n}(FeatureFormat));\n/**\n * @param {Document|Node|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n    if (typeof source === 'string') {\n        var object = JSON.parse(source);\n        return object ? /** @type {Object} */ (object) : null;\n    }\n    else if (source !== null) {\n        return source;\n    }\n    else {\n        return null;\n    }\n}\nexport default JSONFeature;\n//# sourceMappingURL=JSONFeature.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/GeometryCollection\n */\nimport { listen, unlistenByKey } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { createOrUpdateEmpty, closestSquaredDistanceXY, extend, getCenter } from '../extent.js';\nimport Geometry from './Geometry.js';\nimport GeometryType from './GeometryType.js';\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry} objects.\n *\n * @api\n */\nvar GeometryCollection = /** @class */ (function (_super) {\n    __extends(GeometryCollection, _super);\n    /**\n     * @param {Array<Geometry>=} opt_geometries Geometries.\n     */\n    function GeometryCollection(opt_geometries) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {Array<Geometry>}\n         */\n        _this.geometries_ = opt_geometries ? opt_geometries : null;\n        /**\n         * @type {Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.changeEventsKeys_ = [];\n        _this.listenGeometriesChange_();\n        return _this;\n    }\n    /**\n     * @private\n     */\n    GeometryCollection.prototype.unlistenGeometriesChange_ = function () {\n        this.changeEventsKeys_.forEach(unlistenByKey);\n        this.changeEventsKeys_.length = 0;\n    };\n    /**\n     * @private\n     */\n    GeometryCollection.prototype.listenGeometriesChange_ = function () {\n        if (!this.geometries_) {\n            return;\n        }\n        for (var i = 0, ii = this.geometries_.length; i < ii; ++i) {\n            this.changeEventsKeys_.push(listen(this.geometries_[i], EventType.CHANGE, this.changed, this));\n        }\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!GeometryCollection} Clone.\n     * @override\n     * @api\n     */\n    GeometryCollection.prototype.clone = function () {\n        var geometryCollection = new GeometryCollection(null);\n        geometryCollection.setGeometries(this.geometries_);\n        return geometryCollection;\n    };\n    /**\n     * @inheritDoc\n     */\n    GeometryCollection.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            minSquaredDistance = geometries[i].closestPointXY(x, y, closestPoint, minSquaredDistance);\n        }\n        return minSquaredDistance;\n    };\n    /**\n     * @inheritDoc\n     */\n    GeometryCollection.prototype.containsXY = function (x, y) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            if (geometries[i].containsXY(x, y)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    GeometryCollection.prototype.computeExtent = function (extent) {\n        createOrUpdateEmpty(extent);\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            extend(extent, geometries[i].getExtent());\n        }\n        return extent;\n    };\n    /**\n     * Return the geometries that make up this geometry collection.\n     * @return {Array<Geometry>} Geometries.\n     * @api\n     */\n    GeometryCollection.prototype.getGeometries = function () {\n        return cloneGeometries(this.geometries_);\n    };\n    /**\n     * @return {Array<Geometry>} Geometries.\n     */\n    GeometryCollection.prototype.getGeometriesArray = function () {\n        return this.geometries_;\n    };\n    /**\n     * @inheritDoc\n     */\n    GeometryCollection.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        if (this.simplifiedGeometryRevision !== this.getRevision()) {\n            this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n            this.simplifiedGeometryRevision = this.getRevision();\n        }\n        if (squaredTolerance < 0 ||\n            (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n                squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)) {\n            return this;\n        }\n        var simplifiedGeometries = [];\n        var geometries = this.geometries_;\n        var simplified = false;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            var geometry = geometries[i];\n            var simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n            simplifiedGeometries.push(simplifiedGeometry);\n            if (simplifiedGeometry !== geometry) {\n                simplified = true;\n            }\n        }\n        if (simplified) {\n            var simplifiedGeometryCollection = new GeometryCollection(null);\n            simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n            return simplifiedGeometryCollection;\n        }\n        else {\n            this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n            return this;\n        }\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    GeometryCollection.prototype.getType = function () {\n        return GeometryType.GEOMETRY_COLLECTION;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    GeometryCollection.prototype.intersectsExtent = function (extent) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            if (geometries[i].intersectsExtent(extent)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    GeometryCollection.prototype.isEmpty = function () {\n        return this.geometries_.length === 0;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    GeometryCollection.prototype.rotate = function (angle, anchor) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            geometries[i].rotate(angle, anchor);\n        }\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    GeometryCollection.prototype.scale = function (sx, opt_sy, opt_anchor) {\n        var anchor = opt_anchor;\n        if (!anchor) {\n            anchor = getCenter(this.getExtent());\n        }\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            geometries[i].scale(sx, opt_sy, anchor);\n        }\n        this.changed();\n    };\n    /**\n     * Set the geometries that make up this geometry collection.\n     * @param {Array<Geometry>} geometries Geometries.\n     * @api\n     */\n    GeometryCollection.prototype.setGeometries = function (geometries) {\n        this.setGeometriesArray(cloneGeometries(geometries));\n    };\n    /**\n     * @param {Array<Geometry>} geometries Geometries.\n     */\n    GeometryCollection.prototype.setGeometriesArray = function (geometries) {\n        this.unlistenGeometriesChange_();\n        this.geometries_ = geometries;\n        this.listenGeometriesChange_();\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    GeometryCollection.prototype.applyTransform = function (transformFn) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            geometries[i].applyTransform(transformFn);\n        }\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    GeometryCollection.prototype.translate = function (deltaX, deltaY) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            geometries[i].translate(deltaX, deltaY);\n        }\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     */\n    GeometryCollection.prototype.disposeInternal = function () {\n        this.unlistenGeometriesChange_();\n        _super.prototype.disposeInternal.call(this);\n    };\n    return GeometryCollection;\n}(Geometry));\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n    var clonedGeometries = [];\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n        clonedGeometries.push(geometries[i].clone());\n    }\n    return clonedGeometries;\n}\nexport default GeometryCollection;\n//# sourceMappingURL=GeometryCollection.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/MultiLineString\n */\nimport { extend } from '../array.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { assignClosestArrayPoint, arrayMaxSquaredDelta } from './flat/closest.js';\nimport { deflateCoordinatesArray } from './flat/deflate.js';\nimport { inflateCoordinatesArray } from './flat/inflate.js';\nimport { interpolatePoint, lineStringsCoordinateAtM } from './flat/interpolate.js';\nimport { intersectsLineStringArray } from './flat/intersectsextent.js';\nimport { douglasPeuckerArray } from './flat/simplify.js';\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nvar MultiLineString = /** @class */ (function (_super) {\n    __extends(MultiLineString, _super);\n    /**\n     * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n     *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n     *     combination with `opt_layout` and `opt_ends` are also accepted.)\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @param {Array<number>=} opt_ends Flat coordinate ends for internal use.\n     */\n    function MultiLineString(coordinates, opt_layout, opt_ends) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        _this.ends_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        if (Array.isArray(coordinates[0])) {\n            _this.setCoordinates(/** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n        }\n        else if (opt_layout !== undefined && opt_ends) {\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n            _this.ends_ = opt_ends;\n        }\n        else {\n            var layout = _this.getLayout();\n            var lineStrings = /** @type {Array<LineString>} */ (coordinates);\n            var flatCoordinates = [];\n            var ends = [];\n            for (var i = 0, ii = lineStrings.length; i < ii; ++i) {\n                var lineString = lineStrings[i];\n                if (i === 0) {\n                    layout = lineString.getLayout();\n                }\n                extend(flatCoordinates, lineString.getFlatCoordinates());\n                ends.push(flatCoordinates.length);\n            }\n            _this.setFlatCoordinates(layout, flatCoordinates);\n            _this.ends_ = ends;\n        }\n        return _this;\n    }\n    /**\n     * Append the passed linestring to the multilinestring.\n     * @param {LineString} lineString LineString.\n     * @api\n     */\n    MultiLineString.prototype.appendLineString = function (lineString) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = lineString.getFlatCoordinates().slice();\n        }\n        else {\n            extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n        }\n        this.ends_.push(this.flatCoordinates.length);\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!MultiLineString} Clone.\n     * @override\n     * @api\n     */\n    MultiLineString.prototype.clone = function () {\n        return new MultiLineString(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n    };\n    /**\n     * @inheritDoc\n     */\n    MultiLineString.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(this.flatCoordinates, 0, this.ends_, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestArrayPoint(this.flatCoordinates, 0, this.ends_, this.stride, this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * Returns the coordinate at `m` using linear interpolation, or `null` if no\n     * such coordinate exists.\n     *\n     * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n     * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n     * M will return the first coordinate and Ms greater than the last M will\n     * return the last coordinate.\n     *\n     * `opt_interpolate` controls interpolation between consecutive LineStrings\n     * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n     * will be linearly interpolated between the last coordinate of one LineString\n     * and the first coordinate of the next LineString.  If `opt_interpolate` is\n     * `false` then the function will return `null` for Ms falling between\n     * LineStrings.\n     *\n     * @param {number} m M.\n     * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n     * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n     * @api\n     */\n    MultiLineString.prototype.getCoordinateAtM = function (m, opt_extrapolate, opt_interpolate) {\n        if ((this.layout != GeometryLayout.XYM &&\n            this.layout != GeometryLayout.XYZM) ||\n            this.flatCoordinates.length === 0) {\n            return null;\n        }\n        var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n        var interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n        return lineStringsCoordinateAtM(this.flatCoordinates, 0, this.ends_, this.stride, m, extrapolate, interpolate);\n    };\n    /**\n     * Return the coordinates of the multilinestring.\n     * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n     * @override\n     * @api\n     */\n    MultiLineString.prototype.getCoordinates = function () {\n        return inflateCoordinatesArray(this.flatCoordinates, 0, this.ends_, this.stride);\n    };\n    /**\n     * @return {Array<number>} Ends.\n     */\n    MultiLineString.prototype.getEnds = function () {\n        return this.ends_;\n    };\n    /**\n     * Return the linestring at the specified index.\n     * @param {number} index Index.\n     * @return {LineString} LineString.\n     * @api\n     */\n    MultiLineString.prototype.getLineString = function (index) {\n        if (index < 0 || this.ends_.length <= index) {\n            return null;\n        }\n        return new LineString(this.flatCoordinates.slice(index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n    };\n    /**\n     * Return the linestrings of this multilinestring.\n     * @return {Array<LineString>} LineStrings.\n     * @api\n     */\n    MultiLineString.prototype.getLineStrings = function () {\n        var flatCoordinates = this.flatCoordinates;\n        var ends = this.ends_;\n        var layout = this.layout;\n        /** @type {Array<LineString>} */\n        var lineStrings = [];\n        var offset = 0;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var lineString = new LineString(flatCoordinates.slice(offset, end), layout);\n            lineStrings.push(lineString);\n            offset = end;\n        }\n        return lineStrings;\n    };\n    /**\n     * @return {Array<number>} Flat midpoints.\n     */\n    MultiLineString.prototype.getFlatMidpoints = function () {\n        var midpoints = [];\n        var flatCoordinates = this.flatCoordinates;\n        var offset = 0;\n        var ends = this.ends_;\n        var stride = this.stride;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var midpoint = interpolatePoint(flatCoordinates, offset, end, stride, 0.5);\n            extend(midpoints, midpoint);\n            offset = end;\n        }\n        return midpoints;\n    };\n    /**\n     * @inheritDoc\n     */\n    MultiLineString.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        var simplifiedEnds = [];\n        simplifiedFlatCoordinates.length = douglasPeuckerArray(this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0, simplifiedEnds);\n        return new MultiLineString(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    MultiLineString.prototype.getType = function () {\n        return GeometryType.MULTI_LINE_STRING;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    MultiLineString.prototype.intersectsExtent = function (extent) {\n        return intersectsLineStringArray(this.flatCoordinates, 0, this.ends_, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the multilinestring.\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @override\n     * @api\n     */\n    MultiLineString.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 2);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        var ends = deflateCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n        this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n        this.changed();\n    };\n    return MultiLineString;\n}(SimpleGeometry));\nexport default MultiLineString;\n//# sourceMappingURL=MultiLineString.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/MultiPoint\n */\nimport { extend } from '../array.js';\nimport { closestSquaredDistanceXY, containsXY } from '../extent.js';\nimport GeometryType from './GeometryType.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { deflateCoordinates } from './flat/deflate.js';\nimport { inflateCoordinates } from './flat/inflate.js';\nimport { squaredDistance as squaredDx } from '../math.js';\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nvar MultiPoint = /** @class */ (function (_super) {\n    __extends(MultiPoint, _super);\n    /**\n     * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    function MultiPoint(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        if (opt_layout && !Array.isArray(coordinates[0])) {\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n        }\n        else {\n            _this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed point to this multipoint.\n     * @param {Point} point Point.\n     * @api\n     */\n    MultiPoint.prototype.appendPoint = function (point) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = point.getFlatCoordinates().slice();\n        }\n        else {\n            extend(this.flatCoordinates, point.getFlatCoordinates());\n        }\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!MultiPoint} Clone.\n     * @override\n     * @api\n     */\n    MultiPoint.prototype.clone = function () {\n        var multiPoint = new MultiPoint(this.flatCoordinates.slice(), this.layout);\n        return multiPoint;\n    };\n    /**\n     * @inheritDoc\n     */\n    MultiPoint.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        var flatCoordinates = this.flatCoordinates;\n        var stride = this.stride;\n        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n            var squaredDistance = squaredDx(x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n            if (squaredDistance < minSquaredDistance) {\n                minSquaredDistance = squaredDistance;\n                for (var j = 0; j < stride; ++j) {\n                    closestPoint[j] = flatCoordinates[i + j];\n                }\n                closestPoint.length = stride;\n            }\n        }\n        return minSquaredDistance;\n    };\n    /**\n     * Return the coordinates of the multipoint.\n     * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n     * @override\n     * @api\n     */\n    MultiPoint.prototype.getCoordinates = function () {\n        return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * Return the point at the specified index.\n     * @param {number} index Index.\n     * @return {Point} Point.\n     * @api\n     */\n    MultiPoint.prototype.getPoint = function (index) {\n        var n = !this.flatCoordinates ? 0 : this.flatCoordinates.length / this.stride;\n        if (index < 0 || n <= index) {\n            return null;\n        }\n        return new Point(this.flatCoordinates.slice(index * this.stride, (index + 1) * this.stride), this.layout);\n    };\n    /**\n     * Return the points of this multipoint.\n     * @return {Array<Point>} Points.\n     * @api\n     */\n    MultiPoint.prototype.getPoints = function () {\n        var flatCoordinates = this.flatCoordinates;\n        var layout = this.layout;\n        var stride = this.stride;\n        /** @type {Array<Point>} */\n        var points = [];\n        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n            var point = new Point(flatCoordinates.slice(i, i + stride), layout);\n            points.push(point);\n        }\n        return points;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    MultiPoint.prototype.getType = function () {\n        return GeometryType.MULTI_POINT;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    MultiPoint.prototype.intersectsExtent = function (extent) {\n        var flatCoordinates = this.flatCoordinates;\n        var stride = this.stride;\n        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n            var x = flatCoordinates[i];\n            var y = flatCoordinates[i + 1];\n            if (containsXY(extent, x, y)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * Set the coordinates of the multipoint.\n     * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @override\n     * @api\n     */\n    MultiPoint.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 1);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return MultiPoint;\n}(SimpleGeometry));\nexport default MultiPoint;\n//# sourceMappingURL=MultiPoint.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/MultiPolygon\n */\nimport { extend } from '../array.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { linearRingss as linearRingssArea } from './flat/area.js';\nimport { linearRingss as linearRingssCenter } from './flat/center.js';\nimport { assignClosestMultiArrayPoint, multiArrayMaxSquaredDelta } from './flat/closest.js';\nimport { linearRingssContainsXY } from './flat/contains.js';\nimport { deflateMultiCoordinatesArray } from './flat/deflate.js';\nimport { inflateMultiCoordinatesArray } from './flat/inflate.js';\nimport { getInteriorPointsOfMultiArray } from './flat/interiorpoint.js';\nimport { intersectsLinearRingMultiArray } from './flat/intersectsextent.js';\nimport { linearRingssAreOriented, orientLinearRingsArray } from './flat/orient.js';\nimport { quantizeMultiArray } from './flat/simplify.js';\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nvar MultiPolygon = /** @class */ (function (_super) {\n    __extends(MultiPolygon, _super);\n    /**\n     * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` and `opt_endss` are also accepted.\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @param {Array<Array<number>>=} opt_endss Array of ends for internal use with flat coordinates.\n     */\n    function MultiPolygon(coordinates, opt_layout, opt_endss) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Array<Array<number>>}\n         * @private\n         */\n        _this.endss_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.flatInteriorPointsRevision_ = -1;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.flatInteriorPoints_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.orientedRevision_ = -1;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.orientedFlatCoordinates_ = null;\n        if (!opt_endss && !Array.isArray(coordinates[0])) {\n            var layout = _this.getLayout();\n            var polygons = /** @type {Array<Polygon>} */ (coordinates);\n            var flatCoordinates = [];\n            var endss = [];\n            for (var i = 0, ii = polygons.length; i < ii; ++i) {\n                var polygon = polygons[i];\n                if (i === 0) {\n                    layout = polygon.getLayout();\n                }\n                var offset = flatCoordinates.length;\n                var ends = polygon.getEnds();\n                for (var j = 0, jj = ends.length; j < jj; ++j) {\n                    ends[j] += offset;\n                }\n                extend(flatCoordinates, polygon.getFlatCoordinates());\n                endss.push(ends);\n            }\n            opt_layout = layout;\n            coordinates = flatCoordinates;\n            opt_endss = endss;\n        }\n        if (opt_layout !== undefined && opt_endss) {\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n            _this.endss_ = opt_endss;\n        }\n        else {\n            _this.setCoordinates(/** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed polygon to this multipolygon.\n     * @param {Polygon} polygon Polygon.\n     * @api\n     */\n    MultiPolygon.prototype.appendPolygon = function (polygon) {\n        /** @type {Array<number>} */\n        var ends;\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = polygon.getFlatCoordinates().slice();\n            ends = polygon.getEnds().slice();\n            this.endss_.push();\n        }\n        else {\n            var offset = this.flatCoordinates.length;\n            extend(this.flatCoordinates, polygon.getFlatCoordinates());\n            ends = polygon.getEnds().slice();\n            for (var i = 0, ii = ends.length; i < ii; ++i) {\n                ends[i] += offset;\n            }\n        }\n        this.endss_.push(ends);\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!MultiPolygon} Clone.\n     * @override\n     * @api\n     */\n    MultiPolygon.prototype.clone = function () {\n        var len = this.endss_.length;\n        var newEndss = new Array(len);\n        for (var i = 0; i < len; ++i) {\n            newEndss[i] = this.endss_[i].slice();\n        }\n        return new MultiPolygon(this.flatCoordinates.slice(), this.layout, newEndss);\n    };\n    /**\n     * @inheritDoc\n     */\n    MultiPolygon.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(multiArrayMaxSquaredDelta(this.flatCoordinates, 0, this.endss_, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestMultiArrayPoint(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * @inheritDoc\n     */\n    MultiPolygon.prototype.containsXY = function (x, y) {\n        return linearRingssContainsXY(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n    };\n    /**\n     * Return the area of the multipolygon on projected plane.\n     * @return {number} Area (on projected plane).\n     * @api\n     */\n    MultiPolygon.prototype.getArea = function () {\n        return linearRingssArea(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n    };\n    /**\n     * Get the coordinate array for this geometry.  This array has the structure\n     * of a GeoJSON coordinate array for multi-polygons.\n     *\n     * @param {boolean=} opt_right Orient coordinates according to the right-hand\n     *     rule (counter-clockwise for exterior and clockwise for interior rings).\n     *     If `false`, coordinates will be oriented according to the left-hand rule\n     *     (clockwise for exterior and counter-clockwise for interior rings).\n     *     By default, coordinate orientation will depend on how the geometry was\n     *     constructed.\n     * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n     * @override\n     * @api\n     */\n    MultiPolygon.prototype.getCoordinates = function (opt_right) {\n        var flatCoordinates;\n        if (opt_right !== undefined) {\n            flatCoordinates = this.getOrientedFlatCoordinates().slice();\n            orientLinearRingsArray(flatCoordinates, 0, this.endss_, this.stride, opt_right);\n        }\n        else {\n            flatCoordinates = this.flatCoordinates;\n        }\n        return inflateMultiCoordinatesArray(flatCoordinates, 0, this.endss_, this.stride);\n    };\n    /**\n     * @return {Array<Array<number>>} Endss.\n     */\n    MultiPolygon.prototype.getEndss = function () {\n        return this.endss_;\n    };\n    /**\n     * @return {Array<number>} Flat interior points.\n     */\n    MultiPolygon.prototype.getFlatInteriorPoints = function () {\n        if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n            var flatCenters = linearRingssCenter(this.flatCoordinates, 0, this.endss_, this.stride);\n            this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, flatCenters);\n            this.flatInteriorPointsRevision_ = this.getRevision();\n        }\n        return this.flatInteriorPoints_;\n    };\n    /**\n     * Return the interior points as {@link module:ol/geom/MultiPoint multipoint}.\n     * @return {MultiPoint} Interior points as XYM coordinates, where M is\n     * the length of the horizontal intersection that the point belongs to.\n     * @api\n     */\n    MultiPolygon.prototype.getInteriorPoints = function () {\n        return new MultiPoint(this.getFlatInteriorPoints().slice(), GeometryLayout.XYM);\n    };\n    /**\n     * @return {Array<number>} Oriented flat coordinates.\n     */\n    MultiPolygon.prototype.getOrientedFlatCoordinates = function () {\n        if (this.orientedRevision_ != this.getRevision()) {\n            var flatCoordinates = this.flatCoordinates;\n            if (linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)) {\n                this.orientedFlatCoordinates_ = flatCoordinates;\n            }\n            else {\n                this.orientedFlatCoordinates_ = flatCoordinates.slice();\n                this.orientedFlatCoordinates_.length =\n                    orientLinearRingsArray(this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n            }\n            this.orientedRevision_ = this.getRevision();\n        }\n        return this.orientedFlatCoordinates_;\n    };\n    /**\n     * @inheritDoc\n     */\n    MultiPolygon.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        var simplifiedEndss = [];\n        simplifiedFlatCoordinates.length = quantizeMultiArray(this.flatCoordinates, 0, this.endss_, this.stride, Math.sqrt(squaredTolerance), simplifiedFlatCoordinates, 0, simplifiedEndss);\n        return new MultiPolygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEndss);\n    };\n    /**\n     * Return the polygon at the specified index.\n     * @param {number} index Index.\n     * @return {Polygon} Polygon.\n     * @api\n     */\n    MultiPolygon.prototype.getPolygon = function (index) {\n        if (index < 0 || this.endss_.length <= index) {\n            return null;\n        }\n        var offset;\n        if (index === 0) {\n            offset = 0;\n        }\n        else {\n            var prevEnds = this.endss_[index - 1];\n            offset = prevEnds[prevEnds.length - 1];\n        }\n        var ends = this.endss_[index].slice();\n        var end = ends[ends.length - 1];\n        if (offset !== 0) {\n            for (var i = 0, ii = ends.length; i < ii; ++i) {\n                ends[i] -= offset;\n            }\n        }\n        return new Polygon(this.flatCoordinates.slice(offset, end), this.layout, ends);\n    };\n    /**\n     * Return the polygons of this multipolygon.\n     * @return {Array<Polygon>} Polygons.\n     * @api\n     */\n    MultiPolygon.prototype.getPolygons = function () {\n        var layout = this.layout;\n        var flatCoordinates = this.flatCoordinates;\n        var endss = this.endss_;\n        var polygons = [];\n        var offset = 0;\n        for (var i = 0, ii = endss.length; i < ii; ++i) {\n            var ends = endss[i].slice();\n            var end = ends[ends.length - 1];\n            if (offset !== 0) {\n                for (var j = 0, jj = ends.length; j < jj; ++j) {\n                    ends[j] -= offset;\n                }\n            }\n            var polygon = new Polygon(flatCoordinates.slice(offset, end), layout, ends);\n            polygons.push(polygon);\n            offset = end;\n        }\n        return polygons;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    MultiPolygon.prototype.getType = function () {\n        return GeometryType.MULTI_POLYGON;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    MultiPolygon.prototype.intersectsExtent = function (extent) {\n        return intersectsLinearRingMultiArray(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the multipolygon.\n     * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @override\n     * @api\n     */\n    MultiPolygon.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 3);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        var endss = deflateMultiCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n        if (endss.length === 0) {\n            this.flatCoordinates.length = 0;\n        }\n        else {\n            var lastEnds = endss[endss.length - 1];\n            this.flatCoordinates.length = lastEnds.length === 0 ?\n                0 : lastEnds[lastEnds.length - 1];\n        }\n        this.changed();\n    };\n    return MultiPolygon;\n}(SimpleGeometry));\nexport default MultiPolygon;\n//# sourceMappingURL=MultiPolygon.js.map","/**\n * @module ol/geom/flat/center\n */\nimport { createEmpty, createOrUpdateFromFlatCoordinates } from '../../extent.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n    var flatCenters = [];\n    var extent = createEmpty();\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        extent = createOrUpdateFromFlatCoordinates(flatCoordinates, offset, ends[0], stride);\n        flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n        offset = ends[ends.length - 1];\n    }\n    return flatCenters;\n}\n//# sourceMappingURL=center.js.map","/**\n * @module ol/format/GeoJSON\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { assert } from '../asserts.js';\nimport Feature from '../Feature.js';\nimport { transformGeometryWithOptions } from './Feature.js';\nimport JSONFeature from './JSONFeature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport { assign, isEmpty } from '../obj.js';\nimport { get as getProjection } from '../proj.js';\nimport GeometryType from '../geom/GeometryType.js';\n/**\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n */\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n  * @api\n */\nvar GeoJSON = /** @class */ (function (_super) {\n    __extends(GeoJSON, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function GeoJSON(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this) || this;\n        /**\n         * @inheritDoc\n         */\n        _this.dataProjection = getProjection(options.dataProjection ?\n            options.dataProjection : 'EPSG:4326');\n        if (options.featureProjection) {\n            _this.defaultFeatureProjection = getProjection(options.featureProjection);\n        }\n        /**\n         * Name of the geometry attribute for features.\n         * @type {string|undefined}\n         * @private\n         */\n        _this.geometryName_ = options.geometryName;\n        /**\n         * Look for the geometry name in the feature GeoJSON\n         * @type {boolean|undefined}\n         * @private\n         */\n        _this.extractGeometryName_ = options.extractGeometryName;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    GeoJSON.prototype.readFeatureFromObject = function (object, opt_options) {\n        /**\n         * @type {GeoJSONFeature}\n         */\n        var geoJSONFeature = null;\n        if (object['type'] === 'Feature') {\n            geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n        }\n        else {\n            geoJSONFeature = {\n                'type': 'Feature',\n                'geometry': /** @type {GeoJSONGeometry} */ (object),\n                'properties': null\n            };\n        }\n        var geometry = readGeometry(geoJSONFeature['geometry'], opt_options);\n        var feature = new Feature();\n        if (this.geometryName_) {\n            feature.setGeometryName(this.geometryName_);\n        }\n        else if (this.extractGeometryName_ && 'geometry_name' in geoJSONFeature !== undefined) {\n            feature.setGeometryName(geoJSONFeature['geometry_name']);\n        }\n        feature.setGeometry(geometry);\n        if ('id' in geoJSONFeature) {\n            feature.setId(geoJSONFeature['id']);\n        }\n        if (geoJSONFeature['properties']) {\n            feature.setProperties(geoJSONFeature['properties'], true);\n        }\n        return feature;\n    };\n    /**\n     * @inheritDoc\n     */\n    GeoJSON.prototype.readFeaturesFromObject = function (object, opt_options) {\n        var geoJSONObject = /** @type {GeoJSONObject} */ (object);\n        /** @type {Array<import(\"../Feature.js\").default>} */\n        var features = null;\n        if (geoJSONObject['type'] === 'FeatureCollection') {\n            var geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (object);\n            features = [];\n            var geoJSONFeatures = geoJSONFeatureCollection['features'];\n            for (var i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n                features.push(this.readFeatureFromObject(geoJSONFeatures[i], opt_options));\n            }\n        }\n        else {\n            features = [this.readFeatureFromObject(object, opt_options)];\n        }\n        return features;\n    };\n    /**\n     * @inheritDoc\n     */\n    GeoJSON.prototype.readGeometryFromObject = function (object, opt_options) {\n        return readGeometry(/** @type {GeoJSONGeometry} */ (object), opt_options);\n    };\n    /**\n     * @inheritDoc\n     */\n    GeoJSON.prototype.readProjectionFromObject = function (object) {\n        var crs = object['crs'];\n        var projection;\n        if (crs) {\n            if (crs['type'] == 'name') {\n                projection = getProjection(crs['properties']['name']);\n            }\n            else {\n                assert(false, 36); // Unknown SRS type\n            }\n        }\n        else {\n            projection = this.dataProjection;\n        }\n        return (\n        /** @type {import(\"../proj/Projection.js\").default} */ (projection));\n    };\n    /**\n     * Encode a feature as a GeoJSON Feature object.\n     *\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {GeoJSONFeature} Object.\n     * @override\n     * @api\n     */\n    GeoJSON.prototype.writeFeatureObject = function (feature, opt_options) {\n        opt_options = this.adaptOptions(opt_options);\n        /** @type {GeoJSONFeature} */\n        var object = {\n            'type': 'Feature',\n            geometry: null,\n            properties: null\n        };\n        var id = feature.getId();\n        if (id !== undefined) {\n            object.id = id;\n        }\n        var geometry = feature.getGeometry();\n        if (geometry) {\n            object.geometry = writeGeometry(geometry, opt_options);\n        }\n        var properties = feature.getProperties();\n        delete properties[feature.getGeometryName()];\n        if (!isEmpty(properties)) {\n            object.properties = properties;\n        }\n        return object;\n    };\n    /**\n     * Encode an array of features as a GeoJSON object.\n     *\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {GeoJSONFeatureCollection} GeoJSON Object.\n     * @override\n     * @api\n     */\n    GeoJSON.prototype.writeFeaturesObject = function (features, opt_options) {\n        opt_options = this.adaptOptions(opt_options);\n        var objects = [];\n        for (var i = 0, ii = features.length; i < ii; ++i) {\n            objects.push(this.writeFeatureObject(features[i], opt_options));\n        }\n        return {\n            type: 'FeatureCollection',\n            features: objects\n        };\n    };\n    /**\n     * Encode a geometry as a GeoJSON object.\n     *\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n     * @override\n     * @api\n     */\n    GeoJSON.prototype.writeGeometryObject = function (geometry, opt_options) {\n        return writeGeometry(geometry, this.adaptOptions(opt_options));\n    };\n    return GeoJSON;\n}(JSONFeature));\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, opt_options) {\n    if (!object) {\n        return null;\n    }\n    /**\n     * @type {import(\"../geom/Geometry.js\").default}\n     */\n    var geometry;\n    switch (object['type']) {\n        case GeometryType.POINT: {\n            geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\n            break;\n        }\n        case GeometryType.LINE_STRING: {\n            geometry = readLineStringGeometry(/** @type {GeoJSONLineString} */ (object));\n            break;\n        }\n        case GeometryType.POLYGON: {\n            geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\n            break;\n        }\n        case GeometryType.MULTI_POINT: {\n            geometry = readMultiPointGeometry(/** @type {GeoJSONMultiPoint} */ (object));\n            break;\n        }\n        case GeometryType.MULTI_LINE_STRING: {\n            geometry = readMultiLineStringGeometry(/** @type {GeoJSONMultiLineString} */ (object));\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            geometry = readMultiPolygonGeometry(/** @type {GeoJSONMultiPolygon} */ (object));\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            geometry = readGeometryCollectionGeometry(/** @type {GeoJSONGeometryCollection} */ (object));\n            break;\n        }\n        default: {\n            throw new Error('Unsupported GeoJSON type: ' + object.type);\n        }\n    }\n    return transformGeometryWithOptions(geometry, false, opt_options);\n}\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n * @return {GeometryCollection} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, opt_options) {\n    var geometries = object['geometries'].map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     */\n    function (geometry) {\n        return readGeometry(geometry, opt_options);\n    });\n    return new GeometryCollection(geometries);\n}\n/**\n * @param {GeoJSONPoint} object Object.\n * @return {Point} Point.\n */\nfunction readPointGeometry(object) {\n    return new Point(object['coordinates']);\n}\n/**\n * @param {GeoJSONLineString} object Object.\n * @return {LineString} LineString.\n */\nfunction readLineStringGeometry(object) {\n    return new LineString(object['coordinates']);\n}\n/**\n * @param {GeoJSONMultiLineString} object Object.\n * @return {MultiLineString} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n    return new MultiLineString(object['coordinates']);\n}\n/**\n * @param {GeoJSONMultiPoint} object Object.\n * @return {MultiPoint} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n    return new MultiPoint(object['coordinates']);\n}\n/**\n * @param {GeoJSONMultiPolygon} object Object.\n * @return {MultiPolygon} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n    return new MultiPolygon(object['coordinates']);\n}\n/**\n * @param {GeoJSONPolygon} object Object.\n * @return {Polygon} Polygon.\n */\nfunction readPolygonGeometry(object) {\n    return new Polygon(object['coordinates']);\n}\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, opt_options) {\n    geometry = transformGeometryWithOptions(geometry, true, opt_options);\n    var type = geometry.getType();\n    /** @type {GeoJSONGeometry} */\n    var geoJSON;\n    switch (type) {\n        case GeometryType.POINT: {\n            geoJSON = writePointGeometry(/** @type {Point} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.LINE_STRING: {\n            geoJSON = writeLineStringGeometry(/** @type {LineString} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.POLYGON: {\n            geoJSON = writePolygonGeometry(/** @type {Polygon} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.MULTI_POINT: {\n            geoJSON = writeMultiPointGeometry(/** @type {MultiPoint} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.MULTI_LINE_STRING: {\n            geoJSON = writeMultiLineStringGeometry(/** @type {MultiLineString} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            geoJSON = writeMultiPolygonGeometry(/** @type {MultiPolygon} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            geoJSON = writeGeometryCollectionGeometry(/** @type {GeometryCollection} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.CIRCLE: {\n            geoJSON = {\n                type: 'GeometryCollection',\n                geometries: []\n            };\n            break;\n        }\n        default: {\n            throw new Error('Unsupported geometry type: ' + type);\n        }\n    }\n    return geoJSON;\n}\n/**\n * @param {GeometryCollection} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, opt_options) {\n    var geometries = geometry.getGeometriesArray().map(function (geometry) {\n        var options = assign({}, opt_options);\n        delete options.featureProjection;\n        return writeGeometry(geometry, options);\n    });\n    return {\n        type: 'GeometryCollection',\n        geometries: geometries\n    };\n}\n/**\n * @param {LineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, opt_options) {\n    return {\n        type: 'LineString',\n        coordinates: geometry.getCoordinates()\n    };\n}\n/**\n * @param {MultiLineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, opt_options) {\n    return {\n        type: 'MultiLineString',\n        coordinates: geometry.getCoordinates()\n    };\n}\n/**\n * @param {MultiPoint} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, opt_options) {\n    return {\n        type: 'MultiPoint',\n        coordinates: geometry.getCoordinates()\n    };\n}\n/**\n * @param {MultiPolygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, opt_options) {\n    var right;\n    if (opt_options) {\n        right = opt_options.rightHanded;\n    }\n    return {\n        type: 'MultiPolygon',\n        coordinates: geometry.getCoordinates(right)\n    };\n}\n/**\n * @param {Point} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, opt_options) {\n    return {\n        type: 'Point',\n        coordinates: geometry.getCoordinates()\n    };\n}\n/**\n * @param {Polygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, opt_options) {\n    var right;\n    if (opt_options) {\n        right = opt_options.rightHanded;\n    }\n    return {\n        type: 'Polygon',\n        coordinates: geometry.getCoordinates(right)\n    };\n}\nexport default GeoJSON;\n//# sourceMappingURL=GeoJSON.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Circle\n */\nimport { createOrUpdate, forEachCorner, intersects } from '../extent.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { deflateCoordinate } from './flat/deflate.js';\nimport { rotate, translate } from './flat/transform.js';\n/**\n * @classdesc\n * Circle geometry.\n *\n * @api\n */\nvar Circle = /** @class */ (function (_super) {\n    __extends(Circle, _super);\n    /**\n     * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n     *     For internal use, flat coordinates in combination with `opt_layout` and no\n     *     `opt_radius` are also accepted.\n     * @param {number=} opt_radius Radius.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    function Circle(center, opt_radius, opt_layout) {\n        var _this = _super.call(this) || this;\n        if (opt_layout !== undefined && opt_radius === undefined) {\n            _this.setFlatCoordinates(opt_layout, center);\n        }\n        else {\n            var radius = opt_radius ? opt_radius : 0;\n            _this.setCenterAndRadius(center, radius, opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!Circle} Clone.\n     * @override\n     * @api\n     */\n    Circle.prototype.clone = function () {\n        return new Circle(this.flatCoordinates.slice(), undefined, this.layout);\n    };\n    /**\n     * @inheritDoc\n     */\n    Circle.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        var flatCoordinates = this.flatCoordinates;\n        var dx = x - flatCoordinates[0];\n        var dy = y - flatCoordinates[1];\n        var squaredDistance = dx * dx + dy * dy;\n        if (squaredDistance < minSquaredDistance) {\n            if (squaredDistance === 0) {\n                for (var i = 0; i < this.stride; ++i) {\n                    closestPoint[i] = flatCoordinates[i];\n                }\n            }\n            else {\n                var delta = this.getRadius() / Math.sqrt(squaredDistance);\n                closestPoint[0] = flatCoordinates[0] + delta * dx;\n                closestPoint[1] = flatCoordinates[1] + delta * dy;\n                for (var i = 2; i < this.stride; ++i) {\n                    closestPoint[i] = flatCoordinates[i];\n                }\n            }\n            closestPoint.length = this.stride;\n            return squaredDistance;\n        }\n        else {\n            return minSquaredDistance;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Circle.prototype.containsXY = function (x, y) {\n        var flatCoordinates = this.flatCoordinates;\n        var dx = x - flatCoordinates[0];\n        var dy = y - flatCoordinates[1];\n        return dx * dx + dy * dy <= this.getRadiusSquared_();\n    };\n    /**\n     * Return the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n     * @return {import(\"../coordinate.js\").Coordinate} Center.\n     * @api\n     */\n    Circle.prototype.getCenter = function () {\n        return this.flatCoordinates.slice(0, this.stride);\n    };\n    /**\n     * @inheritDoc\n     */\n    Circle.prototype.computeExtent = function (extent) {\n        var flatCoordinates = this.flatCoordinates;\n        var radius = flatCoordinates[this.stride] - flatCoordinates[0];\n        return createOrUpdate(flatCoordinates[0] - radius, flatCoordinates[1] - radius, flatCoordinates[0] + radius, flatCoordinates[1] + radius, extent);\n    };\n    /**\n     * Return the radius of the circle.\n     * @return {number} Radius.\n     * @api\n     */\n    Circle.prototype.getRadius = function () {\n        return Math.sqrt(this.getRadiusSquared_());\n    };\n    /**\n     * @private\n     * @return {number} Radius squared.\n     */\n    Circle.prototype.getRadiusSquared_ = function () {\n        var dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n        var dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n        return dx * dx + dy * dy;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Circle.prototype.getType = function () {\n        return GeometryType.CIRCLE;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Circle.prototype.intersectsExtent = function (extent) {\n        var circleExtent = this.getExtent();\n        if (intersects(extent, circleExtent)) {\n            var center = this.getCenter();\n            if (extent[0] <= center[0] && extent[2] >= center[0]) {\n                return true;\n            }\n            if (extent[1] <= center[1] && extent[3] >= center[1]) {\n                return true;\n            }\n            return forEachCorner(extent, this.intersectsCoordinate.bind(this));\n        }\n        return false;\n    };\n    /**\n     * Set the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n     * @param {import(\"../coordinate.js\").Coordinate} center Center.\n     * @api\n     */\n    Circle.prototype.setCenter = function (center) {\n        var stride = this.stride;\n        var radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n        var flatCoordinates = center.slice();\n        flatCoordinates[stride] = flatCoordinates[0] + radius;\n        for (var i = 1; i < stride; ++i) {\n            flatCoordinates[stride + i] = center[i];\n        }\n        this.setFlatCoordinates(this.layout, flatCoordinates);\n        this.changed();\n    };\n    /**\n     * Set the center (as {@link module:ol/coordinate~Coordinate coordinate}) and the radius (as\n     * number) of the circle.\n     * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n     * @param {number} radius Radius.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @api\n     */\n    Circle.prototype.setCenterAndRadius = function (center, radius, opt_layout) {\n        this.setLayout(opt_layout, center, 0);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        /** @type {Array<number>} */\n        var flatCoordinates = this.flatCoordinates;\n        var offset = deflateCoordinate(flatCoordinates, 0, center, this.stride);\n        flatCoordinates[offset++] = flatCoordinates[0] + radius;\n        for (var i = 1, ii = this.stride; i < ii; ++i) {\n            flatCoordinates[offset++] = flatCoordinates[i];\n        }\n        flatCoordinates.length = offset;\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     */\n    Circle.prototype.getCoordinates = function () {\n        return null;\n    };\n    /**\n     * @inheritDoc\n     */\n    Circle.prototype.setCoordinates = function (coordinates, opt_layout) { };\n    /**\n     * Set the radius of the circle. The radius is in the units of the projection.\n     * @param {number} radius Radius.\n     * @api\n     */\n    Circle.prototype.setRadius = function (radius) {\n        this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Circle.prototype.rotate = function (angle, anchor) {\n        var center = this.getCenter();\n        var stride = this.getStride();\n        this.setCenter(rotate(center, 0, center.length, stride, angle, anchor, center));\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Circle.prototype.translate = function (deltaX, deltaY) {\n        var center = this.getCenter();\n        var stride = this.getStride();\n        this.setCenter(translate(center, 0, center.length, stride, deltaX, deltaY, center));\n        this.changed();\n    };\n    return Circle;\n}(SimpleGeometry));\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @return {Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n//# sourceMappingURL=Circle.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Draw\n */\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport { getChangeEventType } from '../Object.js';\nimport { squaredDistance as squaredCoordinateDistance } from '../coordinate.js';\nimport Event from '../events/Event.js';\nimport { noModifierKeys, always, shiftKeyOnly } from '../events/condition.js';\nimport { boundingExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight } from '../extent.js';\nimport { TRUE, FALSE } from '../functions.js';\nimport Circle from '../geom/Circle.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon, { fromCircle, makeRegular } from '../geom/Polygon.js';\nimport PointerInteraction from './Pointer.js';\nimport InteractionProperty from './Property.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport { createEditingStyle } from '../style/Style.js';\n/**\n * @typedef {Object} Options\n * @property {GeometryType} type Geometry type of\n * the geometries being drawn with this instance.\n * @property {number} [clickTolerance=6] The maximum distance in pixels between\n * \"down\" and \"up\" for a \"up\" event to be considered a \"click\" event and\n * actually add a point/vertex to the geometry being drawn.  The default of `6`\n * was chosen for the draw interaction to behave correctly on mouse as well as\n * on touch devices.\n * @property {import(\"../Collection.js\").default<Feature>} [features]\n * Destination collection for the drawn features.\n * @property {VectorSource} [source] Destination source for\n * the drawn features.\n * @property {number} [dragVertexDelay=500] Delay in milliseconds after pointerdown\n * before the current vertex can be dragged to its exact position.\n * @property {number} [snapTolerance=12] Pixel distance for snapping to the\n * drawing finish.\n * @property {boolean} [stopClick=false] Stop click, singleclick, and\n * doubleclick events from firing during drawing.\n * @property {number} [maxPoints] The number of points that can be drawn before\n * a polygon ring or line string is finished. By default there is no\n * restriction.\n * @property {number} [minPoints] The number of points that must be drawn\n * before a polygon ring or line string can be finished. Default is `3` for\n * polygon rings and `2` for line strings.\n * @property {import(\"../events/condition.js\").Condition} [finishCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether the drawing can be finished.\n * @property {import(\"../style/Style.js\").StyleLike} [style]\n * Style for sketch features.\n * @property {GeometryFunction} [geometryFunction]\n * Function that is called when a geometry's coordinates are updated.\n * @property {string} [geometryName] Geometry name to use for features created\n * by the draw interaction.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default {@link module:ol/events/condition~noModifierKeys}, i.e. a click,\n * adds a vertex or deactivates freehand drawing.\n * @property {boolean} [freehand=false] Operate in freehand mode for lines,\n * polygons, and circles.  This makes the interaction always operate in freehand\n * mode and takes precedence over any `freehandCondition` option.\n * @property {import(\"../events/condition.js\").Condition} [freehandCondition]\n * Condition that activates freehand drawing for lines and polygons. This\n * function takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether that event should be handled. The\n * default is {@link module:ol/events/condition~shiftKeyOnly}, meaning that the\n * Shift key activates freehand drawing.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n */\n/**\n * Coordinate type when drawing points.\n * @typedef {import(\"../coordinate.js\").Coordinate} PointCoordType\n */\n/**\n * Coordinate type when drawing lines.\n * @typedef {Array<import(\"../coordinate.js\").Coordinate>} LineCoordType\n */\n/**\n * Coordinate type when drawing polygons.\n * @typedef {Array<Array<import(\"../coordinate.js\").Coordinate>>} PolyCoordType\n */\n/**\n * Types used for drawing coordinates.\n * @typedef {PointCoordType|LineCoordType|PolyCoordType} SketchCoordType\n */\n/**\n * Function that takes an array of coordinates and an optional existing geometry as\n * arguments, and returns a geometry. The optional existing geometry is the\n * geometry that is returned when the function is called without a second\n * argument.\n * @typedef {function(!SketchCoordType, import(\"../geom/SimpleGeometry.js\").default=):\n *     import(\"../geom/SimpleGeometry.js\").default} GeometryFunction\n */\n/**\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n * @enum {string}\n */\nvar Mode = {\n    POINT: 'Point',\n    LINE_STRING: 'LineString',\n    POLYGON: 'Polygon',\n    CIRCLE: 'Circle'\n};\n/**\n * @enum {string}\n */\nvar DrawEventType = {\n    /**\n     * Triggered upon feature draw start\n     * @event DrawEvent#drawstart\n     * @api\n     */\n    DRAWSTART: 'drawstart',\n    /**\n     * Triggered upon feature draw end\n     * @event DrawEvent#drawend\n     * @api\n     */\n    DRAWEND: 'drawend'\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Draw~Draw} instances are\n * instances of this type.\n */\nvar DrawEvent = /** @class */ (function (_super) {\n    __extends(DrawEvent, _super);\n    /**\n     * @param {DrawEventType} type Type.\n     * @param {Feature} feature The feature drawn.\n     */\n    function DrawEvent(type, feature) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The feature being drawn.\n         * @type {Feature}\n         * @api\n         */\n        _this.feature = feature;\n        return _this;\n    }\n    return DrawEvent;\n}(Event));\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @fires DrawEvent\n * @api\n */\nvar Draw = /** @class */ (function (_super) {\n    __extends(Draw, _super);\n    /**\n     * @param {Options} options Options.\n     */\n    function Draw(options) {\n        var _this = this;\n        var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n        if (!pointerOptions.stopDown) {\n            pointerOptions.stopDown = FALSE;\n        }\n        _this = _super.call(this, pointerOptions) || this;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.shouldHandle_ = false;\n        /**\n         * @type {import(\"../pixel.js\").Pixel}\n         * @private\n         */\n        _this.downPx_ = null;\n        /**\n         * @type {?}\n         * @private\n         */\n        _this.downTimeout_;\n        /**\n         * @type {number|undefined}\n         * @private\n         */\n        _this.lastDragTime_;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.freehand_ = false;\n        /**\n         * Target source for drawn features.\n         * @type {VectorSource}\n         * @private\n         */\n        _this.source_ = options.source ? options.source : null;\n        /**\n         * Target collection for drawn features.\n         * @type {import(\"../Collection.js\").default<Feature>}\n         * @private\n         */\n        _this.features_ = options.features ? options.features : null;\n        /**\n         * Pixel distance for snapping.\n         * @type {number}\n         * @private\n         */\n        _this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n        /**\n         * Geometry type.\n         * @type {GeometryType}\n         * @private\n         */\n        _this.type_ = /** @type {GeometryType} */ (options.type);\n        /**\n         * Drawing mode (derived from geometry type.\n         * @type {Mode}\n         * @private\n         */\n        _this.mode_ = getMode(_this.type_);\n        /**\n         * Stop click, singleclick, and doubleclick events from firing during drawing.\n         * Default is `false`.\n         * @type {boolean}\n         * @private\n         */\n        _this.stopClick_ = !!options.stopClick;\n        /**\n         * The number of points that must be drawn before a polygon ring or line\n         * string can be finished.  The default is 3 for polygon rings and 2 for\n         * line strings.\n         * @type {number}\n         * @private\n         */\n        _this.minPoints_ = options.minPoints ?\n            options.minPoints :\n            (_this.mode_ === Mode.POLYGON ? 3 : 2);\n        /**\n         * The number of points that can be drawn before a polygon ring or line string\n         * is finished. The default is no restriction.\n         * @type {number}\n         * @private\n         */\n        _this.maxPoints_ = options.maxPoints ? options.maxPoints : Infinity;\n        /**\n         * A function to decide if a potential finish coordinate is permissible\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.finishCondition_ = options.finishCondition ? options.finishCondition : TRUE;\n        var geometryFunction = options.geometryFunction;\n        if (!geometryFunction) {\n            if (_this.type_ === GeometryType.CIRCLE) {\n                /**\n                 * @param {!LineCoordType} coordinates The coordinates.\n                 * @param {import(\"../geom/SimpleGeometry.js\").default=} opt_geometry Optional geometry.\n                 * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n                 */\n                geometryFunction = function (coordinates, opt_geometry) {\n                    var circle = opt_geometry ? /** @type {Circle} */ (opt_geometry) :\n                        new Circle([NaN, NaN]);\n                    var squaredLength = squaredCoordinateDistance(coordinates[0], coordinates[1]);\n                    circle.setCenterAndRadius(coordinates[0], Math.sqrt(squaredLength));\n                    return circle;\n                };\n            }\n            else {\n                var Constructor_1;\n                var mode_1 = _this.mode_;\n                if (mode_1 === Mode.POINT) {\n                    Constructor_1 = Point;\n                }\n                else if (mode_1 === Mode.LINE_STRING) {\n                    Constructor_1 = LineString;\n                }\n                else if (mode_1 === Mode.POLYGON) {\n                    Constructor_1 = Polygon;\n                }\n                /**\n                 * @param {!LineCoordType} coordinates The coordinates.\n                 * @param {import(\"../geom/SimpleGeometry.js\").default=} opt_geometry Optional geometry.\n                 * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n                 */\n                geometryFunction = function (coordinates, opt_geometry) {\n                    var geometry = opt_geometry;\n                    if (geometry) {\n                        if (mode_1 === Mode.POLYGON) {\n                            if (coordinates[0].length) {\n                                // Add a closing coordinate to match the first\n                                geometry.setCoordinates([coordinates[0].concat([coordinates[0][0]])]);\n                            }\n                            else {\n                                geometry.setCoordinates([]);\n                            }\n                        }\n                        else {\n                            geometry.setCoordinates(coordinates);\n                        }\n                    }\n                    else {\n                        geometry = new Constructor_1(coordinates);\n                    }\n                    return geometry;\n                };\n            }\n        }\n        /**\n         * @type {GeometryFunction}\n         * @private\n         */\n        _this.geometryFunction_ = geometryFunction;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.dragVertexDelay_ = options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n        /**\n         * Finish coordinate for the feature (first point for polygons, last point for\n         * linestrings).\n         * @type {import(\"../coordinate.js\").Coordinate}\n         * @private\n         */\n        _this.finishCoordinate_ = null;\n        /**\n         * Sketch feature.\n         * @type {Feature}\n         * @private\n         */\n        _this.sketchFeature_ = null;\n        /**\n         * Sketch point.\n         * @type {Feature<Point>}\n         * @private\n         */\n        _this.sketchPoint_ = null;\n        /**\n         * Sketch coordinates. Used when drawing a line or polygon.\n         * @type {SketchCoordType}\n         * @private\n         */\n        _this.sketchCoords_ = null;\n        /**\n         * Sketch line. Used when drawing polygon.\n         * @type {Feature<LineString>}\n         * @private\n         */\n        _this.sketchLine_ = null;\n        /**\n         * Sketch line coordinates. Used when drawing a polygon or circle.\n         * @type {LineCoordType}\n         * @private\n         */\n        _this.sketchLineCoords_ = null;\n        /**\n         * Squared tolerance for handling up events.  If the squared distance\n         * between a down and up event is greater than this tolerance, up events\n         * will not be handled.\n         * @type {number}\n         * @private\n         */\n        _this.squaredClickTolerance_ = options.clickTolerance ?\n            options.clickTolerance * options.clickTolerance : 36;\n        /**\n         * Draw overlay where our sketch features are drawn.\n         * @type {VectorLayer}\n         * @private\n         */\n        _this.overlay_ = new VectorLayer({\n            source: new VectorSource({\n                useSpatialIndex: false,\n                wrapX: options.wrapX ? options.wrapX : false\n            }),\n            style: options.style ? options.style : getDefaultStyleFunction(),\n            updateWhileInteracting: true\n        });\n        /**\n         * Name of the geometry attribute for newly created features.\n         * @type {string|undefined}\n         * @private\n         */\n        _this.geometryName_ = options.geometryName;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : noModifierKeys;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.freehandCondition_;\n        if (options.freehand) {\n            _this.freehandCondition_ = always;\n        }\n        else {\n            _this.freehandCondition_ = options.freehandCondition ? options.freehandCondition : shiftKeyOnly;\n        }\n        _this.addEventListener(getChangeEventType(InteractionProperty.ACTIVE), _this.updateState_);\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    Draw.prototype.setMap = function (map) {\n        _super.prototype.setMap.call(this, map);\n        this.updateState_();\n    };\n    /**\n     * Get the overlay layer that this interaction renders sketch features to.\n     * @return {VectorLayer} Overlay layer.\n     * @api\n     */\n    Draw.prototype.getOverlay = function () {\n        return this.overlay_;\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} and may actually draw or finish the drawing.\n     * @override\n     * @api\n     */\n    Draw.prototype.handleEvent = function (event) {\n        if (event.originalEvent.type === EventType.CONTEXTMENU) {\n            // Avoid context menu for long taps when drawing on mobile\n            event.preventDefault();\n        }\n        this.freehand_ = this.mode_ !== Mode.POINT && this.freehandCondition_(event);\n        var move = event.type === MapBrowserEventType.POINTERMOVE;\n        var pass = true;\n        if (!this.freehand_ && this.lastDragTime_ && event.type === MapBrowserEventType.POINTERDRAG) {\n            var now = Date.now();\n            if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n                this.downPx_ = event.pixel;\n                this.shouldHandle_ = !this.freehand_;\n                move = true;\n            }\n            else {\n                this.lastDragTime_ = undefined;\n            }\n            if (this.shouldHandle_ && this.downTimeout_ !== undefined) {\n                clearTimeout(this.downTimeout_);\n                this.downTimeout_ = undefined;\n            }\n        }\n        if (this.freehand_ &&\n            event.type === MapBrowserEventType.POINTERDRAG &&\n            this.sketchFeature_ !== null) {\n            this.addToDrawing_(event);\n            pass = false;\n        }\n        else if (this.freehand_ &&\n            event.type === MapBrowserEventType.POINTERDOWN) {\n            pass = false;\n        }\n        else if (move) {\n            pass = event.type === MapBrowserEventType.POINTERMOVE;\n            if (pass && this.freehand_) {\n                pass = this.handlePointerMove_(event);\n            }\n            else if ( /** @type {MapBrowserPointerEvent} */(event).pointerEvent.pointerType == 'mouse' ||\n                (event.type === MapBrowserEventType.POINTERDRAG && this.downTimeout_ === undefined)) {\n                this.handlePointerMove_(event);\n            }\n        }\n        else if (event.type === MapBrowserEventType.DBLCLICK) {\n            pass = false;\n        }\n        return _super.prototype.handleEvent.call(this, event) && pass;\n    };\n    /**\n     * @inheritDoc\n     */\n    Draw.prototype.handleDownEvent = function (event) {\n        this.shouldHandle_ = !this.freehand_;\n        if (this.freehand_) {\n            this.downPx_ = event.pixel;\n            if (!this.finishCoordinate_) {\n                this.startDrawing_(event);\n            }\n            return true;\n        }\n        else if (this.condition_(event)) {\n            this.lastDragTime_ = Date.now();\n            this.downTimeout_ = setTimeout(function () {\n                this.handlePointerMove_(new MapBrowserPointerEvent(MapBrowserEventType.POINTERMOVE, event.map, event.pointerEvent, false, event.frameState));\n            }.bind(this), this.dragVertexDelay_);\n            this.downPx_ = event.pixel;\n            return true;\n        }\n        else {\n            this.lastDragTime_ = undefined;\n            return false;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Draw.prototype.handleUpEvent = function (event) {\n        var pass = true;\n        if (this.downTimeout_) {\n            clearTimeout(this.downTimeout_);\n            this.downTimeout_ = undefined;\n        }\n        this.handlePointerMove_(event);\n        var circleMode = this.mode_ === Mode.CIRCLE;\n        if (this.shouldHandle_) {\n            if (!this.finishCoordinate_) {\n                this.startDrawing_(event);\n                if (this.mode_ === Mode.POINT) {\n                    this.finishDrawing();\n                }\n            }\n            else if (this.freehand_ || circleMode) {\n                this.finishDrawing();\n            }\n            else if (this.atFinish_(event)) {\n                if (this.finishCondition_(event)) {\n                    this.finishDrawing();\n                }\n            }\n            else {\n                this.addToDrawing_(event);\n            }\n            pass = false;\n        }\n        else if (this.freehand_) {\n            this.finishCoordinate_ = null;\n            this.abortDrawing_();\n        }\n        if (!pass && this.stopClick_) {\n            event.stopPropagation();\n        }\n        return pass;\n    };\n    /**\n     * Handle move events.\n     * @param {import(\"../MapBrowserEvent.js\").default} event A move event.\n     * @return {boolean} Pass the event to other interactions.\n     * @private\n     */\n    Draw.prototype.handlePointerMove_ = function (event) {\n        if (this.downPx_ &&\n            ((!this.freehand_ && this.shouldHandle_) ||\n                (this.freehand_ && !this.shouldHandle_))) {\n            var downPx = this.downPx_;\n            var clickPx = event.pixel;\n            var dx = downPx[0] - clickPx[0];\n            var dy = downPx[1] - clickPx[1];\n            var squaredDistance = dx * dx + dy * dy;\n            this.shouldHandle_ = this.freehand_ ?\n                squaredDistance > this.squaredClickTolerance_ :\n                squaredDistance <= this.squaredClickTolerance_;\n            if (!this.shouldHandle_) {\n                return true;\n            }\n        }\n        if (this.finishCoordinate_) {\n            this.modifyDrawing_(event);\n        }\n        else {\n            this.createOrUpdateSketchPoint_(event);\n        }\n        return true;\n    };\n    /**\n     * Determine if an event is within the snapping tolerance of the start coord.\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     * @return {boolean} The event is within the snapping tolerance of the start.\n     * @private\n     */\n    Draw.prototype.atFinish_ = function (event) {\n        var at = false;\n        if (this.sketchFeature_) {\n            var potentiallyDone = false;\n            var potentiallyFinishCoordinates = [this.finishCoordinate_];\n            if (this.mode_ === Mode.LINE_STRING) {\n                potentiallyDone = this.sketchCoords_.length > this.minPoints_;\n            }\n            else if (this.mode_ === Mode.POLYGON) {\n                var sketchCoords = /** @type {PolyCoordType} */ (this.sketchCoords_);\n                potentiallyDone = sketchCoords[0].length > this.minPoints_;\n                potentiallyFinishCoordinates = [sketchCoords[0][0], sketchCoords[0][sketchCoords[0].length - 2]];\n            }\n            if (potentiallyDone) {\n                var map = event.map;\n                for (var i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n                    var finishCoordinate = potentiallyFinishCoordinates[i];\n                    var finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n                    var pixel = event.pixel;\n                    var dx = pixel[0] - finishPixel[0];\n                    var dy = pixel[1] - finishPixel[1];\n                    var snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n                    at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n                    if (at) {\n                        this.finishCoordinate_ = finishCoordinate;\n                        break;\n                    }\n                }\n            }\n        }\n        return at;\n    };\n    /**\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     * @private\n     */\n    Draw.prototype.createOrUpdateSketchPoint_ = function (event) {\n        var coordinates = event.coordinate.slice();\n        if (!this.sketchPoint_) {\n            this.sketchPoint_ = new Feature(new Point(coordinates));\n            this.updateSketchFeatures_();\n        }\n        else {\n            var sketchPointGeom = this.sketchPoint_.getGeometry();\n            sketchPointGeom.setCoordinates(coordinates);\n        }\n    };\n    /**\n     * Start the drawing.\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     * @private\n     */\n    Draw.prototype.startDrawing_ = function (event) {\n        var start = event.coordinate;\n        this.finishCoordinate_ = start;\n        if (this.mode_ === Mode.POINT) {\n            this.sketchCoords_ = start.slice();\n        }\n        else if (this.mode_ === Mode.POLYGON) {\n            this.sketchCoords_ = [[start.slice(), start.slice()]];\n            this.sketchLineCoords_ = this.sketchCoords_[0];\n        }\n        else {\n            this.sketchCoords_ = [start.slice(), start.slice()];\n        }\n        if (this.sketchLineCoords_) {\n            this.sketchLine_ = new Feature(new LineString(this.sketchLineCoords_));\n        }\n        var geometry = this.geometryFunction_(this.sketchCoords_);\n        this.sketchFeature_ = new Feature();\n        if (this.geometryName_) {\n            this.sketchFeature_.setGeometryName(this.geometryName_);\n        }\n        this.sketchFeature_.setGeometry(geometry);\n        this.updateSketchFeatures_();\n        this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_));\n    };\n    /**\n     * Modify the drawing.\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     * @private\n     */\n    Draw.prototype.modifyDrawing_ = function (event) {\n        var coordinate = event.coordinate;\n        var geometry = this.sketchFeature_.getGeometry();\n        var coordinates, last;\n        if (this.mode_ === Mode.POINT) {\n            last = this.sketchCoords_;\n        }\n        else if (this.mode_ === Mode.POLYGON) {\n            coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n            last = coordinates[coordinates.length - 1];\n            if (this.atFinish_(event)) {\n                // snap to finish\n                coordinate = this.finishCoordinate_.slice();\n            }\n        }\n        else {\n            coordinates = this.sketchCoords_;\n            last = coordinates[coordinates.length - 1];\n        }\n        last[0] = coordinate[0];\n        last[1] = coordinate[1];\n        this.geometryFunction_(/** @type {!LineCoordType} */ (this.sketchCoords_), geometry);\n        if (this.sketchPoint_) {\n            var sketchPointGeom = this.sketchPoint_.getGeometry();\n            sketchPointGeom.setCoordinates(coordinate);\n        }\n        /** @type {LineString} */\n        var sketchLineGeom;\n        if (geometry.getType() == GeometryType.POLYGON &&\n            this.mode_ !== Mode.POLYGON) {\n            if (!this.sketchLine_) {\n                this.sketchLine_ = new Feature();\n            }\n            var ring = geometry.getLinearRing(0);\n            sketchLineGeom = this.sketchLine_.getGeometry();\n            if (!sketchLineGeom) {\n                sketchLineGeom = new LineString(ring.getFlatCoordinates(), ring.getLayout());\n                this.sketchLine_.setGeometry(sketchLineGeom);\n            }\n            else {\n                sketchLineGeom.setFlatCoordinates(ring.getLayout(), ring.getFlatCoordinates());\n                sketchLineGeom.changed();\n            }\n        }\n        else if (this.sketchLineCoords_) {\n            sketchLineGeom = this.sketchLine_.getGeometry();\n            sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n        }\n        this.updateSketchFeatures_();\n    };\n    /**\n     * Add a new coordinate to the drawing.\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     * @private\n     */\n    Draw.prototype.addToDrawing_ = function (event) {\n        var coordinate = event.coordinate;\n        var geometry = this.sketchFeature_.getGeometry();\n        var done;\n        var coordinates;\n        if (this.mode_ === Mode.LINE_STRING) {\n            this.finishCoordinate_ = coordinate.slice();\n            coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n            if (coordinates.length >= this.maxPoints_) {\n                if (this.freehand_) {\n                    coordinates.pop();\n                }\n                else {\n                    done = true;\n                }\n            }\n            coordinates.push(coordinate.slice());\n            this.geometryFunction_(coordinates, geometry);\n        }\n        else if (this.mode_ === Mode.POLYGON) {\n            coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n            if (coordinates.length >= this.maxPoints_) {\n                if (this.freehand_) {\n                    coordinates.pop();\n                }\n                else {\n                    done = true;\n                }\n            }\n            coordinates.push(coordinate.slice());\n            if (done) {\n                this.finishCoordinate_ = coordinates[0];\n            }\n            this.geometryFunction_(this.sketchCoords_, geometry);\n        }\n        this.updateSketchFeatures_();\n        if (done) {\n            this.finishDrawing();\n        }\n    };\n    /**\n     * Remove last point of the feature currently being drawn.\n     * @api\n     */\n    Draw.prototype.removeLastPoint = function () {\n        if (!this.sketchFeature_) {\n            return;\n        }\n        var geometry = this.sketchFeature_.getGeometry();\n        var coordinates;\n        /** @type {LineString} */\n        var sketchLineGeom;\n        if (this.mode_ === Mode.LINE_STRING) {\n            coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n            coordinates.splice(-2, 1);\n            this.geometryFunction_(coordinates, geometry);\n            if (coordinates.length >= 2) {\n                this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n            }\n        }\n        else if (this.mode_ === Mode.POLYGON) {\n            coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n            coordinates.splice(-2, 1);\n            sketchLineGeom = this.sketchLine_.getGeometry();\n            sketchLineGeom.setCoordinates(coordinates);\n            this.geometryFunction_(this.sketchCoords_, geometry);\n        }\n        if (coordinates.length === 0) {\n            this.finishCoordinate_ = null;\n        }\n        this.updateSketchFeatures_();\n    };\n    /**\n     * Stop drawing and add the sketch feature to the target layer.\n     * The {@link module:ol/interaction/Draw~DrawEventType.DRAWEND} event is\n     * dispatched before inserting the feature.\n     * @api\n     */\n    Draw.prototype.finishDrawing = function () {\n        var sketchFeature = this.abortDrawing_();\n        if (!sketchFeature) {\n            return;\n        }\n        var coordinates = this.sketchCoords_;\n        var geometry = sketchFeature.getGeometry();\n        if (this.mode_ === Mode.LINE_STRING) {\n            // remove the redundant last point\n            coordinates.pop();\n            this.geometryFunction_(coordinates, geometry);\n        }\n        else if (this.mode_ === Mode.POLYGON) {\n            // remove the redundant last point in ring\n            /** @type {PolyCoordType} */ (coordinates)[0].pop();\n            this.geometryFunction_(coordinates, geometry);\n            coordinates = geometry.getCoordinates();\n        }\n        // cast multi-part geometries\n        if (this.type_ === GeometryType.MULTI_POINT) {\n            sketchFeature.setGeometry(new MultiPoint([/** @type {PointCoordType} */ (coordinates)]));\n        }\n        else if (this.type_ === GeometryType.MULTI_LINE_STRING) {\n            sketchFeature.setGeometry(new MultiLineString([/** @type {LineCoordType} */ (coordinates)]));\n        }\n        else if (this.type_ === GeometryType.MULTI_POLYGON) {\n            sketchFeature.setGeometry(new MultiPolygon([/** @type {PolyCoordType} */ (coordinates)]));\n        }\n        // First dispatch event to allow full set up of feature\n        this.dispatchEvent(new DrawEvent(DrawEventType.DRAWEND, sketchFeature));\n        // Then insert feature\n        if (this.features_) {\n            this.features_.push(sketchFeature);\n        }\n        if (this.source_) {\n            this.source_.addFeature(sketchFeature);\n        }\n    };\n    /**\n     * Stop drawing without adding the sketch feature to the target layer.\n     * @return {Feature} The sketch feature (or null if none).\n     * @private\n     */\n    Draw.prototype.abortDrawing_ = function () {\n        this.finishCoordinate_ = null;\n        var sketchFeature = this.sketchFeature_;\n        if (sketchFeature) {\n            this.sketchFeature_ = null;\n            this.sketchPoint_ = null;\n            this.sketchLine_ = null;\n            this.overlay_.getSource().clear(true);\n        }\n        return sketchFeature;\n    };\n    /**\n     * Extend an existing geometry by adding additional points. This only works\n     * on features with `LineString` geometries, where the interaction will\n     * extend lines by adding points to the end of the coordinates array.\n     * @param {!Feature<LineString>} feature Feature to be extended.\n     * @api\n     */\n    Draw.prototype.extend = function (feature) {\n        var geometry = feature.getGeometry();\n        var lineString = geometry;\n        this.sketchFeature_ = feature;\n        this.sketchCoords_ = lineString.getCoordinates();\n        var last = this.sketchCoords_[this.sketchCoords_.length - 1];\n        this.finishCoordinate_ = last.slice();\n        this.sketchCoords_.push(last.slice());\n        this.updateSketchFeatures_();\n        this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_));\n    };\n    /**\n     * Redraw the sketch features.\n     * @private\n     */\n    Draw.prototype.updateSketchFeatures_ = function () {\n        var sketchFeatures = [];\n        if (this.sketchFeature_) {\n            sketchFeatures.push(this.sketchFeature_);\n        }\n        if (this.sketchLine_) {\n            sketchFeatures.push(this.sketchLine_);\n        }\n        if (this.sketchPoint_) {\n            sketchFeatures.push(this.sketchPoint_);\n        }\n        var overlaySource = this.overlay_.getSource();\n        overlaySource.clear(true);\n        overlaySource.addFeatures(sketchFeatures);\n    };\n    /**\n     * @private\n     */\n    Draw.prototype.updateState_ = function () {\n        var map = this.getMap();\n        var active = this.getActive();\n        if (!map || !active) {\n            this.abortDrawing_();\n        }\n        this.overlay_.setMap(active ? map : null);\n    };\n    return Draw;\n}(PointerInteraction));\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n    var styles = createEditingStyle();\n    return function (feature, resolution) {\n        return styles[feature.getGeometry().getType()];\n    };\n}\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of an\n * `import(\"../geom/Circle.js\").Circle` geometry.\n * @param {number=} opt_sides Number of sides of the regular polygon. Default is\n *     32.\n * @param {number=} opt_angle Angle of the first point in radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {GeometryFunction} Function that draws a\n *     polygon.\n * @api\n */\nexport function createRegularPolygon(opt_sides, opt_angle) {\n    return function (coordinates, opt_geometry) {\n        var center = /** @type {LineCoordType} */ (coordinates)[0];\n        var end = /** @type {LineCoordType} */ (coordinates)[1];\n        var radius = Math.sqrt(squaredCoordinateDistance(center, end));\n        var geometry = opt_geometry ? /** @type {Polygon} */ (opt_geometry) :\n            fromCircle(new Circle(center), opt_sides);\n        var angle = opt_angle;\n        if (!opt_angle) {\n            var x = end[0] - center[0];\n            var y = end[1] - center[1];\n            angle = Math.atan(y / x) - (x < 0 ? Math.PI : 0);\n        }\n        makeRegular(geometry, center, radius, angle);\n        return geometry;\n    };\n}\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {GeometryFunction} Function that draws a box-shaped polygon.\n * @api\n */\nexport function createBox() {\n    return (function (coordinates, opt_geometry) {\n        var extent = boundingExtent(/** @type {LineCoordType} */ (coordinates));\n        var boxCoordinates = [[\n                getBottomLeft(extent),\n                getBottomRight(extent),\n                getTopRight(extent),\n                getTopLeft(extent),\n                getBottomLeft(extent)\n            ]];\n        var geometry = opt_geometry;\n        if (geometry) {\n            geometry.setCoordinates(boxCoordinates);\n        }\n        else {\n            geometry = new Polygon(boxCoordinates);\n        }\n        return geometry;\n    });\n}\n/**\n * Get the drawing mode.  The mode for mult-part geometries is the same as for\n * their single-part cousins.\n * @param {GeometryType} type Geometry type.\n * @return {Mode} Drawing mode.\n */\nfunction getMode(type) {\n    var mode;\n    if (type === GeometryType.POINT ||\n        type === GeometryType.MULTI_POINT) {\n        mode = Mode.POINT;\n    }\n    else if (type === GeometryType.LINE_STRING ||\n        type === GeometryType.MULTI_LINE_STRING) {\n        mode = Mode.LINE_STRING;\n    }\n    else if (type === GeometryType.POLYGON ||\n        type === GeometryType.MULTI_POLYGON) {\n        mode = Mode.POLYGON;\n    }\n    else if (type === GeometryType.CIRCLE) {\n        mode = Mode.CIRCLE;\n    }\n    return (\n    /** @type {!Mode} */ (mode));\n}\nexport default Draw;\n//# sourceMappingURL=Draw.js.map","/* mapUtils.js\n *\n * This file includes utility functions for working with a map.\n */\n\nimport { fromLonLat } from 'ol/proj';\n\nfunction getRandomColor() {\n  return '#000000'.replace(/0/g, function() {\n    return (~~(Math.random() * 16)).toString(16);\n  });\n}\n\nconst mapUtils = {\n  getGeoFacets: function(facets, facetNames) {\n    let geoFacets = [];\n    if (facets) {\n      if (facetNames && facetNames.length > 0) {\n        facetNames.forEach(function(facetName) {\n          const facet = facets[facetName];\n          if (facet && facet.boxes && facet.boxes.length > 0) {\n            geoFacets.push({\n              color: getRandomColor(),\n              facet: facet\n            });\n          }\n        });\n      } else {\n        const facetObjects = Object.values(facets);\n        facetObjects.forEach(function(facet) {\n          if (facet.boxes && facet.boxes.length > 0) {\n            geoFacets.push({\n              color: getRandomColor(),\n              facet: facet\n            });\n          }\n        });\n      }\n    }\n    return geoFacets;\n  },\n\n  convertFacetsToGeoJson: function(geoFacets) {\n    let geoJson = {\n      type: 'FeatureCollection',\n      features: []\n    };\n\n    geoFacets.forEach(function(geoFacet) {\n      const facet = geoFacet.facet;\n      let color = geoFacet.color;\n      facet.boxes.forEach(function(value, index) {\n        if (value.count > 0) {\n          let lng = (value.w + value.e) / 2;\n          let lat = (value.s + value.n) / 2;\n          let ptConverted = fromLonLat([lng, lat]);\n          geoJson.features.push({\n            type: 'Feature',\n            id: value.id || 'feature' + index,\n            geometry: {\n              type: 'Point',\n              coordinates: ptConverted\n            },\n            properties: {\n              label: value.label,\n              id: value.id || 'feature' + index,\n              layer: 'primary',\n              count: value.count,\n              uri: value.uri,\n              color: color\n            }\n          });\n        }\n      });\n    });\n\n    return geoJson;\n  },\n\n  convertPropsToGeoJson: function(props) {\n    let geoJson = {\n      type: 'FeatureCollection',\n      features: []\n    };\n\n    // Look for 'location' info\n    if (props.latitude && props.longitude) {\n      let ptConverted = fromLonLat([\n        parseFloat(props.longitude),\n        parseFloat(props.latitude)\n      ]);\n\n      geoJson.features.push({\n        type: 'Feature',\n        id: props.id || 'feature-supplier',\n        geometry: {\n          type: 'Point',\n          coordinates: ptConverted\n        },\n        properties: {\n          name: props.label || '',\n          id: props.id || 'feature-1',\n          layer: 'primary'\n        }\n      });\n    }\n\n    return geoJson;\n  },\n\n  convertPointsToGeoJson: function(points) {\n    let geoJson = {\n      type: 'FeatureCollection',\n      features: []\n    };\n\n    if (points && points.length > 0) {\n      points.forEach(function(value, index) {\n        let latLong = value.split(',');\n        if (latLong.length === 2) {\n          let ptConverted = fromLonLat([\n            parseFloat(latLong[1]),\n            parseFloat(latLong[0])\n          ]);\n\n          geoJson.features.push({\n            type: 'Feature',\n            id: 'component' + index,\n            geometry: {\n              type: 'Point',\n              coordinates: ptConverted\n            },\n            properties: {\n              name: '',\n              id: 'component' + index,\n              layer: 'component'\n            }\n          });\n        }\n      });\n    }\n\n    return geoJson;\n  }\n};\n\nexport default mapUtils;\n","import React from 'react';\nimport Map from 'ol/Map';\nimport View from 'ol/View';\nimport { Tile as TileLayer, Vector as VectorLayer } from 'ol/layer.js';\nimport GeoJSON from 'ol/format/GeoJSON.js';\nimport Overlay from 'ol/Overlay.js';\nimport { OSM, Vector as VectorSource } from 'ol/source.js';\nimport { Circle as CircleStyle, Fill, Stroke, Style, Text } from 'ol/style.js';\nimport { fromLonLat, transformExtent } from 'ol/proj.js';\nimport { createStringXY } from 'ol/coordinate.js';\nimport { defaults as defaultControls, FullScreen } from 'ol/control.js';\nimport MousePosition from 'ol/control/MousePosition.js';\nimport { Draw, DragZoom } from 'ol/interaction.js';\nimport mapUtils from './mapUtils.js';\nimport 'ol/ol.css';\n\nclass OpenLayersSearchMap extends React.Component {\n  constructor(props) {\n    super(props);\n\n    let mapId = Math.floor(Math.random() * 1000 + 1);\n    this.state = {\n      mapTargetId: 'olmap-' + mapId,\n      popupContentTargetId: 'olmap-popup-content-' + mapId,\n      showMap: true,\n      geoFacets: [],\n      drawnBounds: {},\n      geoStyles: {\n        Point: new Style({\n          image: new CircleStyle({\n            radius: 5,\n            fill: null,\n            stroke: new Stroke({ color: 'blue', width: 1 })\n          })\n        }),\n        Polygon: new Style({\n          stroke: new Stroke({\n            color: 'blue',\n            lineDash: [4],\n            width: 3\n          }),\n          fill: new Fill({\n            color: 'rgba(0, 0, 255, 0.1)'\n          })\n        }),\n        Circle: new Style({\n          stroke: new Stroke({\n            color: 'red',\n            width: 2\n          }),\n          fill: new Fill({\n            color: 'rgba(255,0,0,0.2)'\n          })\n        })\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.processData();\n  }\n\n  componentDidUpdate(previousProps) {\n    if (previousProps.facets !== this.props.facets) {\n      this.processData();\n    }\n  }\n\n  createClusterTextStyle(text) {\n    return new Text({\n      textAlign: 'center',\n      textBaseline: 'middle',\n      font: '14px Arial',\n      text: text,\n      fill: new Fill({ color: 'black' }),\n      offsetX: 0,\n      offsetY: 0,\n      rotation: 0\n    });\n  }\n\n  createClusterMarker = feature => {\n    let radius = 10;\n    let count = 0;\n    let countLength = 0;\n    let lineDash = [5];\n    let strokeWidth = 2;\n\n    if (feature.get('count')) {\n      count = feature.get('count');\n      countLength = count.toString().length;\n      radius = 10 + (countLength > 1 ? (countLength - 1) * 5 : 0);\n    }\n\n    if (count === 1) {\n      radius = 5;\n      strokeWidth = 1;\n      lineDash = [];\n    }\n\n    let countValue = count > 1 ? count.toString() : '';\n    let styles = [];\n    let color = feature.getProperties()['color'];\n    if (color) {\n      if (count === 1) {\n        styles = [\n          new Style({\n            image: new CircleStyle({\n              radius: radius,\n              fill: new Fill({ color: color }),\n              stroke: new Stroke({\n                color: 'black',\n                width: strokeWidth,\n                lineDash: lineDash\n              })\n            }),\n            text: this.createClusterTextStyle(countValue)\n          })\n        ];\n      } else {\n        styles = [\n          new Style({\n            image: new CircleStyle({\n              radius: radius + 8,\n              fill: new Fill({ color: color }),\n              stroke: new Stroke({\n                color: 'black',\n                width: strokeWidth,\n                lineDash: lineDash\n              })\n            })\n          }),\n          new Style({\n            image: new CircleStyle({\n              radius: radius,\n              fill: new Fill({ color: '#cce0ff' }),\n              stroke: new Stroke({\n                color: 'black',\n                width: strokeWidth,\n                lineDash: lineDash\n              })\n            }),\n            text: this.createClusterTextStyle(countValue)\n          })\n        ];\n      }\n    } else {\n      styles = [this.state.geoStyles[feature.getGeometry().getType()]];\n    }\n\n    return styles;\n  };\n\n  getPrimaryGeoJson() {\n    let geoFacets = mapUtils.getGeoFacets(\n        this.props.facets,\n        this.props.geoFacetNames\n    );\n\n    this.setState({ geoFacets: geoFacets });\n\n    return mapUtils.convertFacetsToGeoJson(geoFacets);\n  }\n\n  getPrimaryStyle() {\n    return this.createClusterMarker;\n  }\n\n  processData() {\n    // Create the point layer.\n    let primaryGeoJson = this.getPrimaryGeoJson();\n\n    if (primaryGeoJson.features.length === 0) {\n      return;\n    }\n\n    let convertedGeoJson = new GeoJSON().readFeatures(primaryGeoJson);\n\n    // Update the layer.\n    if (\n        this.state.primaryLayer != null &&\n        this.state.primaryLayer.getSource() != null\n    ) {\n      this.state.primaryLayer.getSource().clear();\n      this.state.primaryLayer.getSource().addFeatures(convertedGeoJson);\n    } else {\n      //create source and layer\n      let primarySource = new VectorSource({\n        projection: 'EPSG:4326',\n        features: convertedGeoJson\n      });\n      let primaryLayer = new VectorLayer({\n        source: primarySource,\n        style: this.getPrimaryStyle()\n      });\n\n      let center = this.props.lonLat\n          ? fromLonLat(this.props.lonLat)\n          : fromLonLat([-95.79, 34.48]);\n\n      // If there is only 1 feature, use it as the map center.\n      if (primarySource.getFeatures().length === 1) {\n        center = primarySource\n            .getFeatures()[0]\n            .getGeometry()\n            .getCoordinates();\n      }\n\n      // Setup overlay for popups\n      let container = document.getElementById(this.state.popupContentTargetId);\n      let overlay = new Overlay({\n        element: container,\n        autoPan: true,\n        autoPanAnimation: {\n          duration: 250\n        }\n      });\n\n      let map = new Map({\n        target: this.state.mapTargetId,\n        layers: [\n          // This is an example of an Esri base map.  The following imports are needed:\n          //\n          // import XYZ from 'ol/source/XYZ.js';\n          //\n          // new TileLayer({\n          //   source: new XYZ({\n          //     attributions:\n          //       'Tiles © <a href=\"https://services.arcgisonline.com/ArcGIS/' +\n          //       'rest/services/World_Topo_Map/MapServer\">ArcGIS</a>',\n          //     url:\n          //       'https://server.arcgisonline.com/ArcGIS/rest/services/' +\n          //       'World_Topo_Map/MapServer/tile/{z}/{y}/{x}'\n          //   })\n          // }),\n\n          // Default base map is Open Street Map.\n          new TileLayer({\n            source: new OSM()\n          }),\n\n          // This is an example of 2 layers from a local map server when internet\n          // access is not available.\n          //\n          // The following imports are needed:\n          //\n          // import { Image as ImageLayer } from 'ol/layer.js';\n          // import ImageWMS from 'ol/source.js';\n          //\n          // new ImageLayer({\n          //   source: new ImageWMS({\n          //     url: 'http://localhost:8080/geoserver/tm_world/wms',\n          //     params: {\n          //       LAYERS: 'tm_world:TM_WORLD_BORDERS-0.3'\n          //     }\n          //   })\n          // }),\n          // new ImageLayer({\n          //   source: new ImageWMS({\n          //     url: 'http://localhost:8080/geoserver/topp/wms',\n          //     params: {\n          //       LAYERS: 'topp:states'\n          //     }\n          //   })\n          // }),\n\n          primaryLayer\n        ],\n        overlays: [overlay],\n        view: new View({\n          projection: 'EPSG:3857',\n          center: center,\n          zoom: this.props.zoom ? this.props.zoom : 4\n        }),\n        controls: defaultControls().extend([\n          new FullScreen(),\n          new MousePosition({\n            coordinateFormat: createStringXY(4),\n            projection: 'EPSG:4326'\n          })\n        ])\n      });\n\n      // save map and layer references to local state\n      let state = {\n        map: map,\n        primaryLayer: primaryLayer,\n        overlay: overlay\n      };\n      this.setState(state, this.afterProcessData(map, primaryLayer));\n    }\n  }\n\n  afterProcessData(map, primaryLayer) {\n    let that = this;\n    let typeSelect = document.getElementById('map-selection-type');\n    let interaction; // global so we can remove them later\n\n    function addInteractions() {\n      let value = typeSelect.value;\n      if (value === 'Free Hand') {\n        interaction = new DragZoom();\n      } else {\n        interaction = new Draw({\n          source: primaryLayer.getSource(),\n          type: value\n        });\n      }\n      map.addInteraction(interaction);\n    }\n\n    /**\n     * Handle change event.\n     */\n    typeSelect.onchange = function() {\n      if (interaction) {\n        map.removeInteraction(interaction);\n      }\n      addInteractions();\n    };\n\n    addInteractions();\n\n    let addedFeature;\n    let addFeatureLocked = false;\n    primaryLayer.getSource().on('addfeature', function(event) {\n      if (!addFeatureLocked) {\n        addFeatureLocked = true;\n        let extent = event.feature.getGeometry().getExtent();\n        let isGeoFacet =\n            event.feature.getProperties() &&\n            event.feature.getProperties()['layer'] === 'primary';\n        // If the feature is new\n        if (\n            !isGeoFacet &&\n            (!addedFeature ||\n                addedFeature\n                    .getGeometry()\n                    .getExtent()\n                    .toString() !== extent.toString())\n        ) {\n          addedFeature = event.feature;\n          that.updateDrawnBounds(addedFeature.getGeometry());\n        }\n        addFeatureLocked = false;\n      }\n    });\n\n    // Bind handler for map clicks.\n    map.on('click', this.handleMapClick.bind(this));\n\n    // Bind handler for right clicks.\n    map.getViewport().addEventListener('contextmenu', function() {\n      that.resetDrawnBounds();\n      that.processData();\n      if (interaction) {\n        map.removeInteraction(interaction);\n      }\n      addInteractions();\n    });\n  }\n\n  getBoxBounds(extent) {\n    let convertedExtent = transformExtent(extent, 'EPSG:3857', 'EPSG:4326');\n    return {\n      south: convertedExtent[1],\n      west: convertedExtent[0],\n      north: convertedExtent[3],\n      east: convertedExtent[2]\n    };\n  }\n\n  getCircleBounds(geometry) {\n    let center = geometry.getCenter();\n    return {\n      radius: geometry.getRadius(),\n      point: {\n        latitude: center[1],\n        longitude: center[0]\n      }\n    };\n  }\n\n  getPointBounds(geometry) {\n    let lonLat = geometry.getCoordinates();\n    return {\n      latitude: lonLat[1],\n      longitude: lonLat[0]\n    };\n  }\n\n  updateDrawnBounds(geometry) {\n    let bounds = {};\n    let shape = geometry.getType();\n    if (shape === 'Point') {\n      bounds = this.getPointBounds(geometry);\n    } else if (shape === 'Circle') {\n      bounds = this.getCircleBounds(geometry);\n    } else if (shape === 'Polygon') {\n      shape = 'Box';\n      bounds = this.getBoxBounds(geometry.getExtent());\n    }\n\n    if (shape) {\n      shape = shape.toLowerCase();\n      if (!this.state.drawnBounds[shape]) {\n        this.state.drawnBounds[shape] = [];\n      }\n      this.state.drawnBounds[shape].push(bounds);\n    }\n\n    if (this.props.boundsChanged) {\n      this.props.boundsChanged(this.state.drawnBounds);\n    }\n  }\n\n  resetDrawnBounds() {\n    this.setState({ drawnBounds: {} });\n    if (this.props.boundsChanged) {\n      this.props.boundsChanged(this.state.drawnBounds);\n    }\n  }\n\n  handleMapClick(event) {\n    // Close the old popup first.\n    this.closePopup();\n    let that = this;\n    // Find the feature near the clicked location.\n    let features = this.state.map.getFeaturesAtPixel(event.pixel);\n    if (features && features.length > 0) {\n      // Group the features into buckets based on layer.\n      let layers = {};\n      features.forEach(function(feature) {\n        let layer = feature.get('layer');\n        let uri = feature.get('uri');\n        if (layer && uri) {\n          if (layers[layer]) {\n            layers[layer].push(feature);\n          } else {\n            layers[layer] = [feature];\n          }\n        }\n      });\n\n      let display = null;\n      if (layers['primary'] && layers['primary'].length > 0) {\n        display = '<div><ul>';\n        layers['primary'].forEach(function(primFeat) {\n          let uri = primFeat.get('uri');\n          let label =\n              primFeat.get('label') || primFeat.get('name') || uri || 'unknown';\n          display += '<li>';\n          if (that.props.markerClick) {\n            display += '<a onclick=\"' + that.props.markerClick(uri) + '\">';\n          } else {\n            display += '<a href=\"/detail/' + encodeURIComponent(uri) + '\">';\n          }\n          display += label + '</a></li>';\n        });\n        display += '</ul></div>';\n      }\n\n      let content = document.getElementById(this.state.popupContentTargetId);\n      if (content && display) {\n        content.innerHTML = display;\n        let coordinate = event.coordinate;\n        this.state.overlay.setPosition(coordinate);\n      }\n    }\n  }\n\n  closePopup() {\n    this.state.overlay.setPosition(undefined);\n  }\n\n  handleShowMap = () => {\n    this.setState({ showMap: !this.state.showMap });\n  };\n\n  render() {\n    var width = this.props.width ? this.props.width : '100%';\n    var height = this.props.height ? this.props.height : '400px';\n    var mapStyle =  !this.state.showMap\n        ? { display: 'none' }\n        : { display: 'block', width: width, height: height }\n    return (\n        <div>\n          <div className=\"inline-block\">\n          <span>\n            <input\n                name=\"showMap\"\n                type=\"checkbox\"\n                checked={this.state.showMap}\n                onChange={this.handleShowMap}\n            />\n            <span> Show Map</span>\n          </span>\n            &nbsp;&nbsp;\n            <label>Interaction &nbsp;</label>\n            <select id=\"map-selection-type\">\n              <option value=\"Free Hand\">Free Hand</option>\n              <option value=\"Point\">Draw Point</option>\n              <option value=\"Polygon\">Draw Polygon</option>\n              <option value=\"Circle\">Draw Circle</option>\n            </select>\n            &nbsp;&nbsp;\n            <label>Legend &nbsp;</label>\n            {this.state.geoFacets.map((geoFacet, index) => (\n                <span key={index}>\n              <b style={{ color: geoFacet.color }}>&#9673;</b>\n                  &nbsp;\n                  {geoFacet.facet.name}\n                  &nbsp;\n            </span>\n            ))}\n            &nbsp;&nbsp;\n            <i>Right click will clear the drawings</i>\n          </div>\n          <div\n              id={this.state.mapTargetId}\n              className={this.props.class || 'olmap'}\n              style={mapStyle}\n          />\n          <div id={this.state.popupContentTargetId} className=\"ol-popup\">\n            <div id={this.state.popupContentTargetId} />\n          </div>\n        </div>\n    );\n  }\n}\n\nexport default OpenLayersSearchMap;","import MapContext from \"./MapContext\";\nimport InfoWindow from \"./InfoWindow\";\nimport FeatureLayer from \"./FeatureLayer\";\nimport LineStringLayer from \"./LineStringLayer\";\nimport MapProvider from \"./MapProvider\";\nimport OpenLayersMap from \"./OpenLayersMap\";\nimport OpenLayersSearchMap from \"./OpenLayersSearchMap\";\n\nexport {\n  MapContext,\n  InfoWindow,\n  FeatureLayer,\n  LineStringLayer,\n  MapProvider,\n  OpenLayersMap,\n  OpenLayersSearchMap\n};\n","/*!\n * PEP v0.5.3 | https://github.com/jquery/PEP\n * Copyright jQuery Foundation and other contributors | http://jquery.org/license\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global.PointerEventsPolyfill = factory());\n}(this, function () { 'use strict';\n\n  /**\n   * This is the constructor for new PointerEvents.\n   *\n   * New Pointer Events must be given a type, and an optional dictionary of\n   * initialization properties.\n   *\n   * Due to certain platform requirements, events returned from the constructor\n   * identify as MouseEvents.\n   *\n   * @constructor\n   * @param {String} inType The type of the event to create.\n   * @param {Object} [inDict] An optional dictionary of initial event properties.\n   * @return {Event} A new PointerEvent of type `inType`, initialized with properties from `inDict`.\n   */\n  var MOUSE_PROPS = [\n    'bubbles',\n    'cancelable',\n    'view',\n    'screenX',\n    'screenY',\n    'clientX',\n    'clientY',\n    'ctrlKey',\n    'altKey',\n    'shiftKey',\n    'metaKey',\n    'button',\n    'relatedTarget',\n    'pageX',\n    'pageY'\n  ];\n\n  var MOUSE_DEFAULTS = [\n    false,\n    false,\n    null,\n    0,\n    0,\n    0,\n    0,\n    false,\n    false,\n    false,\n    false,\n    0,\n    null,\n    0,\n    0\n  ];\n\n  function PointerEvent(inType, inDict) {\n    inDict = inDict || Object.create(null);\n\n    var e = document.createEvent('Event');\n    e.initEvent(inType, inDict.bubbles || false, inDict.cancelable || false);\n\n    // define inherited MouseEvent properties\n    // skip bubbles and cancelable since they're set above in initEvent()\n    for (var i = 2, p; i < MOUSE_PROPS.length; i++) {\n      p = MOUSE_PROPS[i];\n      e[p] = inDict[p] || MOUSE_DEFAULTS[i];\n    }\n    e.buttons = inDict.buttons || 0;\n\n    // Spec requires that pointers without pressure specified use 0.5 for down\n    // state and 0 for up state.\n    var pressure = 0;\n\n    if (inDict.pressure !== undefined && e.buttons) {\n      pressure = inDict.pressure;\n    } else {\n      pressure = e.buttons ? 0.5 : 0;\n    }\n\n    // add x/y properties aliased to clientX/Y\n    e.x = e.clientX;\n    e.y = e.clientY;\n\n    // define the properties of the PointerEvent interface\n    e.pointerId = inDict.pointerId || 0;\n    e.width = inDict.width || 1;\n    e.height = inDict.height || 1;\n    e.pressure = pressure;\n    e.tiltX = inDict.tiltX || 0;\n    e.tiltY = inDict.tiltY || 0;\n    e.twist = inDict.twist || 0;\n    e.tangentialPressure = inDict.tangentialPressure || 0;\n    e.pointerType = inDict.pointerType || '';\n    e.hwTimestamp = inDict.hwTimestamp || 0;\n    e.isPrimary = inDict.isPrimary || false;\n    e.detail = 0;\n    return e;\n  }\n\n  /**\n   * This module implements a map of pointer states\n   */\n  var USE_MAP = window.Map && window.Map.prototype.forEach;\n  var PointerMap = USE_MAP ? Map : SparseArrayMap;\n\n  function SparseArrayMap() {\n    this.array = [];\n    this.size = 0;\n  }\n\n  SparseArrayMap.prototype = {\n    set: function(k, v) {\n      if (v === undefined) {\n        return this.delete(k);\n      }\n      if (!this.has(k)) {\n        this.size++;\n      }\n      this.array[k] = v;\n    },\n    has: function(k) {\n      return this.array[k] !== undefined;\n    },\n    delete: function(k) {\n      if (this.has(k)) {\n        delete this.array[k];\n        this.size--;\n      }\n    },\n    get: function(k) {\n      return this.array[k];\n    },\n    clear: function() {\n      this.array.length = 0;\n      this.size = 0;\n    },\n\n    // return value, key, map\n    forEach: function(callback, thisArg) {\n      return this.array.forEach(function(v, k) {\n        callback.call(thisArg, v, k, this);\n      }, this);\n    }\n  };\n\n  var CLONE_PROPS = [\n\n    // MouseEvent\n    'bubbles',\n    'cancelable',\n    'view',\n    'detail',\n    'screenX',\n    'screenY',\n    'clientX',\n    'clientY',\n    'ctrlKey',\n    'altKey',\n    'shiftKey',\n    'metaKey',\n    'button',\n    'relatedTarget',\n\n    // DOM Level 3\n    'buttons',\n\n    // PointerEvent\n    'pointerId',\n    'width',\n    'height',\n    'pressure',\n    'tiltX',\n    'tiltY',\n    'pointerType',\n    'hwTimestamp',\n    'isPrimary',\n\n    // event instance\n    'type',\n    'target',\n    'currentTarget',\n    'which',\n    'pageX',\n    'pageY',\n    'timeStamp'\n  ];\n\n  var CLONE_DEFAULTS = [\n\n    // MouseEvent\n    false,\n    false,\n    null,\n    null,\n    0,\n    0,\n    0,\n    0,\n    false,\n    false,\n    false,\n    false,\n    0,\n    null,\n\n    // DOM Level 3\n    0,\n\n    // PointerEvent\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    '',\n    0,\n    false,\n\n    // event instance\n    '',\n    null,\n    null,\n    0,\n    0,\n    0,\n    0\n  ];\n\n  var BOUNDARY_EVENTS = {\n    'pointerover': 1,\n    'pointerout': 1,\n    'pointerenter': 1,\n    'pointerleave': 1\n  };\n\n  var HAS_SVG_INSTANCE = (typeof SVGElementInstance !== 'undefined');\n\n  /**\n   * This module is for normalizing events. Mouse and Touch events will be\n   * collected here, and fire PointerEvents that have the same semantics, no\n   * matter the source.\n   * Events fired:\n   *   - pointerdown: a pointing is added\n   *   - pointerup: a pointer is removed\n   *   - pointermove: a pointer is moved\n   *   - pointerover: a pointer crosses into an element\n   *   - pointerout: a pointer leaves an element\n   *   - pointercancel: a pointer will no longer generate events\n   */\n  var dispatcher = {\n    pointermap: new PointerMap(),\n    eventMap: Object.create(null),\n    captureInfo: Object.create(null),\n\n    // Scope objects for native events.\n    // This exists for ease of testing.\n    eventSources: Object.create(null),\n    eventSourceList: [],\n    /**\n     * Add a new event source that will generate pointer events.\n     *\n     * `inSource` must contain an array of event names named `events`, and\n     * functions with the names specified in the `events` array.\n     * @param {string} name A name for the event source\n     * @param {Object} source A new source of platform events.\n     */\n    registerSource: function(name, source) {\n      var s = source;\n      var newEvents = s.events;\n      if (newEvents) {\n        newEvents.forEach(function(e) {\n          if (s[e]) {\n            this.eventMap[e] = s[e].bind(s);\n          }\n        }, this);\n        this.eventSources[name] = s;\n        this.eventSourceList.push(s);\n      }\n    },\n    register: function(element) {\n      var l = this.eventSourceList.length;\n      for (var i = 0, es; (i < l) && (es = this.eventSourceList[i]); i++) {\n\n        // call eventsource register\n        es.register.call(es, element);\n      }\n    },\n    unregister: function(element) {\n      var l = this.eventSourceList.length;\n      for (var i = 0, es; (i < l) && (es = this.eventSourceList[i]); i++) {\n\n        // call eventsource register\n        es.unregister.call(es, element);\n      }\n    },\n    contains: /*scope.external.contains || */function(container, contained) {\n      try {\n        return container.contains(contained);\n      } catch (ex) {\n\n        // most likely: https://bugzilla.mozilla.org/show_bug.cgi?id=208427\n        return false;\n      }\n    },\n\n    // EVENTS\n    down: function(inEvent) {\n      inEvent.bubbles = true;\n      this.fireEvent('pointerdown', inEvent);\n    },\n    move: function(inEvent) {\n      inEvent.bubbles = true;\n      this.fireEvent('pointermove', inEvent);\n    },\n    up: function(inEvent) {\n      inEvent.bubbles = true;\n      this.fireEvent('pointerup', inEvent);\n    },\n    enter: function(inEvent) {\n      inEvent.bubbles = false;\n      this.fireEvent('pointerenter', inEvent);\n    },\n    leave: function(inEvent) {\n      inEvent.bubbles = false;\n      this.fireEvent('pointerleave', inEvent);\n    },\n    over: function(inEvent) {\n      inEvent.bubbles = true;\n      this.fireEvent('pointerover', inEvent);\n    },\n    out: function(inEvent) {\n      inEvent.bubbles = true;\n      this.fireEvent('pointerout', inEvent);\n    },\n    cancel: function(inEvent) {\n      inEvent.bubbles = true;\n      this.fireEvent('pointercancel', inEvent);\n    },\n    leaveOut: function(event) {\n      this.out(event);\n      this.propagate(event, this.leave, false);\n    },\n    enterOver: function(event) {\n      this.over(event);\n      this.propagate(event, this.enter, true);\n    },\n\n    // LISTENER LOGIC\n    eventHandler: function(inEvent) {\n\n      // This is used to prevent multiple dispatch of pointerevents from\n      // platform events. This can happen when two elements in different scopes\n      // are set up to create pointer events, which is relevant to Shadow DOM.\n      if (inEvent._handledByPE) {\n        return;\n      }\n      var type = inEvent.type;\n      var fn = this.eventMap && this.eventMap[type];\n      if (fn) {\n        fn(inEvent);\n      }\n      inEvent._handledByPE = true;\n    },\n\n    // set up event listeners\n    listen: function(target, events) {\n      events.forEach(function(e) {\n        this.addEvent(target, e);\n      }, this);\n    },\n\n    // remove event listeners\n    unlisten: function(target, events) {\n      events.forEach(function(e) {\n        this.removeEvent(target, e);\n      }, this);\n    },\n    addEvent: /*scope.external.addEvent || */function(target, eventName) {\n      target.addEventListener(eventName, this.boundHandler);\n    },\n    removeEvent: /*scope.external.removeEvent || */function(target, eventName) {\n      target.removeEventListener(eventName, this.boundHandler);\n    },\n\n    // EVENT CREATION AND TRACKING\n    /**\n     * Creates a new Event of type `inType`, based on the information in\n     * `inEvent`.\n     *\n     * @param {string} inType A string representing the type of event to create\n     * @param {Event} inEvent A platform event with a target\n     * @return {Event} A PointerEvent of type `inType`\n     */\n    makeEvent: function(inType, inEvent) {\n\n      // relatedTarget must be null if pointer is captured\n      if (this.captureInfo[inEvent.pointerId]) {\n        inEvent.relatedTarget = null;\n      }\n      var e = new PointerEvent(inType, inEvent);\n      if (inEvent.preventDefault) {\n        e.preventDefault = inEvent.preventDefault;\n      }\n      e._target = e._target || inEvent.target;\n      return e;\n    },\n\n    // make and dispatch an event in one call\n    fireEvent: function(inType, inEvent) {\n      var e = this.makeEvent(inType, inEvent);\n      return this.dispatchEvent(e);\n    },\n    /**\n     * Returns a snapshot of inEvent, with writable properties.\n     *\n     * @param {Event} inEvent An event that contains properties to copy.\n     * @return {Object} An object containing shallow copies of `inEvent`'s\n     *    properties.\n     */\n    cloneEvent: function(inEvent) {\n      var eventCopy = Object.create(null);\n      var p;\n      for (var i = 0; i < CLONE_PROPS.length; i++) {\n        p = CLONE_PROPS[i];\n        eventCopy[p] = inEvent[p] || CLONE_DEFAULTS[i];\n\n        // Work around SVGInstanceElement shadow tree\n        // Return the <use> element that is represented by the instance for Safari, Chrome, IE.\n        // This is the behavior implemented by Firefox.\n        if (HAS_SVG_INSTANCE && (p === 'target' || p === 'relatedTarget')) {\n          if (eventCopy[p] instanceof SVGElementInstance) {\n            eventCopy[p] = eventCopy[p].correspondingUseElement;\n          }\n        }\n      }\n\n      // keep the semantics of preventDefault\n      if (inEvent.preventDefault) {\n        eventCopy.preventDefault = function() {\n          inEvent.preventDefault();\n        };\n      }\n      return eventCopy;\n    },\n    getTarget: function(inEvent) {\n      var capture = this.captureInfo[inEvent.pointerId];\n      if (!capture) {\n        return inEvent._target;\n      }\n      if (inEvent._target === capture || !(inEvent.type in BOUNDARY_EVENTS)) {\n        return capture;\n      }\n    },\n    propagate: function(event, fn, propagateDown) {\n      var target = event.target;\n      var targets = [];\n\n      // Order of conditions due to document.contains() missing in IE.\n      while (target != null && target !== document && !target.contains(event.relatedTarget)) {\n        targets.push(target);\n        target = target.parentNode;\n\n        // Touch: Do not propagate if node is detached.\n        if (!target) {\n          return;\n        }\n      }\n      if (propagateDown) {\n        targets.reverse();\n      }\n      targets.forEach(function(target) {\n        event.target = target;\n        fn.call(this, event);\n      }, this);\n    },\n    setCapture: function(inPointerId, inTarget, skipDispatch) {\n      if (this.captureInfo[inPointerId]) {\n        this.releaseCapture(inPointerId, skipDispatch);\n      }\n\n      this.captureInfo[inPointerId] = inTarget;\n      this.implicitRelease = this.releaseCapture.bind(this, inPointerId, skipDispatch);\n      document.addEventListener('pointerup', this.implicitRelease);\n      document.addEventListener('pointercancel', this.implicitRelease);\n\n      var e = new PointerEvent('gotpointercapture', { bubbles: true });\n      e.pointerId = inPointerId;\n      e._target = inTarget;\n\n      if (!skipDispatch) {\n        this.asyncDispatchEvent(e);\n      }\n    },\n    releaseCapture: function(inPointerId, skipDispatch) {\n      var t = this.captureInfo[inPointerId];\n      if (!t) {\n        return;\n      }\n\n      this.captureInfo[inPointerId] = undefined;\n      document.removeEventListener('pointerup', this.implicitRelease);\n      document.removeEventListener('pointercancel', this.implicitRelease);\n\n      var e = new PointerEvent('lostpointercapture', { bubbles: true });\n      e.pointerId = inPointerId;\n      e._target = t;\n\n      if (!skipDispatch) {\n        this.asyncDispatchEvent(e);\n      }\n    },\n    /**\n     * Dispatches the event to its target.\n     *\n     * @param {Event} inEvent The event to be dispatched.\n     * @return {Boolean} True if an event handler returns true, false otherwise.\n     */\n    dispatchEvent: /*scope.external.dispatchEvent || */function(inEvent) {\n      var t = this.getTarget(inEvent);\n      if (t) {\n        return t.dispatchEvent(inEvent);\n      }\n    },\n    asyncDispatchEvent: function(inEvent) {\n      requestAnimationFrame(this.dispatchEvent.bind(this, inEvent));\n    }\n  };\n  dispatcher.boundHandler = dispatcher.eventHandler.bind(dispatcher);\n\n  var targeting = {\n    shadow: function(inEl) {\n      if (inEl) {\n        return inEl.shadowRoot || inEl.webkitShadowRoot;\n      }\n    },\n    canTarget: function(shadow) {\n      return shadow && Boolean(shadow.elementFromPoint);\n    },\n    targetingShadow: function(inEl) {\n      var s = this.shadow(inEl);\n      if (this.canTarget(s)) {\n        return s;\n      }\n    },\n    olderShadow: function(shadow) {\n      var os = shadow.olderShadowRoot;\n      if (!os) {\n        var se = shadow.querySelector('shadow');\n        if (se) {\n          os = se.olderShadowRoot;\n        }\n      }\n      return os;\n    },\n    allShadows: function(element) {\n      var shadows = [];\n      var s = this.shadow(element);\n      while (s) {\n        shadows.push(s);\n        s = this.olderShadow(s);\n      }\n      return shadows;\n    },\n    searchRoot: function(inRoot, x, y) {\n      if (inRoot) {\n        var t = inRoot.elementFromPoint(x, y);\n        var st, sr;\n\n        // is element a shadow host?\n        sr = this.targetingShadow(t);\n        while (sr) {\n\n          // find the the element inside the shadow root\n          st = sr.elementFromPoint(x, y);\n          if (!st) {\n\n            // check for older shadows\n            sr = this.olderShadow(sr);\n          } else {\n\n            // shadowed element may contain a shadow root\n            var ssr = this.targetingShadow(st);\n            return this.searchRoot(ssr, x, y) || st;\n          }\n        }\n\n        // light dom element is the target\n        return t;\n      }\n    },\n    owner: function(element) {\n      var s = element;\n\n      // walk up until you hit the shadow root or document\n      while (s.parentNode) {\n        s = s.parentNode;\n      }\n\n      // the owner element is expected to be a Document or ShadowRoot\n      if (s.nodeType !== Node.DOCUMENT_NODE && s.nodeType !== Node.DOCUMENT_FRAGMENT_NODE) {\n        s = document;\n      }\n      return s;\n    },\n    findTarget: function(inEvent) {\n      var x = inEvent.clientX;\n      var y = inEvent.clientY;\n\n      // if the listener is in the shadow root, it is much faster to start there\n      var s = this.owner(inEvent.target);\n\n      // if x, y is not in this root, fall back to document search\n      if (!s.elementFromPoint(x, y)) {\n        s = document;\n      }\n      return this.searchRoot(s, x, y);\n    }\n  };\n\n  var forEach = Array.prototype.forEach.call.bind(Array.prototype.forEach);\n  var map = Array.prototype.map.call.bind(Array.prototype.map);\n  var toArray = Array.prototype.slice.call.bind(Array.prototype.slice);\n  var filter = Array.prototype.filter.call.bind(Array.prototype.filter);\n  var MO = window.MutationObserver || window.WebKitMutationObserver;\n  var SELECTOR = '[touch-action]';\n  var OBSERVER_INIT = {\n    subtree: true,\n    childList: true,\n    attributes: true,\n    attributeOldValue: true,\n    attributeFilter: ['touch-action']\n  };\n\n  function Installer(add, remove, changed, binder) {\n    this.addCallback = add.bind(binder);\n    this.removeCallback = remove.bind(binder);\n    this.changedCallback = changed.bind(binder);\n    if (MO) {\n      this.observer = new MO(this.mutationWatcher.bind(this));\n    }\n  }\n\n  Installer.prototype = {\n    watchSubtree: function(target) {\n\n      // Only watch scopes that can target find, as these are top-level.\n      // Otherwise we can see duplicate additions and removals that add noise.\n      //\n      // TODO(dfreedman): For some instances with ShadowDOMPolyfill, we can see\n      // a removal without an insertion when a node is redistributed among\n      // shadows. Since it all ends up correct in the document, watching only\n      // the document will yield the correct mutations to watch.\n      if (this.observer && targeting.canTarget(target)) {\n        this.observer.observe(target, OBSERVER_INIT);\n      }\n    },\n    enableOnSubtree: function(target) {\n      this.watchSubtree(target);\n      if (target === document && document.readyState !== 'complete') {\n        this.installOnLoad();\n      } else {\n        this.installNewSubtree(target);\n      }\n    },\n    installNewSubtree: function(target) {\n      forEach(this.findElements(target), this.addElement, this);\n    },\n    findElements: function(target) {\n      if (target.querySelectorAll) {\n        return target.querySelectorAll(SELECTOR);\n      }\n      return [];\n    },\n    removeElement: function(el) {\n      this.removeCallback(el);\n    },\n    addElement: function(el) {\n      this.addCallback(el);\n    },\n    elementChanged: function(el, oldValue) {\n      this.changedCallback(el, oldValue);\n    },\n    concatLists: function(accum, list) {\n      return accum.concat(toArray(list));\n    },\n\n    // register all touch-action = none nodes on document load\n    installOnLoad: function() {\n      document.addEventListener('readystatechange', function() {\n        if (document.readyState === 'complete') {\n          this.installNewSubtree(document);\n        }\n      }.bind(this));\n    },\n    isElement: function(n) {\n      return n.nodeType === Node.ELEMENT_NODE;\n    },\n    flattenMutationTree: function(inNodes) {\n\n      // find children with touch-action\n      var tree = map(inNodes, this.findElements, this);\n\n      // make sure the added nodes are accounted for\n      tree.push(filter(inNodes, this.isElement));\n\n      // flatten the list\n      return tree.reduce(this.concatLists, []);\n    },\n    mutationWatcher: function(mutations) {\n      mutations.forEach(this.mutationHandler, this);\n    },\n    mutationHandler: function(m) {\n      if (m.type === 'childList') {\n        var added = this.flattenMutationTree(m.addedNodes);\n        added.forEach(this.addElement, this);\n        var removed = this.flattenMutationTree(m.removedNodes);\n        removed.forEach(this.removeElement, this);\n      } else if (m.type === 'attributes') {\n        this.elementChanged(m.target, m.oldValue);\n      }\n    }\n  };\n\n  function shadowSelector(s) {\n    return 'body /shadow-deep/ ' + s;\n  }\n  function rule(v) {\n    return '{ -ms-touch-action: ' + v + '; touch-action: ' + v + '; }';\n  }\n  var attrib2css = [\n    { selector: '[touch-action=\"none\"]', value: 'none' },\n    { selector: '[touch-action=\"auto\"]', value: 'auto' },\n    { selector: '[touch-action~=\"pan-x\"]', value: 'pan-x' },\n    { selector: '[touch-action~=\"pan-y\"]', value: 'pan-y' },\n    { selector: '[touch-action~=\"pan-up\"]', value: 'pan-up' },\n    { selector: '[touch-action~=\"pan-down\"]', value: 'pan-down' },\n    { selector: '[touch-action~=\"pan-left\"]', value: 'pan-left' },\n    { selector: '[touch-action~=\"pan-right\"]', value: 'pan-right' }\n  ];\n  var styles = '';\n\n  // only install stylesheet if the browser has touch action support\n  var hasNativePE = window.PointerEvent || window.MSPointerEvent;\n\n  // only add shadow selectors if shadowdom is supported\n  var hasShadowRoot = !window.ShadowDOMPolyfill && document.head.createShadowRoot;\n\n  function applyAttributeStyles() {\n    if (hasNativePE) {\n      attrib2css.forEach(function(r) {\n        styles += r.selector + rule(r.value) + '\\n';\n        if (hasShadowRoot) {\n          styles += shadowSelector(r.selector) + rule(r.value) + '\\n';\n        }\n      });\n\n      var el = document.createElement('style');\n      el.textContent = styles;\n      document.head.appendChild(el);\n    }\n  }\n\n  var pointermap = dispatcher.pointermap;\n\n  // radius around touchend that swallows mouse events\n  var DEDUP_DIST = 25;\n\n  // left, middle, right, back, forward\n  var BUTTON_TO_BUTTONS = [1, 4, 2, 8, 16];\n\n  var HAS_BUTTONS = false;\n  try {\n    HAS_BUTTONS = new MouseEvent('test', { buttons: 1 }).buttons === 1;\n  } catch (e) {}\n\n  // handler block for native mouse events\n  var mouseEvents = {\n    POINTER_ID: 1,\n    POINTER_TYPE: 'mouse',\n    events: [\n      'mousedown',\n      'webkitmouseforcechanged',\n      'mousemove',\n      'mouseup',\n      'mouseover',\n      'mouseout'\n    ],\n    register: function(target) {\n      dispatcher.listen(target, this.events);\n    },\n    unregister: function(target) {\n      dispatcher.unlisten(target, this.events);\n    },\n    lastTouches: [],\n\n    // collide with the global mouse listener\n    isEventSimulatedFromTouch: function(inEvent) {\n      var lts = this.lastTouches;\n      var x = inEvent.clientX;\n      var y = inEvent.clientY;\n      for (var i = 0, l = lts.length, t; i < l && (t = lts[i]); i++) {\n\n        // simulated mouse events will be swallowed near a primary touchend\n        var dx = Math.abs(x - t.x);\n        var dy = Math.abs(y - t.y);\n        if (dx <= DEDUP_DIST && dy <= DEDUP_DIST) {\n          return true;\n        }\n      }\n    },\n    prepareEvent: function(inEvent) {\n      var e = dispatcher.cloneEvent(inEvent);\n\n      // forward mouse preventDefault\n      var pd = e.preventDefault;\n      e.preventDefault = function() {\n        inEvent.preventDefault();\n        pd();\n      };\n      e.pointerId = this.POINTER_ID;\n      e.isPrimary = true;\n      e.pointerType = this.POINTER_TYPE;\n      if ('webkitForce' in inEvent) {\n        e.pressure = inEvent.webkitForce - MouseEvent.WEBKIT_FORCE_AT_MOUSE_DOWN;\n      }\n      return e;\n    },\n    prepareButtonsForMove: function(e, inEvent) {\n      var p = pointermap.get(this.POINTER_ID);\n\n      // Update buttons state after possible out-of-document mouseup.\n      if (inEvent.which === 0 || !p) {\n        e.buttons = 0;\n      } else {\n        e.buttons = p.buttons;\n      }\n      inEvent.buttons = e.buttons;\n    },\n    mousedown: function(inEvent) {\n      if (!this.isEventSimulatedFromTouch(inEvent)) {\n        var p = pointermap.get(this.POINTER_ID);\n        var e = this.prepareEvent(inEvent);\n        if (!HAS_BUTTONS) {\n          e.buttons = BUTTON_TO_BUTTONS[e.button];\n          if (p) { e.buttons |= p.buttons; }\n          inEvent.buttons = e.buttons;\n        }\n        pointermap.set(this.POINTER_ID, inEvent);\n        if (!p || p.buttons === 0) {\n          dispatcher.down(e);\n        } else {\n          dispatcher.move(e);\n        }\n      }\n    },\n\n    // This is called when the user force presses without moving x/y\n    webkitmouseforcechanged: function(inEvent) {\n      this.mousemove(inEvent);\n    },\n    mousemove: function(inEvent) {\n      if (!this.isEventSimulatedFromTouch(inEvent)) {\n        var e = this.prepareEvent(inEvent);\n        if (!HAS_BUTTONS) { this.prepareButtonsForMove(e, inEvent); }\n        e.button = -1;\n        pointermap.set(this.POINTER_ID, inEvent);\n        dispatcher.move(e);\n      }\n    },\n    mouseup: function(inEvent) {\n      if (!this.isEventSimulatedFromTouch(inEvent)) {\n        var p = pointermap.get(this.POINTER_ID);\n        var e = this.prepareEvent(inEvent);\n        if (!HAS_BUTTONS) {\n          var up = BUTTON_TO_BUTTONS[e.button];\n\n          // Produces wrong state of buttons in Browsers without `buttons` support\n          // when a mouse button that was pressed outside the document is released\n          // inside and other buttons are still pressed down.\n          e.buttons = p ? p.buttons & ~up : 0;\n          inEvent.buttons = e.buttons;\n        }\n        pointermap.set(this.POINTER_ID, inEvent);\n\n        // Support: Firefox <=44 only\n        // FF Ubuntu includes the lifted button in the `buttons` property on\n        // mouseup.\n        // https://bugzilla.mozilla.org/show_bug.cgi?id=1223366\n        e.buttons &= ~BUTTON_TO_BUTTONS[e.button];\n        if (e.buttons === 0) {\n          dispatcher.up(e);\n        } else {\n          dispatcher.move(e);\n        }\n      }\n    },\n    mouseover: function(inEvent) {\n      if (!this.isEventSimulatedFromTouch(inEvent)) {\n        var e = this.prepareEvent(inEvent);\n        if (!HAS_BUTTONS) { this.prepareButtonsForMove(e, inEvent); }\n        e.button = -1;\n        pointermap.set(this.POINTER_ID, inEvent);\n        dispatcher.enterOver(e);\n      }\n    },\n    mouseout: function(inEvent) {\n      if (!this.isEventSimulatedFromTouch(inEvent)) {\n        var e = this.prepareEvent(inEvent);\n        if (!HAS_BUTTONS) { this.prepareButtonsForMove(e, inEvent); }\n        e.button = -1;\n        dispatcher.leaveOut(e);\n      }\n    },\n    cancel: function(inEvent) {\n      var e = this.prepareEvent(inEvent);\n      dispatcher.cancel(e);\n      this.deactivateMouse();\n    },\n    deactivateMouse: function() {\n      pointermap.delete(this.POINTER_ID);\n    }\n  };\n\n  var captureInfo = dispatcher.captureInfo;\n  var findTarget = targeting.findTarget.bind(targeting);\n  var allShadows = targeting.allShadows.bind(targeting);\n  var pointermap$1 = dispatcher.pointermap;\n\n  // this should be long enough to ignore compat mouse events made by touch\n  var DEDUP_TIMEOUT = 2500;\n  var ATTRIB = 'touch-action';\n  var INSTALLER;\n\n  // bitmask for _scrollType\n  var UP = 1;\n  var DOWN = 2;\n  var LEFT = 4;\n  var RIGHT = 8;\n  var AUTO = UP | DOWN | LEFT | RIGHT;\n\n  // handler block for native touch events\n  var touchEvents = {\n    events: [\n      'touchstart',\n      'touchmove',\n      'touchforcechange',\n      'touchend',\n      'touchcancel'\n    ],\n    register: function(target) {\n      INSTALLER.enableOnSubtree(target);\n    },\n    unregister: function() {\n\n      // TODO(dfreedman): is it worth it to disconnect the MO?\n    },\n    elementAdded: function(el) {\n      var a = el.getAttribute(ATTRIB);\n      var st = this.touchActionToScrollType(a);\n      if (typeof st === \"number\") {\n        el._scrollType = st;\n        dispatcher.listen(el, this.events);\n\n        // set touch-action on shadows as well\n        allShadows(el).forEach(function(s) {\n          s._scrollType = st;\n          dispatcher.listen(s, this.events);\n        }, this);\n      }\n    },\n    elementRemoved: function(el) {\n\n      // In some cases, an element is removed before a touchend.\n      // When this is the case, we should wait for the touchend before unlistening,\n      // because we still want pointer events to bubble up after removing from DOM.\n      if (pointermap$1.size > 0) {\n        var evts = this.events;\n        el.addEventListener('touchend', function() {\n          el._scrollType = undefined;\n          dispatcher.unlisten(el, evts);\n        });\n      } else {\n        el._scrollType = undefined;\n        dispatcher.unlisten(el, this.events);\n      }\n\n      // remove touch-action from shadow\n      allShadows(el).forEach(function(s) {\n        s._scrollType = undefined;\n        dispatcher.unlisten(s, this.events);\n      }, this);\n    },\n    elementChanged: function(el, oldValue) {\n      var a = el.getAttribute(ATTRIB);\n      var st = this.touchActionToScrollType(a);\n      var oldSt = this.touchActionToScrollType(oldValue);\n\n      // simply update scrollType if listeners are already established\n      if (typeof st === \"number\" && typeof oldSt === \"number\") {\n        el._scrollType = st;\n        allShadows(el).forEach(function(s) {\n          s._scrollType = st;\n        }, this);\n      } else if (typeof oldSt === \"number\") {\n        this.elementRemoved(el);\n      } else if (typeof st === \"number\") {\n        this.elementAdded(el);\n      }\n    },\n    scrollTypes: {\n      UP: function(s) {\n        return s.includes('pan-y') || s.includes('pan-up') ? UP : 0;\n      },\n      DOWN: function(s) {\n        return s.includes('pan-y') || s.includes('pan-down') ? DOWN : 0;\n      },\n      LEFT: function(s) {\n        return s.includes('pan-x') || s.includes('pan-left') ? LEFT : 0;\n      },\n      RIGHT: function(s) {\n        return s.includes('pan-x') || s.includes('pan-right') ? RIGHT : 0;\n      }\n    },\n    touchActionToScrollType: function(touchAction) {\n      if (!touchAction) {\n        return;\n      }\n\n      if (touchAction === \"auto\") {\n        return AUTO;\n      }\n\n      if (touchAction === \"none\") {\n        return 0;\n      }\n\n      var s = touchAction.split(' ');\n      var st = this.scrollTypes;\n\n      // construct a bitmask of allowed scroll directions\n      return st.UP(s) | st.DOWN(s) | st.LEFT(s) | st.RIGHT(s);\n    },\n    POINTER_TYPE: 'touch',\n    firstTouch: null,\n    isPrimaryTouch: function(inTouch) {\n      return this.firstTouch === inTouch.identifier;\n    },\n    setPrimaryTouch: function(inTouch) {\n\n      // set primary touch if there no pointers, or the only pointer is the mouse\n      if (pointermap$1.size === 0 || (pointermap$1.size === 1 && pointermap$1.has(1))) {\n        this.firstTouch = inTouch.identifier;\n        this.firstXY = { X: inTouch.clientX, Y: inTouch.clientY };\n        this.scrolling = false;\n      }\n    },\n    removePrimaryPointer: function(inPointer) {\n      if (inPointer.isPrimary) {\n        this.firstTouch = null;\n        this.firstXY = null;\n      }\n    },\n    typeToButtons: function(type) {\n      var ret = 0;\n      if (type === 'touchstart' || type === 'touchmove' || type === 'touchforcechange') {\n        ret = 1;\n      }\n      return ret;\n    },\n    touchToPointer: function(inTouch) {\n      var cte = this.currentTouchEvent;\n      var e = dispatcher.cloneEvent(inTouch);\n\n      // We reserve pointerId 1 for Mouse.\n      // Touch identifiers can start at 0.\n      // Add 2 to the touch identifier for compatibility.\n      var id = e.pointerId = inTouch.identifier + 2;\n      e.target = captureInfo[id] || findTarget(e);\n      e.bubbles = true;\n      e.cancelable = true;\n      e.button = 0;\n      e.buttons = this.typeToButtons(cte.type);\n      e.width = (inTouch.radiusX || inTouch.webkitRadiusX || 0) * 2;\n      e.height = (inTouch.radiusY || inTouch.webkitRadiusY || 0) * 2;\n      e.pressure = inTouch.force !== undefined ?\n        inTouch.force :\n        inTouch.webkitForce !== undefined ?\n          inTouch.webkitForce : undefined;\n      e.isPrimary = this.isPrimaryTouch(inTouch);\n      if (inTouch.altitudeAngle) {\n        var tan = Math.tan(inTouch.altitudeAngle);\n        var radToDeg = 180 / Math.PI;\n        e.tiltX = Math.atan(Math.cos(inTouch.azimuthAngle) / tan) * radToDeg;\n        e.tiltY = Math.atan(Math.sin(inTouch.azimuthAngle) / tan) * radToDeg;\n      } else {\n        e.tiltX = 0;\n        e.tiltY = 0;\n      }\n      if (inTouch.touchType === 'stylus') {\n        e.pointerType = 'pen';\n      } else {\n        e.pointerType = this.POINTER_TYPE;\n      }\n\n      // forward modifier keys\n      e.altKey = cte.altKey;\n      e.ctrlKey = cte.ctrlKey;\n      e.metaKey = cte.metaKey;\n      e.shiftKey = cte.shiftKey;\n\n      // forward touch preventDefaults\n      var self = this;\n      e.preventDefault = function() {\n        self.scrolling = false;\n        self.firstXY = null;\n        cte.preventDefault();\n      };\n      return e;\n    },\n    processTouches: function(inEvent, inFunction) {\n      var tl = inEvent.changedTouches;\n      this.currentTouchEvent = inEvent;\n      for (var i = 0, t; i < tl.length; i++) {\n        t = tl[i];\n        inFunction.call(this, this.touchToPointer(t));\n      }\n    },\n\n    // For single axis scrollers, determines whether the element should emit\n    // pointer events or behave as a scroller\n    shouldScroll: function(inEvent) {\n      if (this.firstXY) {\n        var ret;\n        var st = inEvent.currentTarget._scrollType;\n        if (st === 0) {\n\n          // this element is a `touch-action: none`, should never scroll\n          ret = false;\n        } else if (st === AUTO) {\n\n          // this element is a `touch-action: auto`, should always scroll\n          ret = true;\n        } else {\n          var t = inEvent.changedTouches[0];\n\n          var dy = t.clientY - this.firstXY.Y;\n          var dya = Math.abs(dy);\n          var dx = t.clientX - this.firstXY.X;\n          var dxa = Math.abs(dx);\n\n          var up = st & UP;\n          var down = st & DOWN;\n          var left = st & LEFT;\n          var right = st & RIGHT;\n\n          if (left && right) {\n\n            // should scroll on the x axis\n            ret = dxa > dya;\n          } else if (left) {\n\n            // should scroll left\n            ret = dxa > dya && dx > 0;\n          } else if (right) {\n\n            // should scroll right\n            ret = dxa > dya && dx < 0;\n          }\n\n          if (!ret) {\n            if (up && down) {\n\n              // should scroll on the y axis\n              ret = dxa < dya;\n            } else if (up) {\n\n              // should scroll up\n              ret = dxa < dya && dy > 0;\n            } else if (down) {\n\n              // should scroll down\n              ret = dxa < dya && dy < 0;\n            }\n          }\n\n        }\n        this.firstXY = null;\n        return ret;\n      }\n    },\n    findTouch: function(inTL, inId) {\n      for (var i = 0, l = inTL.length, t; i < l && (t = inTL[i]); i++) {\n        if (t.identifier === inId) {\n          return true;\n        }\n      }\n    },\n\n    // In some instances, a touchstart can happen without a touchend. This\n    // leaves the pointermap in a broken state.\n    // Therefore, on every touchstart, we remove the touches that did not fire a\n    // touchend event.\n    // To keep state globally consistent, we fire a\n    // pointercancel for this \"abandoned\" touch\n    vacuumTouches: function(inEvent) {\n      var tl = inEvent.touches;\n\n      // pointermap.size should be < tl.length here, as the touchstart has not\n      // been processed yet.\n      if (pointermap$1.size >= tl.length) {\n        var d = [];\n        pointermap$1.forEach(function(value, key) {\n\n          // Never remove pointerId == 1, which is mouse.\n          // Touch identifiers are 2 smaller than their pointerId, which is the\n          // index in pointermap.\n          if (key !== 1 && !this.findTouch(tl, key - 2)) {\n            var p = value.out;\n            d.push(p);\n          }\n        }, this);\n        d.forEach(this.cancelOut, this);\n      }\n    },\n    touchstart: function(inEvent) {\n      this.vacuumTouches(inEvent);\n      this.setPrimaryTouch(inEvent.changedTouches[0]);\n      this.dedupSynthMouse(inEvent);\n      if (!this.scrolling) {\n        this.processTouches(inEvent, this.overDown);\n      }\n    },\n    overDown: function(inPointer) {\n      pointermap$1.set(inPointer.pointerId, {\n        target: inPointer.target,\n        out: inPointer,\n        outTarget: inPointer.target\n      });\n      dispatcher.enterOver(inPointer);\n      dispatcher.down(inPointer);\n    },\n\n    // Called when pressure or tilt changes without the x/y changing\n    touchforcechange: function(inEvent) {\n      this.touchmove(inEvent);\n    },\n    touchmove: function(inEvent) {\n      if (!this.scrolling) {\n        if (this.shouldScroll(inEvent)) {\n          this.scrolling = true;\n          this.touchcancel(inEvent);\n        } else {\n          if (inEvent.type !== 'touchforcechange') {\n            inEvent.preventDefault();\n          }\n          this.processTouches(inEvent, this.moveOverOut);\n        }\n      }\n    },\n    moveOverOut: function(inPointer) {\n      var event = inPointer;\n      var pointer = pointermap$1.get(event.pointerId);\n\n      // a finger drifted off the screen, ignore it\n      if (!pointer) {\n        return;\n      }\n      var outEvent = pointer.out;\n      var outTarget = pointer.outTarget;\n      dispatcher.move(event);\n      if (outEvent && outTarget !== event.target) {\n        outEvent.relatedTarget = event.target;\n        event.relatedTarget = outTarget;\n\n        // recover from retargeting by shadow\n        outEvent.target = outTarget;\n        if (event.target) {\n          dispatcher.leaveOut(outEvent);\n          dispatcher.enterOver(event);\n        } else {\n\n          // clean up case when finger leaves the screen\n          event.target = outTarget;\n          event.relatedTarget = null;\n          this.cancelOut(event);\n        }\n      }\n      pointer.out = event;\n      pointer.outTarget = event.target;\n    },\n    touchend: function(inEvent) {\n      this.dedupSynthMouse(inEvent);\n      this.processTouches(inEvent, this.upOut);\n    },\n    upOut: function(inPointer) {\n      if (!this.scrolling) {\n        dispatcher.up(inPointer);\n        dispatcher.leaveOut(inPointer);\n      }\n      this.cleanUpPointer(inPointer);\n    },\n    touchcancel: function(inEvent) {\n      this.processTouches(inEvent, this.cancelOut);\n    },\n    cancelOut: function(inPointer) {\n      dispatcher.cancel(inPointer);\n      dispatcher.leaveOut(inPointer);\n      this.cleanUpPointer(inPointer);\n    },\n    cleanUpPointer: function(inPointer) {\n      pointermap$1.delete(inPointer.pointerId);\n      this.removePrimaryPointer(inPointer);\n    },\n\n    // prevent synth mouse events from creating pointer events\n    dedupSynthMouse: function(inEvent) {\n      var lts = mouseEvents.lastTouches;\n      var t = inEvent.changedTouches[0];\n\n      // only the primary finger will synth mouse events\n      if (this.isPrimaryTouch(t)) {\n\n        // remember x/y of last touch\n        var lt = { x: t.clientX, y: t.clientY };\n        lts.push(lt);\n        var fn = (function(lts, lt) {\n          var i = lts.indexOf(lt);\n          if (i > -1) {\n            lts.splice(i, 1);\n          }\n        }).bind(null, lts, lt);\n        setTimeout(fn, DEDUP_TIMEOUT);\n      }\n    }\n  };\n\n  INSTALLER = new Installer(touchEvents.elementAdded, touchEvents.elementRemoved,\n    touchEvents.elementChanged, touchEvents);\n\n  var pointermap$2 = dispatcher.pointermap;\n  var HAS_BITMAP_TYPE = window.MSPointerEvent &&\n    typeof window.MSPointerEvent.MSPOINTER_TYPE_MOUSE === 'number';\n  var msEvents = {\n    events: [\n      'MSPointerDown',\n      'MSPointerMove',\n      'MSPointerUp',\n      'MSPointerOut',\n      'MSPointerOver',\n      'MSPointerCancel',\n      'MSGotPointerCapture',\n      'MSLostPointerCapture'\n    ],\n    register: function(target) {\n      dispatcher.listen(target, this.events);\n    },\n    unregister: function(target) {\n      dispatcher.unlisten(target, this.events);\n    },\n    POINTER_TYPES: [\n      '',\n      'unavailable',\n      'touch',\n      'pen',\n      'mouse'\n    ],\n    prepareEvent: function(inEvent) {\n      var e = inEvent;\n      if (HAS_BITMAP_TYPE) {\n        e = dispatcher.cloneEvent(inEvent);\n        e.pointerType = this.POINTER_TYPES[inEvent.pointerType];\n      }\n      return e;\n    },\n    cleanup: function(id) {\n      pointermap$2.delete(id);\n    },\n    MSPointerDown: function(inEvent) {\n      pointermap$2.set(inEvent.pointerId, inEvent);\n      var e = this.prepareEvent(inEvent);\n      dispatcher.down(e);\n    },\n    MSPointerMove: function(inEvent) {\n      var e = this.prepareEvent(inEvent);\n      dispatcher.move(e);\n    },\n    MSPointerUp: function(inEvent) {\n      var e = this.prepareEvent(inEvent);\n      dispatcher.up(e);\n      this.cleanup(inEvent.pointerId);\n    },\n    MSPointerOut: function(inEvent) {\n      var e = this.prepareEvent(inEvent);\n      dispatcher.leaveOut(e);\n    },\n    MSPointerOver: function(inEvent) {\n      var e = this.prepareEvent(inEvent);\n      dispatcher.enterOver(e);\n    },\n    MSPointerCancel: function(inEvent) {\n      var e = this.prepareEvent(inEvent);\n      dispatcher.cancel(e);\n      this.cleanup(inEvent.pointerId);\n    },\n    MSLostPointerCapture: function(inEvent) {\n      var e = dispatcher.makeEvent('lostpointercapture', inEvent);\n      dispatcher.dispatchEvent(e);\n    },\n    MSGotPointerCapture: function(inEvent) {\n      var e = dispatcher.makeEvent('gotpointercapture', inEvent);\n      dispatcher.dispatchEvent(e);\n    }\n  };\n\n  function applyPolyfill() {\n\n    // only activate if this platform does not have pointer events\n    if (!window.PointerEvent) {\n      window.PointerEvent = PointerEvent;\n\n      if (window.navigator.msPointerEnabled) {\n        var tp = window.navigator.msMaxTouchPoints;\n        Object.defineProperty(window.navigator, 'maxTouchPoints', {\n          value: tp,\n          enumerable: true\n        });\n        dispatcher.registerSource('ms', msEvents);\n      } else {\n        Object.defineProperty(window.navigator, 'maxTouchPoints', {\n          value: 0,\n          enumerable: true\n        });\n        dispatcher.registerSource('mouse', mouseEvents);\n        if (window.ontouchstart !== undefined) {\n          dispatcher.registerSource('touch', touchEvents);\n        }\n      }\n\n      dispatcher.register(document);\n    }\n  }\n\n  var n = window.navigator;\n  var s;\n  var r;\n  var h;\n  function assertActive(id) {\n    if (!dispatcher.pointermap.has(id)) {\n      var error = new Error('NotFoundError');\n      error.name = 'NotFoundError';\n      throw error;\n    }\n  }\n  function assertConnected(elem) {\n    var parent = elem.parentNode;\n    while (parent && parent !== elem.ownerDocument) {\n      parent = parent.parentNode;\n    }\n    if (!parent) {\n      var error = new Error('InvalidStateError');\n      error.name = 'InvalidStateError';\n      throw error;\n    }\n  }\n  function inActiveButtonState(id) {\n    var p = dispatcher.pointermap.get(id);\n    return p.buttons !== 0;\n  }\n  if (n.msPointerEnabled) {\n    s = function(pointerId) {\n      assertActive(pointerId);\n      assertConnected(this);\n      if (inActiveButtonState(pointerId)) {\n        dispatcher.setCapture(pointerId, this, true);\n        this.msSetPointerCapture(pointerId);\n      }\n    };\n    r = function(pointerId) {\n      assertActive(pointerId);\n      dispatcher.releaseCapture(pointerId, true);\n      this.msReleasePointerCapture(pointerId);\n    };\n  } else {\n    s = function setPointerCapture(pointerId) {\n      assertActive(pointerId);\n      assertConnected(this);\n      if (inActiveButtonState(pointerId)) {\n        dispatcher.setCapture(pointerId, this);\n      }\n    };\n    r = function releasePointerCapture(pointerId) {\n      assertActive(pointerId);\n      dispatcher.releaseCapture(pointerId);\n    };\n  }\n  h = function hasPointerCapture(pointerId) {\n    return !!dispatcher.captureInfo[pointerId];\n  };\n\n  function applyPolyfill$1() {\n    if (window.Element && !Element.prototype.setPointerCapture) {\n      Object.defineProperties(Element.prototype, {\n        'setPointerCapture': {\n          value: s\n        },\n        'releasePointerCapture': {\n          value: r\n        },\n        'hasPointerCapture': {\n          value: h\n        }\n      });\n    }\n  }\n\n  applyAttributeStyles();\n  applyPolyfill();\n  applyPolyfill$1();\n\n  var pointerevents = {\n    dispatcher: dispatcher,\n    Installer: Installer,\n    PointerEvent: PointerEvent,\n    PointerMap: PointerMap,\n    targetFinding: targeting\n  };\n\n  return pointerevents;\n\n}));"],"sourceRoot":""}